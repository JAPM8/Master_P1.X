

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Sep 14 15:23:20 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463                           
   464                           	psect	idataBANK0
   465  05D5                     __pidataBANK0:
   466                           
   467                           ;initializer for _temp
   468  05D5  3418               	retlw	24
   469  05D6  3400               	retlw	0
   470                           
   471                           	psect	strings
   472  0454                     __pstrings:
   473  0454                     stringtab:
   474  0454                     __stringtab:
   475  0454                     stringcode:	
   476                           ;	String table - string pointers are 1 byte each
   477                           
   478  0454                     stringdir:
   479  0454  3004               	movlw	high stringdir
   480  0455  008A               	movwf	10
   481  0456  0804               	movf	4,w
   482  0457  0A84               	incf	4,f
   483  0458  0782               	addwf	2,f
   484  0459                     __stringbase:
   485  0459  3400               	retlw	0
   486  045A                     __end_of__stringtab:
   487  045A                     _dpowers:
   488  045A  3401               	retlw	1
   489  045B  3400               	retlw	0
   490  045C  340A               	retlw	10
   491  045D  3400               	retlw	0
   492  045E  3464               	retlw	100
   493  045F  3400               	retlw	0
   494  0460  34E8               	retlw	232
   495  0461  3403               	retlw	3
   496  0462  3410               	retlw	16
   497  0463  3427               	retlw	39
   498  0464                     __end_of_dpowers:
   499  001A                     _RCREG	set	26
   500  0018                     _RCSTAbits	set	24
   501  000B                     _INTCONbits	set	11
   502  000C                     _PIR1bits	set	12
   503  0029                     _RA1	set	41
   504  0028                     _RA0	set	40
   505  002D                     _RA5	set	45
   506  002C                     _RA4	set	44
   507  002B                     _RA3	set	43
   508  002A                     _RA2	set	42
   509  008C                     _PIE1bits	set	140
   510  0099                     _SPBRG	set	153
   511  009A                     _SPBRGH	set	154
   512  0098                     _TXSTAbits	set	152
   513  008F                     _OSCCONbits	set	143
   514  0086                     _TRISB	set	134
   515  0085                     _TRISA	set	133
   516  0187                     _BAUDCTLbits	set	391
   517  0189                     _ANSELH	set	393
   518  0188                     _ANSEL	set	392
   519  0464                     STR_1:
   520  0464  3425               	retlw	37	;'%'
   521  0465  3464               	retlw	100	;'d'
   522  0466  3425               	retlw	37	;'%'
   523  0467  3464               	retlw	100	;'d'
   524  0468  343A               	retlw	58	;':'
   525  0469  3425               	retlw	37	;'%'
   526  046A  3464               	retlw	100	;'d'
   527  046B  3425               	retlw	37	;'%'
   528  046C  3464               	retlw	100	;'d'
   529  046D  3420               	retlw	32	;' '
   530  046E  3420               	retlw	32	;' '
   531  046F  3420               	retlw	32	;' '
   532  0470  3420               	retlw	32	;' '
   533  0471  344C               	retlw	76	;'L'
   534  0472  3475               	retlw	117	;'u'
   535  0473  347A               	retlw	122	;'z'
   536  0474  343A               	retlw	58	;':'
   537  0475  3420               	retlw	32	;' '
   538  0476  3425               	retlw	37	;'%'
   539  0477  3432               	retlw	50	;'2'
   540  0478  3464               	retlw	100	;'d'
   541  0479  3400               	retlw	0
   542  047A                     STR_2:
   543  047A  344D               	retlw	77	;'M'
   544  047B  346F               	retlw	111	;'o'
   545  047C  3476               	retlw	118	;'v'
   546  047D  343A               	retlw	58	;':'
   547  047E  3420               	retlw	32	;' '
   548  047F  3425               	retlw	37	;'%'
   549  0480  3464               	retlw	100	;'d'
   550  0481  3420               	retlw	32	;' '
   551  0482  3420               	retlw	32	;' '
   552  0483  3454               	retlw	84	;'T'
   553  0484  3465               	retlw	101	;'e'
   554  0485  346D               	retlw	109	;'m'
   555  0486  3470               	retlw	112	;'p'
   556  0487  343A               	retlw	58	;':'
   557  0488  3420               	retlw	32	;' '
   558  0489  3425               	retlw	37	;'%'
   559  048A  3432               	retlw	50	;'2'
   560  048B  3464               	retlw	100	;'d'
   561  048C  3400               	retlw	0
   562                           
   563                           	psect	cinit
   564  000F                     start_initialization:	
   565                           ; #config settings
   566                           
   567  000F                     __initialization:
   568                           
   569                           ; Initialize objects allocated to BANK0
   570  000F  120A  118A  25D5  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   571  0014  00E9               	movwf	__pdataBANK0& (0+127)
   572  0015  120A  118A  25D6  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   573  001A  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   574                           
   575                           ; Clear objects allocated to BANK0
   576  001B  1383               	bcf	3,7	;select IRP bank0
   577  001C  3020               	movlw	low __pbssBANK0
   578  001D  0084               	movwf	4
   579  001E  304A               	movlw	low (__pbssBANK0+42)
   580  001F  120A  118A  25C9  120A  118A  	fcall	clear_ram0
   581                           
   582                           ; Clear objects allocated to COMMON
   583  0024  01FA               	clrf	__pbssCOMMON& (0+127)
   584  0025                     end_of_initialization:	
   585                           ;End of C runtime variable initialization code
   586                           
   587  0025                     __end_of__initialization:
   588  0025  0183               	clrf	3
   589  0026  120A  118A  2A89   	ljmp	_main	;jump to C main() function
   590                           
   591                           	psect	bssCOMMON
   592  007A                     __pbssCOMMON:
   593  007A                     _val:
   594  007A                     	ds	1
   595                           
   596                           	psect	bssBANK0
   597  0020                     __pbssBANK0:
   598  0020                     _mov:
   599  0020                     	ds	2
   600  0022                     _srow:
   601  0022                     	ds	20
   602  0036                     _frow:
   603  0036                     	ds	20
   604                           
   605                           	psect	dataBANK0
   606  0069                     __pdataBANK0:
   607  0069                     _temp:
   608  0069                     	ds	2
   609                           
   610                           	psect	clrtext
   611  05C9                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615  05C9  0064               	clrwdt	;clear the watchdog before getting into this loop
   616  05CA                     clrloop0:
   617  05CA  0180               	clrf	0	;clear RAM location pointed to by FSR
   618  05CB  0A84               	incf	4,f	;increment pointer
   619  05CC  0604               	xorwf	4,w	;XOR with final address
   620  05CD  1903               	btfsc	3,2	;have we reached the end yet?
   621  05CE  3400               	retlw	0	;all done for this memory range, return
   622  05CF  0604               	xorwf	4,w	;XOR again to restore value
   623  05D0  2DCA               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackCOMMON
   626  0070                     __pcstackCOMMON:
   627  0070                     ?_isdigit:
   628  0070                     ?_USART_read:	
   629                           ; 1 bit 
   630                           
   631  0070                     ??_USART_read:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_setup:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_Lcd_Clear:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_read_red:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_Lcd_Write_String:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_int_osc_MHz:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_master:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_master:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Lcd_Port:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Lcd_Cmd:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Lcd_Write_Char:	
   668                           ; 1 bytes @ 0x0
   669                           
   670                           
   671                           ; 1 bytes @ 0x0
   672  0070                     	ds	3
   673  0073                     ??_read_red:
   674  0073                     ??_int_osc_MHz:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     ??_isdigit:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     ??_Lcd_Port:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     ??___lldiv:	
   684                           ; 1 bytes @ 0x3
   685                           
   686  0073                     ?___wmul:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     ?___lwdiv:	
   690                           ; 2 bytes @ 0x3
   691                           
   692  0073                     Lcd_Port@a:	
   693                           ; 2 bytes @ 0x3
   694                           
   695  0073                     _isdigit$838:	
   696                           ; 1 bytes @ 0x3
   697                           
   698  0073                     ___wmul@multiplier:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     ___lwdiv@divisor:	
   702                           ; 2 bytes @ 0x3
   703                           
   704                           
   705                           ; 2 bytes @ 0x3
   706  0073                     	ds	1
   707  0074                     ??_Lcd_Cmd:
   708  0074                     ??_Lcd_Write_Char:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     isdigit@c:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ___lldiv@quotient:	
   715                           ; 1 bytes @ 0x4
   716                           
   717                           
   718                           ; 4 bytes @ 0x4
   719  0074                     	ds	1
   720  0075                     Lcd_Cmd@a:
   721  0075                     Lcd_Write_Char@temp:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0075                     int_osc_MHz@freq:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     ___wmul@multiplicand:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ___lwdiv@dividend:	
   731                           ; 2 bytes @ 0x5
   732                           
   733                           
   734                           ; 2 bytes @ 0x5
   735  0075                     	ds	1
   736  0076                     ??_Lcd_Clear:
   737  0076                     ?_Lcd_Set_Cursor:	
   738                           ; 1 bytes @ 0x6
   739                           
   740  0076                     ??_Lcd_Init:	
   741                           ; 1 bytes @ 0x6
   742                           
   743  0076                     Lcd_Set_Cursor@b:	
   744                           ; 1 bytes @ 0x6
   745                           
   746  0076                     Lcd_Write_Char@y:	
   747                           ; 1 bytes @ 0x6
   748                           
   749                           
   750                           ; 1 bytes @ 0x6
   751  0076                     	ds	1
   752  0077                     ??_Lcd_Set_Cursor:
   753  0077                     ??___wmul:	
   754                           ; 1 bytes @ 0x7
   755                           
   756  0077                     ??___lwdiv:	
   757                           ; 1 bytes @ 0x7
   758                           
   759  0077                     Lcd_Write_Char@a:	
   760                           ; 1 bytes @ 0x7
   761                           
   762  0077                     ___wmul@product:	
   763                           ; 1 bytes @ 0x7
   764                           
   765                           
   766                           ; 2 bytes @ 0x7
   767  0077                     	ds	1
   768  0078                     ??_Lcd_Write_String:
   769  0078                     ??___lwmod:	
   770                           ; 1 bytes @ 0x8
   771                           
   772  0078                     ___lldiv@counter:	
   773                           ; 1 bytes @ 0x8
   774                           
   775                           
   776                           ; 1 bytes @ 0x8
   777  0078                     	ds	1
   778  0079                     ??_setup:
   779  0079                     ___lwmod@counter:	
   780                           ; 1 bytes @ 0x9
   781                           
   782                           
   783                           ; 1 bytes @ 0x9
   784  0079                     	ds	1
   785                           
   786                           	psect	cstackBANK0
   787  004A                     __pcstackBANK0:
   788  004A                     ?___lldiv:
   789  004A                     Lcd_Set_Cursor@a:	
   790                           ; 4 bytes @ 0x0
   791                           
   792  004A                     ___lwdiv@counter:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  004A                     Lcd_Write_String@i:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  004A                     ___lldiv@divisor:	
   799                           ; 2 bytes @ 0x0
   800                           
   801                           
   802                           ; 4 bytes @ 0x0
   803  004A                     	ds	1
   804  004B                     Lcd_Set_Cursor@z:
   805  004B                     ___lwdiv@quotient:	
   806                           ; 1 bytes @ 0x1
   807                           
   808                           
   809                           ; 2 bytes @ 0x1
   810  004B                     	ds	1
   811  004C                     Lcd_Set_Cursor@y:
   812  004C                     Lcd_Write_String@a:	
   813                           ; 1 bytes @ 0x2
   814                           
   815                           
   816                           ; 1 bytes @ 0x2
   817  004C                     	ds	1
   818  004D                     ?___lwmod:
   819  004D                     Lcd_Set_Cursor@temp:	
   820                           ; 2 bytes @ 0x3
   821                           
   822  004D                     ___lwmod@divisor:	
   823                           ; 1 bytes @ 0x3
   824                           
   825                           
   826                           ; 2 bytes @ 0x3
   827  004D                     	ds	1
   828  004E                     ___lldiv@dividend:
   829                           
   830                           ; 4 bytes @ 0x4
   831  004E                     	ds	1
   832  004F                     ___lwmod@dividend:
   833                           
   834                           ; 2 bytes @ 0x5
   835  004F                     	ds	2
   836  0051                     ?_sprintf:
   837  0051                     sprintf@f:	
   838                           ; 2 bytes @ 0x7
   839                           
   840                           
   841                           ; 1 bytes @ 0x7
   842  0051                     	ds	1
   843  0052                     ?_USART_set:
   844  0052                     USART_set@baudrate:	
   845                           ; 1 bytes @ 0x8
   846                           
   847                           
   848                           ; 4 bytes @ 0x8
   849  0052                     	ds	4
   850  0056                     ??_USART_set:
   851                           
   852                           ; 1 bytes @ 0xC
   853  0056                     	ds	6
   854  005C                     ??_sprintf:
   855                           
   856                           ; 1 bytes @ 0x12
   857  005C                     	ds	3
   858  005F                     sprintf@ap:
   859                           
   860                           ; 1 bytes @ 0x15
   861  005F                     	ds	1
   862  0060                     sprintf@prec:
   863                           
   864                           ; 1 bytes @ 0x16
   865  0060                     	ds	1
   866  0061                     sprintf@flag:
   867                           
   868                           ; 1 bytes @ 0x17
   869  0061                     	ds	1
   870  0062                     sprintf@val:
   871                           
   872                           ; 2 bytes @ 0x18
   873  0062                     	ds	2
   874  0064                     sprintf@sp:
   875                           
   876                           ; 1 bytes @ 0x1A
   877  0064                     	ds	1
   878  0065                     sprintf@width:
   879                           
   880                           ; 2 bytes @ 0x1B
   881  0065                     	ds	2
   882  0067                     sprintf@c:
   883                           
   884                           ; 1 bytes @ 0x1D
   885  0067                     	ds	1
   886  0068                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x1E
   889  0068                     	ds	1
   890                           
   891                           	psect	maintext
   892  0289                     __pmaintext:	
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 82 in file "main_master_p1.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : B00/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       1       0       0       0
   915 ;;      Totals:         0       1       0       0       0
   916 ;;Total ram usage:        1 bytes
   917 ;; Hardware stack levels required when called: 6
   918 ;; This function calls:
   919 ;;		_Lcd_Clear
   920 ;;		_Lcd_Set_Cursor
   921 ;;		_Lcd_Write_String
   922 ;;		_read_red
   923 ;;		_setup
   924 ;;		_sprintf
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930  0289                     _main:	
   931                           ;psect for function _main
   932                           
   933  0289                     l1818:	
   934                           ;incstack = 0
   935                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   936                           
   937                           
   938                           ;main_master_p1.c: 83:     setup();
   939  0289  120A  118A  2511  120A  118A  	fcall	_setup
   940  028E                     l1820:
   941                           
   942                           ;main_master_p1.c: 84:     Lcd_Clear();
   943  028E  120A  118A  25BC  120A  118A  	fcall	_Lcd_Clear
   944  0293                     l1822:
   945                           
   946                           ;main_master_p1.c: 86:         read_red();
   947  0293  120A  118A  24C4  120A  118A  	fcall	_read_red
   948  0298                     l1824:
   949                           
   950                           ;main_master_p1.c: 87:         sprintf(frow, "%d%d:%d%d    Luz: %2d", 2,3,4,2,95);
   951  0298  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   952  0299  1283               	bcf	3,5	;RP0=0, select bank0
   953  029A  1303               	bcf	3,6	;RP1=0, select bank0
   954  029B  00E8               	movwf	??_main
   955  029C  0868               	movf	??_main,w
   956  029D  00D1               	movwf	sprintf@f
   957  029E  3002               	movlw	2
   958  029F  00D2               	movwf	?_sprintf+1
   959  02A0  3000               	movlw	0
   960  02A1  00D3               	movwf	?_sprintf+2
   961  02A2  3003               	movlw	3
   962  02A3  00D4               	movwf	?_sprintf+3
   963  02A4  3000               	movlw	0
   964  02A5  00D5               	movwf	?_sprintf+4
   965  02A6  3004               	movlw	4
   966  02A7  00D6               	movwf	?_sprintf+5
   967  02A8  3000               	movlw	0
   968  02A9  00D7               	movwf	?_sprintf+6
   969  02AA  3002               	movlw	2
   970  02AB  00D8               	movwf	?_sprintf+7
   971  02AC  3000               	movlw	0
   972  02AD  00D9               	movwf	?_sprintf+8
   973  02AE  305F               	movlw	95
   974  02AF  00DA               	movwf	?_sprintf+9
   975  02B0  3000               	movlw	0
   976  02B1  00DB               	movwf	?_sprintf+10
   977  02B2  3036               	movlw	(low (_frow| 0))& (0+255)
   978  02B3  120A  118A  2029  120A  118A  	fcall	_sprintf
   979  02B8                     l1826:
   980                           
   981                           ;main_master_p1.c: 88:         sprintf(srow, "Mov: %d  Temp: %2d",mov,temp);
   982  02B8  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   983  02B9  1283               	bcf	3,5	;RP0=0, select bank0
   984  02BA  1303               	bcf	3,6	;RP1=0, select bank0
   985  02BB  00E8               	movwf	??_main
   986  02BC  0868               	movf	??_main,w
   987  02BD  00D1               	movwf	sprintf@f
   988  02BE  0821               	movf	_mov+1,w
   989  02BF  00D3               	movwf	?_sprintf+2
   990  02C0  0820               	movf	_mov,w
   991  02C1  00D2               	movwf	?_sprintf+1
   992  02C2  086A               	movf	_temp+1,w
   993  02C3  00D5               	movwf	?_sprintf+4
   994  02C4  0869               	movf	_temp,w
   995  02C5  00D4               	movwf	?_sprintf+3
   996  02C6  3022               	movlw	(low (_srow| 0))& (0+255)
   997  02C7  120A  118A  2029  120A  118A  	fcall	_sprintf
   998  02CC                     l1828:
   999                           
  1000                           ;main_master_p1.c: 89:         Lcd_Set_Cursor(1,1);
  1001  02CC  01F6               	clrf	Lcd_Set_Cursor@b
  1002  02CD  0AF6               	incf	Lcd_Set_Cursor@b,f
  1003  02CE  3001               	movlw	1
  1004  02CF  120A  118A  22EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1005  02D4                     l1830:
  1006                           
  1007                           ;main_master_p1.c: 90:         Lcd_Write_String(frow);
  1008  02D4  3036               	movlw	(low (_frow| 0))& (0+255)
  1009  02D5  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_String
  1010                           
  1011                           ;main_master_p1.c: 91:         Lcd_Set_Cursor(2,1);
  1012  02DA  01F6               	clrf	Lcd_Set_Cursor@b
  1013  02DB  0AF6               	incf	Lcd_Set_Cursor@b,f
  1014  02DC  3002               	movlw	2
  1015  02DD  120A  118A  22EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1016  02E2                     l1832:
  1017                           
  1018                           ;main_master_p1.c: 92:         Lcd_Write_String(srow);
  1019  02E2  3022               	movlw	(low (_srow| 0))& (0+255)
  1020  02E3  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_String
  1021  02E8  2A93               	goto	l1822
  1022  02E9  120A  118A  280C   	ljmp	start
  1023  02EC                     __end_of_main:
  1024                           
  1025                           	psect	text1
  1026  0029                     __ptext1:	
  1027 ;; *************** function _sprintf *****************
  1028 ;; Defined at:
  1029 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  sp              1    wreg     PTR unsigned char 
  1032 ;;		 -> srow(20), frow(20), 
  1033 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  1034 ;;		 -> STR_2(19), STR_1(22), 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  1037 ;;		 -> srow(20), frow(20), 
  1038 ;;  tmpval          4    0        struct .
  1039 ;;  width           2   27[BANK0 ] int 
  1040 ;;  val             2   24[BANK0 ] unsigned int 
  1041 ;;  cp              2    0        PTR const unsigned char 
  1042 ;;  len             2    0        unsigned int 
  1043 ;;  c               1   29[BANK0 ] unsigned char 
  1044 ;;  flag            1   23[BANK0 ] unsigned char 
  1045 ;;  prec            1   22[BANK0 ] char 
  1046 ;;  ap              1   21[BANK0 ] PTR void [1]
  1047 ;;		 -> ?_sprintf(2), 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  2    7[BANK0 ] int 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0      11       0       0       0
  1058 ;;      Locals:         0       9       0       0       0
  1059 ;;      Temps:          0       3       0       0       0
  1060 ;;      Totals:         0      23       0       0       0
  1061 ;;Total ram usage:       23 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 3
  1064 ;; This function calls:
  1065 ;;		___lwdiv
  1066 ;;		___lwmod
  1067 ;;		___wmul
  1068 ;;		_isdigit
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074  0029                     _sprintf:	
  1075                           ;psect for function _sprintf
  1076                           
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1080                           ;sprintf@sp stored from wreg
  1081  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1082  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1083  002B  00E4               	movwf	sprintf@sp
  1084  002C                     l1726:
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1087  002C  3052               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1088  002D  00DC               	movwf	??_sprintf
  1089  002E  085C               	movf	??_sprintf,w
  1090  002F  00DF               	movwf	sprintf@ap
  1091                           
  1092                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1093  0030  299A               	goto	l1808
  1094  0031                     l1728:
  1095                           
  1096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1097  0031  3025               	movlw	37
  1098  0032  0667               	xorwf	sprintf@c,w
  1099  0033  1903               	btfsc	3,2
  1100  0034  2836               	goto	u1371
  1101  0035  2837               	goto	u1370
  1102  0036                     u1371:
  1103  0036  2843               	goto	l1734
  1104  0037                     u1370:
  1105  0037                     l1730:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1108  0037  0867               	movf	sprintf@c,w
  1109  0038  00DC               	movwf	??_sprintf
  1110  0039  0864               	movf	sprintf@sp,w
  1111  003A  0084               	movwf	4
  1112  003B  085C               	movf	??_sprintf,w
  1113  003C  1383               	bcf	3,7	;select IRP bank0
  1114  003D  0080               	movwf	0
  1115  003E                     l1732:
  1116  003E  3001               	movlw	1
  1117  003F  00DC               	movwf	??_sprintf
  1118  0040  085C               	movf	??_sprintf,w
  1119  0041  07E4               	addwf	sprintf@sp,f
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1122  0042  299A               	goto	l1808
  1123  0043                     l1734:
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1126  0043  01E5               	clrf	sprintf@width
  1127  0044  01E6               	clrf	sprintf@width+1
  1128                           
  1129                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1130  0045  01E1               	clrf	sprintf@flag
  1131  0046                     l1736:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1134  0046  0851               	movf	sprintf@f,w
  1135  0047  0084               	movwf	4
  1136  0048  120A  118A  2454  120A  118A  	fcall	stringdir
  1137  004D  120A  118A  25AA  120A  118A  	fcall	_isdigit
  1138  0052  1C03               	btfss	3,0
  1139  0053  2855               	goto	u1381
  1140  0054  2856               	goto	u1380
  1141  0055                     u1381:
  1142  0055  2896               	goto	l1750
  1143  0056                     u1380:
  1144  0056                     l1738:
  1145                           
  1146                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1147  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0058  01E5               	clrf	sprintf@width
  1150  0059  01E6               	clrf	sprintf@width+1
  1151  005A                     l1740:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1154  005A  300A               	movlw	10
  1155  005B  00F3               	movwf	___wmul@multiplier
  1156  005C  3000               	movlw	0
  1157  005D  00F4               	movwf	___wmul@multiplier+1
  1158  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1159  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0060  0866               	movf	sprintf@width+1,w
  1161  0061  00F6               	movwf	___wmul@multiplicand+1
  1162  0062  0865               	movf	sprintf@width,w
  1163  0063  00F5               	movwf	___wmul@multiplicand
  1164  0064  120A  118A  24EC  120A  118A  	fcall	___wmul
  1165  0069  0874               	movf	?___wmul+1,w
  1166  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1167  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1168  006C  00E6               	movwf	sprintf@width+1
  1169  006D  0873               	movf	?___wmul,w
  1170  006E  00E5               	movwf	sprintf@width
  1171  006F                     l1742:
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1174  006F  0851               	movf	sprintf@f,w
  1175  0070  0084               	movwf	4
  1176  0071  120A  118A  2454  120A  118A  	fcall	stringdir
  1177  0076  3ED0               	addlw	208
  1178  0077  00DC               	movwf	??_sprintf
  1179  0078  30FF               	movlw	255
  1180  0079  1803               	skipnc
  1181  007A  3000               	movlw	0
  1182  007B  00DD               	movwf	??_sprintf+1
  1183  007C  085C               	movf	??_sprintf,w
  1184  007D  07E5               	addwf	sprintf@width,f
  1185  007E  1803               	skipnc
  1186  007F  0AE6               	incf	sprintf@width+1,f
  1187  0080  085D               	movf	??_sprintf+1,w
  1188  0081  07E6               	addwf	sprintf@width+1,f
  1189  0082                     l1744:
  1190  0082  3001               	movlw	1
  1191  0083  00DC               	movwf	??_sprintf
  1192  0084  085C               	movf	??_sprintf,w
  1193  0085  07D1               	addwf	sprintf@f,f
  1194  0086                     l1746:
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1197  0086  0851               	movf	sprintf@f,w
  1198  0087  0084               	movwf	4
  1199  0088  120A  118A  2454  120A  118A  	fcall	stringdir
  1200  008D  120A  118A  25AA  120A  118A  	fcall	_isdigit
  1201  0092  1803               	btfsc	3,0
  1202  0093  2895               	goto	u1391
  1203  0094  2896               	goto	u1390
  1204  0095                     u1391:
  1205  0095  285A               	goto	l1740
  1206  0096                     u1390:
  1207  0096                     l1750:
  1208  0096  3001               	movlw	1
  1209  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0099  07D1               	addwf	sprintf@f,f
  1212  009A  30FF               	movlw	-1
  1213  009B  0751               	addwf	sprintf@f,w
  1214  009C  0084               	movwf	4
  1215  009D  120A  118A  2454  120A  118A  	fcall	stringdir
  1216  00A2  00E7               	movwf	sprintf@c
  1217  00A3  00DC               	movwf	??_sprintf
  1218  00A4  01DD               	clrf	??_sprintf+1
  1219                           
  1220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1221                           ; Switch size 1, requested type "simple"
  1222                           ; Number of cases is 1, Range of values is 0 to 0
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte            4     3 (average)
  1226                           ; direct_byte           11     8 (fixed)
  1227                           ; jumptable            260     6 (fixed)
  1228                           ;	Chosen strategy is simple_byte
  1229  00A5  085D               	movf	??_sprintf+1,w
  1230  00A6  3A00               	xorlw	0	; case 0
  1231  00A7  1903               	skipnz
  1232  00A8  28AA               	goto	l1874
  1233  00A9  299A               	goto	l1808
  1234  00AA                     l1874:
  1235                           
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 3, Range of values is 0 to 105
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte           10     6 (average)
  1241                           ; jumptable            260     6 (fixed)
  1242                           ;	Chosen strategy is simple_byte
  1243  00AA  085C               	movf	??_sprintf,w
  1244  00AB  3A00               	xorlw	0	; case 0
  1245  00AC  1903               	skipnz
  1246  00AD  29AC               	goto	l1810
  1247  00AE  3A64               	xorlw	100	; case 100
  1248  00AF  1903               	skipnz
  1249  00B0  28B5               	goto	l1752
  1250  00B1  3A0D               	xorlw	13	; case 105
  1251  00B2  1903               	skipnz
  1252  00B3  28B5               	goto	l1752
  1253  00B4  299A               	goto	l1808
  1254  00B5                     l1752:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1257  00B5  085F               	movf	sprintf@ap,w
  1258  00B6  0084               	movwf	4
  1259  00B7  1383               	bcf	3,7	;select IRP bank0
  1260  00B8  0800               	movf	0,w
  1261  00B9  00E2               	movwf	sprintf@val
  1262  00BA  0A84               	incf	4,f
  1263  00BB  0800               	movf	0,w
  1264  00BC  00E3               	movwf	sprintf@val+1
  1265  00BD                     l1754:
  1266  00BD  3002               	movlw	2
  1267  00BE  00DC               	movwf	??_sprintf
  1268  00BF  085C               	movf	??_sprintf,w
  1269  00C0  07DF               	addwf	sprintf@ap,f
  1270  00C1                     l1756:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1273  00C1  1FE3               	btfss	sprintf@val+1,7
  1274  00C2  28C4               	goto	u1401
  1275  00C3  28C5               	goto	u1400
  1276  00C4                     u1401:
  1277  00C4  28CE               	goto	l1762
  1278  00C5                     u1400:
  1279  00C5                     l1758:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1282  00C5  3003               	movlw	3
  1283  00C6  00DC               	movwf	??_sprintf
  1284  00C7  085C               	movf	??_sprintf,w
  1285  00C8  04E1               	iorwf	sprintf@flag,f
  1286  00C9                     l1760:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1289  00C9  09E2               	comf	sprintf@val,f
  1290  00CA  09E3               	comf	sprintf@val+1,f
  1291  00CB  0AE2               	incf	sprintf@val,f
  1292  00CC  1903               	skipnz
  1293  00CD  0AE3               	incf	sprintf@val+1,f
  1294  00CE                     l1762:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1297  00CE  01E7               	clrf	sprintf@c
  1298  00CF  0AE7               	incf	sprintf@c,f
  1299  00D0                     l1768:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1302  00D0  0867               	movf	sprintf@c,w
  1303  00D1  00DC               	movwf	??_sprintf
  1304  00D2  075C               	addwf	??_sprintf,w
  1305  00D3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1306  00D4  0084               	movwf	4
  1307  00D5  120A  118A  2454  120A  118A  	fcall	stringdir
  1308  00DA  00DD               	movwf	??_sprintf+1
  1309  00DB  120A  118A  2454  120A  118A  	fcall	stringdir
  1310  00E0  00DE               	movwf	??_sprintf+2
  1311  00E1  085E               	movf	??_sprintf+2,w
  1312  00E2  0263               	subwf	sprintf@val+1,w
  1313  00E3  1D03               	skipz
  1314  00E4  28E7               	goto	u1415
  1315  00E5  085D               	movf	??_sprintf+1,w
  1316  00E6  0262               	subwf	sprintf@val,w
  1317  00E7                     u1415:
  1318  00E7  1803               	skipnc
  1319  00E8  28EA               	goto	u1411
  1320  00E9  28EB               	goto	u1410
  1321  00EA                     u1411:
  1322  00EA  28EC               	goto	l1772
  1323  00EB                     u1410:
  1324  00EB  28F6               	goto	l1774
  1325  00EC                     l1772:
  1326  00EC  3001               	movlw	1
  1327  00ED  00DC               	movwf	??_sprintf
  1328  00EE  085C               	movf	??_sprintf,w
  1329  00EF  07E7               	addwf	sprintf@c,f
  1330  00F0  3005               	movlw	5
  1331  00F1  0667               	xorwf	sprintf@c,w
  1332  00F2  1D03               	btfss	3,2
  1333  00F3  28F5               	goto	u1421
  1334  00F4  28F6               	goto	u1420
  1335  00F5                     u1421:
  1336  00F5  28D0               	goto	l1768
  1337  00F6                     u1420:
  1338  00F6                     l1774:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1341  00F6  0865               	movf	sprintf@width,w
  1342  00F7  0466               	iorwf	sprintf@width+1,w
  1343  00F8  1903               	btfsc	3,2
  1344  00F9  28FB               	goto	u1431
  1345  00FA  28FC               	goto	u1430
  1346  00FB                     u1431:
  1347  00FB  2908               	goto	l262
  1348  00FC                     u1430:
  1349  00FC                     l1776:
  1350  00FC  0861               	movf	sprintf@flag,w
  1351  00FD  3903               	andlw	3
  1352  00FE  1903               	btfsc	3,2
  1353  00FF  2901               	goto	u1441
  1354  0100  2902               	goto	u1440
  1355  0101                     u1441:
  1356  0101  2908               	goto	l262
  1357  0102                     u1440:
  1358  0102                     l1778:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1361  0102  30FF               	movlw	255
  1362  0103  07E5               	addwf	sprintf@width,f
  1363  0104  1803               	skipnc
  1364  0105  0AE6               	incf	sprintf@width+1,f
  1365  0106  30FF               	movlw	255
  1366  0107  07E6               	addwf	sprintf@width+1,f
  1367  0108                     l262:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1370  0108  0866               	movf	sprintf@width+1,w
  1371  0109  3A80               	xorlw	128
  1372  010A  3C80               	sublw	128
  1373  010B  1D03               	skipz
  1374  010C  290F               	goto	u1455
  1375  010D  0865               	movf	sprintf@width,w
  1376  010E  0267               	subwf	sprintf@c,w
  1377  010F                     u1455:
  1378  010F  1803               	skipnc
  1379  0110  2912               	goto	u1451
  1380  0111  2913               	goto	u1450
  1381  0112                     u1451:
  1382  0112  291F               	goto	l1782
  1383  0113                     u1450:
  1384  0113                     l1780:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1387  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0115  0867               	movf	sprintf@c,w
  1390  0116  00DC               	movwf	??_sprintf
  1391  0117  01DD               	clrf	??_sprintf+1
  1392  0118  085C               	movf	??_sprintf,w
  1393  0119  02E5               	subwf	sprintf@width,f
  1394  011A  085D               	movf	??_sprintf+1,w
  1395  011B  1C03               	skipc
  1396  011C  03E6               	decf	sprintf@width+1,f
  1397  011D  02E6               	subwf	sprintf@width+1,f
  1398  011E  2923               	goto	l1784
  1399  011F                     l1782:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1402  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0121  01E5               	clrf	sprintf@width
  1405  0122  01E6               	clrf	sprintf@width+1
  1406  0123                     l1784:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1409  0123  0865               	movf	sprintf@width,w
  1410  0124  0466               	iorwf	sprintf@width+1,w
  1411  0125  1903               	btfsc	3,2
  1412  0126  2928               	goto	u1461
  1413  0127  2929               	goto	u1460
  1414  0128                     u1461:
  1415  0128  2940               	goto	l1792
  1416  0129                     u1460:
  1417  0129                     l1786:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1420  0129  3020               	movlw	32
  1421  012A  00DC               	movwf	??_sprintf
  1422  012B  0864               	movf	sprintf@sp,w
  1423  012C  0084               	movwf	4
  1424  012D  085C               	movf	??_sprintf,w
  1425  012E  1383               	bcf	3,7	;select IRP bank0
  1426  012F  0080               	movwf	0
  1427  0130                     l1788:
  1428  0130  3001               	movlw	1
  1429  0131  00DC               	movwf	??_sprintf
  1430  0132  085C               	movf	??_sprintf,w
  1431  0133  07E4               	addwf	sprintf@sp,f
  1432  0134                     l1790:
  1433  0134  30FF               	movlw	255
  1434  0135  07E5               	addwf	sprintf@width,f
  1435  0136  1803               	skipnc
  1436  0137  0AE6               	incf	sprintf@width+1,f
  1437  0138  30FF               	movlw	255
  1438  0139  07E6               	addwf	sprintf@width+1,f
  1439  013A  0865               	movf	sprintf@width,w
  1440  013B  0466               	iorwf	sprintf@width+1,w
  1441  013C  1D03               	btfss	3,2
  1442  013D  293F               	goto	u1471
  1443  013E  2940               	goto	u1470
  1444  013F                     u1471:
  1445  013F  2929               	goto	l1786
  1446  0140                     u1470:
  1447  0140                     l1792:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1450  0140  0861               	movf	sprintf@flag,w
  1451  0141  3903               	andlw	3
  1452  0142  1903               	btfsc	3,2
  1453  0143  2945               	goto	u1481
  1454  0144  2946               	goto	u1480
  1455  0145                     u1481:
  1456  0145  2951               	goto	l1798
  1457  0146                     u1480:
  1458  0146                     l1794:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1461  0146  302D               	movlw	45
  1462  0147  00DC               	movwf	??_sprintf
  1463  0148  0864               	movf	sprintf@sp,w
  1464  0149  0084               	movwf	4
  1465  014A  085C               	movf	??_sprintf,w
  1466  014B  1383               	bcf	3,7	;select IRP bank0
  1467  014C  0080               	movwf	0
  1468  014D                     l1796:
  1469  014D  3001               	movlw	1
  1470  014E  00DC               	movwf	??_sprintf
  1471  014F  085C               	movf	??_sprintf,w
  1472  0150  07E4               	addwf	sprintf@sp,f
  1473  0151                     l1798:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1476  0151  0867               	movf	sprintf@c,w
  1477  0152  00DC               	movwf	??_sprintf
  1478  0153  085C               	movf	??_sprintf,w
  1479  0154  00E0               	movwf	sprintf@prec
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1482  0155  2991               	goto	l1806
  1483  0156                     l1800:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1486  0156  300A               	movlw	10
  1487  0157  00CD               	movwf	___lwmod@divisor
  1488  0158  3000               	movlw	0
  1489  0159  00CE               	movwf	___lwmod@divisor+1
  1490  015A  0860               	movf	sprintf@prec,w
  1491  015B  00DC               	movwf	??_sprintf
  1492  015C  075C               	addwf	??_sprintf,w
  1493  015D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1494  015E  0084               	movwf	4
  1495  015F  120A  118A  2454  120A  118A  	fcall	stringdir
  1496  0164  00F3               	movwf	___lwdiv@divisor
  1497  0165  120A  118A  2454  120A  118A  	fcall	stringdir
  1498  016A  00F4               	movwf	___lwdiv@divisor+1
  1499  016B  0863               	movf	sprintf@val+1,w
  1500  016C  00F6               	movwf	___lwdiv@dividend+1
  1501  016D  0862               	movf	sprintf@val,w
  1502  016E  00F5               	movwf	___lwdiv@dividend
  1503  016F  120A  118A  2397  120A  118A  	fcall	___lwdiv
  1504  0174  0874               	movf	?___lwdiv+1,w
  1505  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0177  00D0               	movwf	___lwmod@dividend+1
  1508  0178  0873               	movf	?___lwdiv,w
  1509  0179  00CF               	movwf	___lwmod@dividend
  1510  017A  120A  118A  23DD  120A  118A  	fcall	___lwmod
  1511  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0181  084D               	movf	?___lwmod,w
  1514  0182  3E30               	addlw	48
  1515  0183  00DD               	movwf	??_sprintf+1
  1516  0184  085D               	movf	??_sprintf+1,w
  1517  0185  00E7               	movwf	sprintf@c
  1518  0186                     l1802:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1521  0186  0867               	movf	sprintf@c,w
  1522  0187  00DC               	movwf	??_sprintf
  1523  0188  0864               	movf	sprintf@sp,w
  1524  0189  0084               	movwf	4
  1525  018A  085C               	movf	??_sprintf,w
  1526  018B  1383               	bcf	3,7	;select IRP bank0
  1527  018C  0080               	movwf	0
  1528  018D                     l1804:
  1529  018D  3001               	movlw	1
  1530  018E  00DC               	movwf	??_sprintf
  1531  018F  085C               	movf	??_sprintf,w
  1532  0190  07E4               	addwf	sprintf@sp,f
  1533  0191                     l1806:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1536  0191  30FF               	movlw	255
  1537  0192  00DC               	movwf	??_sprintf
  1538  0193  085C               	movf	??_sprintf,w
  1539  0194  07E0               	addwf	sprintf@prec,f
  1540  0195  0A60               	incf	sprintf@prec,w
  1541  0196  1D03               	btfss	3,2
  1542  0197  2999               	goto	u1491
  1543  0198  299A               	goto	u1490
  1544  0199                     u1491:
  1545  0199  2956               	goto	l1800
  1546  019A                     u1490:
  1547  019A                     l1808:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1550  019A  3001               	movlw	1
  1551  019B  07D1               	addwf	sprintf@f,f
  1552  019C  30FF               	movlw	-1
  1553  019D  0751               	addwf	sprintf@f,w
  1554  019E  0084               	movwf	4
  1555  019F  120A  118A  2454  120A  118A  	fcall	stringdir
  1556  01A4  00DC               	movwf	??_sprintf
  1557  01A5  085C               	movf	??_sprintf,w
  1558  01A6  00E7               	movwf	sprintf@c
  1559  01A7  0867               	movf	sprintf@c,w
  1560  01A8  1D03               	btfss	3,2
  1561  01A9  29AB               	goto	u1501
  1562  01AA  29AC               	goto	u1500
  1563  01AB                     u1501:
  1564  01AB  2831               	goto	l1728
  1565  01AC                     u1500:
  1566  01AC                     l1810:
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1569  01AC  0864               	movf	sprintf@sp,w
  1570  01AD  0084               	movwf	4
  1571  01AE  1383               	bcf	3,7	;select IRP bank0
  1572  01AF  0180               	clrf	0
  1573  01B0                     l273:
  1574  01B0  0008               	return
  1575  01B1                     __end_of_sprintf:
  1576                           
  1577                           	psect	text2
  1578  05AA                     __ptext2:	
  1579 ;; *************** function _isdigit *****************
  1580 ;; Defined at:
  1581 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  c               1    wreg     unsigned char 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  c               1    4[COMMON] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;		None               void
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         2       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0
  1598 ;;      Totals:         2       0       0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 2
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_sprintf
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609  05AA                     _isdigit:	
  1610                           ;psect for function _isdigit
  1611                           
  1612                           
  1613                           ;incstack = 0
  1614                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1615                           ;isdigit@c stored from wreg
  1616  05AA  00F4               	movwf	isdigit@c
  1617  05AB                     l1334:
  1618  05AB  01F3               	clrf	_isdigit$838
  1619  05AC                     l1336:
  1620  05AC  303A               	movlw	58
  1621  05AD  0274               	subwf	isdigit@c,w
  1622  05AE  1803               	skipnc
  1623  05AF  2DB1               	goto	u731
  1624  05B0  2DB2               	goto	u730
  1625  05B1                     u731:
  1626  05B1  2DBA               	goto	l1342
  1627  05B2                     u730:
  1628  05B2                     l1338:
  1629  05B2  3030               	movlw	48
  1630  05B3  0274               	subwf	isdigit@c,w
  1631  05B4  1C03               	skipc
  1632  05B5  2DB7               	goto	u741
  1633  05B6  2DB8               	goto	u740
  1634  05B7                     u741:
  1635  05B7  2DBA               	goto	l1342
  1636  05B8                     u740:
  1637  05B8                     l1340:
  1638  05B8  01F3               	clrf	_isdigit$838
  1639  05B9  0AF3               	incf	_isdigit$838,f
  1640  05BA                     l1342:
  1641  05BA  0C73               	rrf	_isdigit$838,w
  1642  05BB                     l730:
  1643  05BB  0008               	return
  1644  05BC                     __end_of_isdigit:
  1645                           
  1646                           	psect	text3
  1647  04EC                     __ptext3:	
  1648 ;; *************** function ___wmul *****************
  1649 ;; Defined at:
  1650 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  multiplier      2    3[COMMON] unsigned int 
  1653 ;;  multiplicand    2    5[COMMON] unsigned int 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  product         2    7[COMMON] unsigned int 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2    3[COMMON] unsigned int 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         4       0       0       0       0
  1666 ;;      Locals:         2       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0
  1668 ;;      Totals:         6       0       0       0       0
  1669 ;;Total ram usage:        6 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 2
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_sprintf
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679  04EC                     ___wmul:	
  1680                           ;psect for function ___wmul
  1681                           
  1682  04EC                     l1346:	
  1683                           ;incstack = 0
  1684                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1685                           
  1686  04EC  01F7               	clrf	___wmul@product
  1687  04ED  01F8               	clrf	___wmul@product+1
  1688  04EE                     l1348:
  1689  04EE  1C73               	btfss	___wmul@multiplier,0
  1690  04EF  2CF1               	goto	u751
  1691  04F0  2CF2               	goto	u750
  1692  04F1                     u751:
  1693  04F1  2CF8               	goto	l277
  1694  04F2                     u750:
  1695  04F2                     l1350:
  1696  04F2  0875               	movf	___wmul@multiplicand,w
  1697  04F3  07F7               	addwf	___wmul@product,f
  1698  04F4  1803               	skipnc
  1699  04F5  0AF8               	incf	___wmul@product+1,f
  1700  04F6  0876               	movf	___wmul@multiplicand+1,w
  1701  04F7  07F8               	addwf	___wmul@product+1,f
  1702  04F8                     l277:
  1703  04F8  3001               	movlw	1
  1704  04F9                     u765:
  1705  04F9  1003               	clrc
  1706  04FA  0DF5               	rlf	___wmul@multiplicand,f
  1707  04FB  0DF6               	rlf	___wmul@multiplicand+1,f
  1708  04FC  3EFF               	addlw	-1
  1709  04FD  1D03               	skipz
  1710  04FE  2CF9               	goto	u765
  1711  04FF                     l1352:
  1712  04FF  3001               	movlw	1
  1713  0500                     u775:
  1714  0500  1003               	clrc
  1715  0501  0CF4               	rrf	___wmul@multiplier+1,f
  1716  0502  0CF3               	rrf	___wmul@multiplier,f
  1717  0503  3EFF               	addlw	-1
  1718  0504  1D03               	skipz
  1719  0505  2D00               	goto	u775
  1720  0506                     l1354:
  1721  0506  0873               	movf	___wmul@multiplier,w
  1722  0507  0474               	iorwf	___wmul@multiplier+1,w
  1723  0508  1D03               	btfss	3,2
  1724  0509  2D0B               	goto	u781
  1725  050A  2D0C               	goto	u780
  1726  050B                     u781:
  1727  050B  2CEE               	goto	l1348
  1728  050C                     u780:
  1729  050C                     l1356:
  1730  050C  0878               	movf	___wmul@product+1,w
  1731  050D  00F4               	movwf	?___wmul+1
  1732  050E  0877               	movf	___wmul@product,w
  1733  050F  00F3               	movwf	?___wmul
  1734  0510                     l279:
  1735  0510  0008               	return
  1736  0511                     __end_of___wmul:
  1737                           
  1738                           	psect	text4
  1739  03DD                     __ptext4:	
  1740 ;; *************** function ___lwmod *****************
  1741 ;; Defined at:
  1742 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  divisor         2    3[BANK0 ] unsigned int 
  1745 ;;  dividend        2    5[BANK0 ] unsigned int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  counter         1    9[COMMON] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2    3[BANK0 ] unsigned int 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       4       0       0       0
  1758 ;;      Locals:         1       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0
  1760 ;;      Totals:         2       4       0       0       0
  1761 ;;Total ram usage:        6 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 2
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_sprintf
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771  03DD                     ___lwmod:	
  1772                           ;psect for function ___lwmod
  1773                           
  1774  03DD                     l1684:	
  1775                           ;incstack = 0
  1776                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1777                           
  1778  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1779  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1780  03DF  084D               	movf	___lwmod@divisor,w
  1781  03E0  044E               	iorwf	___lwmod@divisor+1,w
  1782  03E1  1903               	btfsc	3,2
  1783  03E2  2BE4               	goto	u1311
  1784  03E3  2BE5               	goto	u1310
  1785  03E4                     u1311:
  1786  03E4  2C14               	goto	l1702
  1787  03E5                     u1310:
  1788  03E5                     l1686:
  1789  03E5  01F9               	clrf	___lwmod@counter
  1790  03E6  0AF9               	incf	___lwmod@counter,f
  1791  03E7  2BF3               	goto	l1692
  1792  03E8                     l1688:
  1793  03E8  3001               	movlw	1
  1794  03E9                     u1325:
  1795  03E9  1003               	clrc
  1796  03EA  0DCD               	rlf	___lwmod@divisor,f
  1797  03EB  0DCE               	rlf	___lwmod@divisor+1,f
  1798  03EC  3EFF               	addlw	-1
  1799  03ED  1D03               	skipz
  1800  03EE  2BE9               	goto	u1325
  1801  03EF                     l1690:
  1802  03EF  3001               	movlw	1
  1803  03F0  00F8               	movwf	??___lwmod
  1804  03F1  0878               	movf	??___lwmod,w
  1805  03F2  07F9               	addwf	___lwmod@counter,f
  1806  03F3                     l1692:
  1807  03F3  1FCE               	btfss	___lwmod@divisor+1,7
  1808  03F4  2BF6               	goto	u1331
  1809  03F5  2BF7               	goto	u1330
  1810  03F6                     u1331:
  1811  03F6  2BE8               	goto	l1688
  1812  03F7                     u1330:
  1813  03F7                     l1694:
  1814  03F7  084E               	movf	___lwmod@divisor+1,w
  1815  03F8  0250               	subwf	___lwmod@dividend+1,w
  1816  03F9  1D03               	skipz
  1817  03FA  2BFD               	goto	u1345
  1818  03FB  084D               	movf	___lwmod@divisor,w
  1819  03FC  024F               	subwf	___lwmod@dividend,w
  1820  03FD                     u1345:
  1821  03FD  1C03               	skipc
  1822  03FE  2C00               	goto	u1341
  1823  03FF  2C01               	goto	u1340
  1824  0400                     u1341:
  1825  0400  2C07               	goto	l1698
  1826  0401                     u1340:
  1827  0401                     l1696:
  1828  0401  084D               	movf	___lwmod@divisor,w
  1829  0402  02CF               	subwf	___lwmod@dividend,f
  1830  0403  084E               	movf	___lwmod@divisor+1,w
  1831  0404  1C03               	skipc
  1832  0405  03D0               	decf	___lwmod@dividend+1,f
  1833  0406  02D0               	subwf	___lwmod@dividend+1,f
  1834  0407                     l1698:
  1835  0407  3001               	movlw	1
  1836  0408                     u1355:
  1837  0408  1003               	clrc
  1838  0409  0CCE               	rrf	___lwmod@divisor+1,f
  1839  040A  0CCD               	rrf	___lwmod@divisor,f
  1840  040B  3EFF               	addlw	-1
  1841  040C  1D03               	skipz
  1842  040D  2C08               	goto	u1355
  1843  040E                     l1700:
  1844  040E  3001               	movlw	1
  1845  040F  02F9               	subwf	___lwmod@counter,f
  1846  0410  1D03               	btfss	3,2
  1847  0411  2C13               	goto	u1361
  1848  0412  2C14               	goto	u1360
  1849  0413                     u1361:
  1850  0413  2BF7               	goto	l1694
  1851  0414                     u1360:
  1852  0414                     l1702:
  1853  0414  0850               	movf	___lwmod@dividend+1,w
  1854  0415  00CE               	movwf	?___lwmod+1
  1855  0416  084F               	movf	___lwmod@dividend,w
  1856  0417  00CD               	movwf	?___lwmod
  1857  0418                     l559:
  1858  0418  0008               	return
  1859  0419                     __end_of___lwmod:
  1860                           
  1861                           	psect	text5
  1862  0397                     __ptext5:	
  1863 ;; *************** function ___lwdiv *****************
  1864 ;; Defined at:
  1865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  divisor         2    3[COMMON] unsigned int 
  1868 ;;  dividend        2    5[COMMON] unsigned int 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  quotient        2    1[BANK0 ] unsigned int 
  1871 ;;  counter         1    0[BANK0 ] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  2    3[COMMON] unsigned int 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         4       0       0       0       0
  1882 ;;      Locals:         0       3       0       0       0
  1883 ;;      Temps:          1       0       0       0       0
  1884 ;;      Totals:         5       3       0       0       0
  1885 ;;Total ram usage:        8 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 2
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_sprintf
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895  0397                     ___lwdiv:	
  1896                           ;psect for function ___lwdiv
  1897                           
  1898  0397                     l1658:	
  1899                           ;incstack = 0
  1900                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1901                           
  1902  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0399  01CB               	clrf	___lwdiv@quotient
  1905  039A  01CC               	clrf	___lwdiv@quotient+1
  1906  039B                     l1660:
  1907  039B  0873               	movf	___lwdiv@divisor,w
  1908  039C  0474               	iorwf	___lwdiv@divisor+1,w
  1909  039D  1903               	btfsc	3,2
  1910  039E  2BA0               	goto	u1241
  1911  039F  2BA1               	goto	u1240
  1912  03A0                     u1241:
  1913  03A0  2BD8               	goto	l1680
  1914  03A1                     u1240:
  1915  03A1                     l1662:
  1916  03A1  01CA               	clrf	___lwdiv@counter
  1917  03A2  0ACA               	incf	___lwdiv@counter,f
  1918  03A3  2BAF               	goto	l1668
  1919  03A4                     l1664:
  1920  03A4  3001               	movlw	1
  1921  03A5                     u1255:
  1922  03A5  1003               	clrc
  1923  03A6  0DF3               	rlf	___lwdiv@divisor,f
  1924  03A7  0DF4               	rlf	___lwdiv@divisor+1,f
  1925  03A8  3EFF               	addlw	-1
  1926  03A9  1D03               	skipz
  1927  03AA  2BA5               	goto	u1255
  1928  03AB                     l1666:
  1929  03AB  3001               	movlw	1
  1930  03AC  00F7               	movwf	??___lwdiv
  1931  03AD  0877               	movf	??___lwdiv,w
  1932  03AE  07CA               	addwf	___lwdiv@counter,f
  1933  03AF                     l1668:
  1934  03AF  1FF4               	btfss	___lwdiv@divisor+1,7
  1935  03B0  2BB2               	goto	u1261
  1936  03B1  2BB3               	goto	u1260
  1937  03B2                     u1261:
  1938  03B2  2BA4               	goto	l1664
  1939  03B3                     u1260:
  1940  03B3                     l1670:
  1941  03B3  3001               	movlw	1
  1942  03B4                     u1275:
  1943  03B4  1003               	clrc
  1944  03B5  0DCB               	rlf	___lwdiv@quotient,f
  1945  03B6  0DCC               	rlf	___lwdiv@quotient+1,f
  1946  03B7  3EFF               	addlw	-1
  1947  03B8  1D03               	skipz
  1948  03B9  2BB4               	goto	u1275
  1949  03BA  0874               	movf	___lwdiv@divisor+1,w
  1950  03BB  0276               	subwf	___lwdiv@dividend+1,w
  1951  03BC  1D03               	skipz
  1952  03BD  2BC0               	goto	u1285
  1953  03BE  0873               	movf	___lwdiv@divisor,w
  1954  03BF  0275               	subwf	___lwdiv@dividend,w
  1955  03C0                     u1285:
  1956  03C0  1C03               	skipc
  1957  03C1  2BC3               	goto	u1281
  1958  03C2  2BC4               	goto	u1280
  1959  03C3                     u1281:
  1960  03C3  2BCB               	goto	l1676
  1961  03C4                     u1280:
  1962  03C4                     l1672:
  1963  03C4  0873               	movf	___lwdiv@divisor,w
  1964  03C5  02F5               	subwf	___lwdiv@dividend,f
  1965  03C6  0874               	movf	___lwdiv@divisor+1,w
  1966  03C7  1C03               	skipc
  1967  03C8  03F6               	decf	___lwdiv@dividend+1,f
  1968  03C9  02F6               	subwf	___lwdiv@dividend+1,f
  1969  03CA                     l1674:
  1970  03CA  144B               	bsf	___lwdiv@quotient,0
  1971  03CB                     l1676:
  1972  03CB  3001               	movlw	1
  1973  03CC                     u1295:
  1974  03CC  1003               	clrc
  1975  03CD  0CF4               	rrf	___lwdiv@divisor+1,f
  1976  03CE  0CF3               	rrf	___lwdiv@divisor,f
  1977  03CF  3EFF               	addlw	-1
  1978  03D0  1D03               	skipz
  1979  03D1  2BCC               	goto	u1295
  1980  03D2                     l1678:
  1981  03D2  3001               	movlw	1
  1982  03D3  02CA               	subwf	___lwdiv@counter,f
  1983  03D4  1D03               	btfss	3,2
  1984  03D5  2BD7               	goto	u1301
  1985  03D6  2BD8               	goto	u1300
  1986  03D7                     u1301:
  1987  03D7  2BB3               	goto	l1670
  1988  03D8                     u1300:
  1989  03D8                     l1680:
  1990  03D8  084C               	movf	___lwdiv@quotient+1,w
  1991  03D9  00F4               	movwf	?___lwdiv+1
  1992  03DA  084B               	movf	___lwdiv@quotient,w
  1993  03DB  00F3               	movwf	?___lwdiv
  1994  03DC                     l549:
  1995  03DC  0008               	return
  1996  03DD                     __end_of___lwdiv:
  1997                           
  1998                           	psect	text6
  1999  0511                     __ptext6:	
  2000 ;; *************** function _setup *****************
  2001 ;; Defined at:
  2002 ;;		line 113 in file "main_master_p1.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 5
  2023 ;; This function calls:
  2024 ;;		_Lcd_Init
  2025 ;;		_USART_set
  2026 ;;		_int_osc_MHz
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032  0511                     _setup:	
  2033                           ;psect for function _setup
  2034                           
  2035  0511                     l1706:	
  2036                           ;incstack = 0
  2037                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2038                           
  2039                           
  2040                           ;main_master_p1.c: 114:     int_osc_MHz(1);
  2041  0511  3001               	movlw	1
  2042  0512  120A  118A  2419  120A  118A  	fcall	_int_osc_MHz
  2043  0517                     l1708:
  2044                           
  2045                           ;main_master_p1.c: 117:     ANSEL = 0;
  2046  0517  1683               	bsf	3,5	;RP0=1, select bank3
  2047  0518  1703               	bsf	3,6	;RP1=1, select bank3
  2048  0519  0188               	clrf	8	;volatile
  2049  051A                     l1710:
  2050                           
  2051                           ;main_master_p1.c: 118:     ANSELH = 0;
  2052  051A  0189               	clrf	9	;volatile
  2053  051B                     l1712:
  2054                           
  2055                           ;main_master_p1.c: 120:     TRISA = 0;
  2056  051B  1683               	bsf	3,5	;RP0=1, select bank1
  2057  051C  1303               	bcf	3,6	;RP1=0, select bank1
  2058  051D  0185               	clrf	5	;volatile
  2059  051E                     l1714:
  2060                           
  2061                           ;main_master_p1.c: 121:     TRISB = 0;
  2062  051E  0186               	clrf	6	;volatile
  2063  051F                     l1716:
  2064                           
  2065                           ;main_master_p1.c: 123:     Lcd_Init();
  2066  051F  120A  118A  2344  120A  118A  	fcall	_Lcd_Init
  2067  0524                     l1718:
  2068                           
  2069                           ;main_master_p1.c: 124:     USART_set(9600);
  2070  0524  3000               	movlw	0
  2071  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0526  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0527  00D5               	movwf	USART_set@baudrate+3
  2074  0528  3000               	movlw	0
  2075  0529  00D4               	movwf	USART_set@baudrate+2
  2076  052A  3025               	movlw	37
  2077  052B  00D3               	movwf	USART_set@baudrate+1
  2078  052C  3080               	movlw	128
  2079  052D  00D2               	movwf	USART_set@baudrate
  2080  052E  120A  118A  21B1  120A  118A  	fcall	_USART_set
  2081  0533                     l1720:
  2082                           
  2083                           ;main_master_p1.c: 127:     INTCONbits.GIE = 1;
  2084  0533  178B               	bsf	11,7	;volatile
  2085  0534                     l1722:
  2086                           
  2087                           ;main_master_p1.c: 128:     INTCONbits.PEIE = 1;
  2088  0534  170B               	bsf	11,6	;volatile
  2089  0535                     l65:
  2090  0535  0008               	return
  2091  0536                     __end_of_setup:
  2092                           
  2093                           	psect	text7
  2094  0419                     __ptext7:	
  2095 ;; *************** function _int_osc_MHz *****************
  2096 ;; Defined at:
  2097 ;;		line 13 in file "osc.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  freq            1    wreg     unsigned char 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  freq            1    5[COMMON] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         1       0       0       0       0
  2113 ;;      Temps:          2       0       0       0       0
  2114 ;;      Totals:         3       0       0       0       0
  2115 ;;Total ram usage:        3 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 2
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_setup
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125  0419                     _int_osc_MHz:	
  2126                           ;psect for function _int_osc_MHz
  2127                           
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  2131                           ;int_osc_MHz@freq stored from wreg
  2132  0419  00F5               	movwf	int_osc_MHz@freq
  2133  041A                     l1252:
  2134                           
  2135                           ;osc.c: 14:     switch(freq){
  2136  041A  2C3C               	goto	l1266
  2137  041B                     l1254:
  2138                           
  2139                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  2140  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2141  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2142  041D  080F               	movf	15,w	;volatile
  2143  041E  398F               	andlw	-113
  2144  041F  3840               	iorlw	64
  2145  0420  008F               	movwf	15	;volatile
  2146                           
  2147                           ;osc.c: 17:             break;
  2148  0421  2C52               	goto	l127
  2149  0422                     l1256:
  2150                           
  2151                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  2152  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2153  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2154  0424  080F               	movf	15,w	;volatile
  2155  0425  398F               	andlw	-113
  2156  0426  3850               	iorlw	80
  2157  0427  008F               	movwf	15	;volatile
  2158                           
  2159                           ;osc.c: 20:             break;
  2160  0428  2C52               	goto	l127
  2161  0429                     l1258:
  2162                           
  2163                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  2164  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2165  042A  1303               	bcf	3,6	;RP1=0, select bank1
  2166  042B  080F               	movf	15,w	;volatile
  2167  042C  398F               	andlw	-113
  2168  042D  3860               	iorlw	96
  2169  042E  008F               	movwf	15	;volatile
  2170                           
  2171                           ;osc.c: 23:             break;
  2172  042F  2C52               	goto	l127
  2173  0430                     l1260:
  2174                           
  2175                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  2176  0430  3070               	movlw	112
  2177  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0433  048F               	iorwf	15,f	;volatile
  2180                           
  2181                           ;osc.c: 26:             break;
  2182  0434  2C52               	goto	l127
  2183  0435                     l1262:
  2184                           
  2185                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  2186  0435  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0436  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0437  080F               	movf	15,w	;volatile
  2189  0438  398F               	andlw	-113
  2190  0439  3860               	iorlw	96
  2191  043A  008F               	movwf	15	;volatile
  2192                           
  2193                           ;osc.c: 29:             break;
  2194  043B  2C52               	goto	l127
  2195  043C                     l1266:
  2196  043C  0875               	movf	int_osc_MHz@freq,w
  2197  043D  00F3               	movwf	??_int_osc_MHz
  2198  043E  01F4               	clrf	??_int_osc_MHz+1
  2199                           
  2200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2201                           ; Switch size 1, requested type "simple"
  2202                           ; Number of cases is 1, Range of values is 0 to 0
  2203                           ; switch strategies available:
  2204                           ; Name         Instructions Cycles
  2205                           ; simple_byte            4     3 (average)
  2206                           ; direct_byte           11     8 (fixed)
  2207                           ; jumptable            260     6 (fixed)
  2208                           ;	Chosen strategy is simple_byte
  2209  043F  0874               	movf	??_int_osc_MHz+1,w
  2210  0440  3A00               	xorlw	0	; case 0
  2211  0441  1903               	skipnz
  2212  0442  2C44               	goto	l1876
  2213  0443  2C35               	goto	l1262
  2214  0444                     l1876:
  2215                           
  2216                           ; Switch size 1, requested type "simple"
  2217                           ; Number of cases is 4, Range of values is 1 to 8
  2218                           ; switch strategies available:
  2219                           ; Name         Instructions Cycles
  2220                           ; simple_byte           13     7 (average)
  2221                           ; direct_byte           35    11 (fixed)
  2222                           ; jumptable            263     9 (fixed)
  2223                           ;	Chosen strategy is simple_byte
  2224  0444  0873               	movf	??_int_osc_MHz,w
  2225  0445  3A01               	xorlw	1	; case 1
  2226  0446  1903               	skipnz
  2227  0447  2C1B               	goto	l1254
  2228  0448  3A03               	xorlw	3	; case 2
  2229  0449  1903               	skipnz
  2230  044A  2C22               	goto	l1256
  2231  044B  3A06               	xorlw	6	; case 4
  2232  044C  1903               	skipnz
  2233  044D  2C29               	goto	l1258
  2234  044E  3A0C               	xorlw	12	; case 8
  2235  044F  1903               	skipnz
  2236  0450  2C30               	goto	l1260
  2237  0451  2C35               	goto	l1262
  2238  0452                     l127:
  2239                           
  2240                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  2241  0452  140F               	bsf	15,0	;volatile
  2242  0453                     l132:
  2243  0453  0008               	return
  2244  0454                     __end_of_int_osc_MHz:
  2245                           
  2246                           	psect	text8
  2247  01B1                     __ptext8:	
  2248 ;; *************** function _USART_set *****************
  2249 ;; Defined at:
  2250 ;;		line 12 in file "USART.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  baudrate        4    8[BANK0 ] const unsigned long 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       4       0       0       0
  2265 ;;      Locals:         0       0       0       0       0
  2266 ;;      Temps:          0      12       0       0       0
  2267 ;;      Totals:         0      16       0       0       0
  2268 ;;Total ram usage:       16 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 3
  2271 ;; This function calls:
  2272 ;;		___lldiv
  2273 ;; This function is called by:
  2274 ;;		_setup
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278  01B1                     _USART_set:	
  2279                           ;psect for function _USART_set
  2280                           
  2281  01B1                     l1642:	
  2282                           ;incstack = 0
  2283                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  2284                           
  2285                           
  2286                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          5:     TXSTAbits.BRGH = 1;
  2287  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2288  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2289  01B3  1518               	bsf	24,2	;volatile
  2290                           
  2291                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  2292  01B4  1683               	bsf	3,5	;RP0=1, select bank3
  2293  01B5  1703               	bsf	3,6	;RP1=1, select bank3
  2294  01B6  1587               	bsf	7,3	;volatile
  2295  01B7                     l1644:
  2296                           
  2297                           ;USART.c: 17:     SPBRGH = 0;
  2298  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2299  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2300  01B9  019A               	clrf	26	;volatile
  2301  01BA                     l1646:
  2302                           
  2303                           ;USART.c: 18:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  2304  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2305  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2306  01BC  0852               	movf	USART_set@baudrate,w
  2307  01BD  00D6               	movwf	??_USART_set
  2308  01BE  0853               	movf	USART_set@baudrate+1,w
  2309  01BF  00D7               	movwf	??_USART_set+1
  2310  01C0  0854               	movf	USART_set@baudrate+2,w
  2311  01C1  00D8               	movwf	??_USART_set+2
  2312  01C2  0855               	movf	USART_set@baudrate+3,w
  2313  01C3  00D9               	movwf	??_USART_set+3
  2314  01C4  3002               	movlw	2
  2315  01C5                     u1215:
  2316  01C5  1003               	clrc
  2317  01C6  0DD6               	rlf	??_USART_set,f
  2318  01C7  0DD7               	rlf	??_USART_set+1,f
  2319  01C8  0DD8               	rlf	??_USART_set+2,f
  2320  01C9  0DD9               	rlf	??_USART_set+3,f
  2321  01CA                     u1210:
  2322  01CA  3EFF               	addlw	-1
  2323  01CB  1D03               	skipz
  2324  01CC  29C5               	goto	u1215
  2325  01CD  0859               	movf	??_USART_set+3,w
  2326  01CE  00CD               	movwf	___lldiv@divisor+3
  2327  01CF  0858               	movf	??_USART_set+2,w
  2328  01D0  00CC               	movwf	___lldiv@divisor+2
  2329  01D1  0857               	movf	??_USART_set+1,w
  2330  01D2  00CB               	movwf	___lldiv@divisor+1
  2331  01D3  0856               	movf	??_USART_set,w
  2332  01D4  00CA               	movwf	___lldiv@divisor
  2333  01D5  0852               	movf	USART_set@baudrate,w
  2334  01D6  00DA               	movwf	??_USART_set+4
  2335  01D7  0853               	movf	USART_set@baudrate+1,w
  2336  01D8  00DB               	movwf	??_USART_set+5
  2337  01D9  0854               	movf	USART_set@baudrate+2,w
  2338  01DA  00DC               	movwf	??_USART_set+6
  2339  01DB  0855               	movf	USART_set@baudrate+3,w
  2340  01DC  00DD               	movwf	??_USART_set+7
  2341  01DD  3002               	movlw	2
  2342  01DE                     u1225:
  2343  01DE  1003               	clrc
  2344  01DF  0DDA               	rlf	??_USART_set+4,f
  2345  01E0  0DDB               	rlf	??_USART_set+5,f
  2346  01E1  0DDC               	rlf	??_USART_set+6,f
  2347  01E2  0DDD               	rlf	??_USART_set+7,f
  2348  01E3                     u1220:
  2349  01E3  3EFF               	addlw	-1
  2350  01E4  1D03               	skipz
  2351  01E5  29DE               	goto	u1225
  2352  01E6  3040               	movlw	64
  2353  01E7  00DE               	movwf	??_USART_set+8
  2354  01E8  3042               	movlw	66
  2355  01E9  00DF               	movwf	??_USART_set+9
  2356  01EA  300F               	movlw	15
  2357  01EB  00E0               	movwf	??_USART_set+10
  2358  01EC  3000               	movlw	0
  2359  01ED  00E1               	movwf	??_USART_set+11
  2360  01EE  085A               	movf	??_USART_set+4,w
  2361  01EF  02DE               	subwf	??_USART_set+8,f
  2362  01F0  085B               	movf	??_USART_set+5,w
  2363  01F1  1C03               	skipc
  2364  01F2  0F5B               	incfsz	??_USART_set+5,w
  2365  01F3  29F5               	goto	u1231
  2366  01F4  29F6               	goto	u1232
  2367  01F5                     u1231:
  2368  01F5  02DF               	subwf	??_USART_set+9,f
  2369  01F6                     u1232:
  2370  01F6  085C               	movf	??_USART_set+6,w
  2371  01F7  1C03               	skipc
  2372  01F8  0F5C               	incfsz	??_USART_set+6,w
  2373  01F9  29FB               	goto	u1233
  2374  01FA  29FC               	goto	u1234
  2375  01FB                     u1233:
  2376  01FB  02E0               	subwf	??_USART_set+10,f
  2377  01FC                     u1234:
  2378  01FC  085D               	movf	??_USART_set+7,w
  2379  01FD  1C03               	skipc
  2380  01FE  0F5D               	incfsz	??_USART_set+7,w
  2381  01FF  2A01               	goto	u1235
  2382  0200  2A02               	goto	u1236
  2383  0201                     u1235:
  2384  0201  02E1               	subwf	??_USART_set+11,f
  2385  0202                     u1236:
  2386  0202  0861               	movf	??_USART_set+11,w
  2387  0203  00D1               	movwf	___lldiv@dividend+3
  2388  0204  0860               	movf	??_USART_set+10,w
  2389  0205  00D0               	movwf	___lldiv@dividend+2
  2390  0206  085F               	movf	??_USART_set+9,w
  2391  0207  00CF               	movwf	___lldiv@dividend+1
  2392  0208  085E               	movf	??_USART_set+8,w
  2393  0209  00CE               	movwf	___lldiv@dividend
  2394  020A  120A  118A  2221  120A  118A  	fcall	___lldiv
  2395  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2396  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0211  084A               	movf	?___lldiv,w
  2398  0212  1683               	bsf	3,5	;RP0=1, select bank1
  2399  0213  1303               	bcf	3,6	;RP1=0, select bank1
  2400  0214  0099               	movwf	25	;volatile
  2401  0215                     l1648:
  2402                           
  2403                           ;USART.c: 19:     TXSTAbits.SYNC = 0;
  2404  0215  1218               	bcf	24,4	;volatile
  2405  0216                     l1650:
  2406                           
  2407                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  2408  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0218  1798               	bsf	24,7	;volatile
  2411  0219                     l1652:
  2412                           
  2413                           ;USART.c: 22:     PIE1bits.RCIE = 1;
  2414  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2415  021A  1303               	bcf	3,6	;RP1=0, select bank1
  2416  021B  168C               	bsf	12,5	;volatile
  2417  021C                     l1654:
  2418                           
  2419                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  2420  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2421  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2422  021E  1318               	bcf	24,6	;volatile
  2423  021F                     l1656:
  2424                           
  2425                           ;USART.c: 27:     RCSTAbits.CREN = 1;
  2426  021F  1618               	bsf	24,4	;volatile
  2427  0220                     l149:
  2428  0220  0008               	return
  2429  0221                     __end_of_USART_set:
  2430                           
  2431                           	psect	text9
  2432  0221                     __ptext9:	
  2433 ;; *************** function ___lldiv *****************
  2434 ;; Defined at:
  2435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  divisor         4    0[BANK0 ] unsigned long 
  2438 ;;  dividend        4    4[BANK0 ] unsigned long 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  quotient        4    4[COMMON] unsigned long 
  2441 ;;  counter         1    8[COMMON] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  4    0[BANK0 ] unsigned long 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       8       0       0       0
  2452 ;;      Locals:         5       0       0       0       0
  2453 ;;      Temps:          1       0       0       0       0
  2454 ;;      Totals:         6       8       0       0       0
  2455 ;;Total ram usage:       14 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_USART_set
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465  0221                     ___lldiv:	
  2466                           ;psect for function ___lldiv
  2467                           
  2468  0221                     l1618:	
  2469                           ;incstack = 0
  2470                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2471                           
  2472  0221  3000               	movlw	0
  2473  0222  00F7               	movwf	___lldiv@quotient+3
  2474  0223  3000               	movlw	0
  2475  0224  00F6               	movwf	___lldiv@quotient+2
  2476  0225  3000               	movlw	0
  2477  0226  00F5               	movwf	___lldiv@quotient+1
  2478  0227  3000               	movlw	0
  2479  0228  00F4               	movwf	___lldiv@quotient
  2480  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2481  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2482  022B  084D               	movf	___lldiv@divisor+3,w
  2483  022C  044C               	iorwf	___lldiv@divisor+2,w
  2484  022D  044B               	iorwf	___lldiv@divisor+1,w
  2485  022E  044A               	iorwf	___lldiv@divisor,w
  2486  022F  1903               	skipnz
  2487  0230  2A32               	goto	u1141
  2488  0231  2A33               	goto	u1140
  2489  0232                     u1141:
  2490  0232  2A80               	goto	l1638
  2491  0233                     u1140:
  2492  0233                     l1620:
  2493  0233  01F8               	clrf	___lldiv@counter
  2494  0234  0AF8               	incf	___lldiv@counter,f
  2495  0235  2A43               	goto	l1624
  2496  0236                     l1622:
  2497  0236  3001               	movlw	1
  2498  0237  00F3               	movwf	??___lldiv
  2499  0238                     u1155:
  2500  0238  1003               	clrc
  2501  0239  0DCA               	rlf	___lldiv@divisor,f
  2502  023A  0DCB               	rlf	___lldiv@divisor+1,f
  2503  023B  0DCC               	rlf	___lldiv@divisor+2,f
  2504  023C  0DCD               	rlf	___lldiv@divisor+3,f
  2505  023D  0BF3               	decfsz	??___lldiv,f
  2506  023E  2A38               	goto	u1155
  2507  023F  3001               	movlw	1
  2508  0240  00F3               	movwf	??___lldiv
  2509  0241  0873               	movf	??___lldiv,w
  2510  0242  07F8               	addwf	___lldiv@counter,f
  2511  0243                     l1624:
  2512  0243  1FCD               	btfss	___lldiv@divisor+3,7
  2513  0244  2A46               	goto	u1161
  2514  0245  2A47               	goto	u1160
  2515  0246                     u1161:
  2516  0246  2A36               	goto	l1622
  2517  0247                     u1160:
  2518  0247                     l1626:
  2519  0247  3001               	movlw	1
  2520  0248  00F3               	movwf	??___lldiv
  2521  0249                     u1175:
  2522  0249  1003               	clrc
  2523  024A  0DF4               	rlf	___lldiv@quotient,f
  2524  024B  0DF5               	rlf	___lldiv@quotient+1,f
  2525  024C  0DF6               	rlf	___lldiv@quotient+2,f
  2526  024D  0DF7               	rlf	___lldiv@quotient+3,f
  2527  024E  0BF3               	decfsz	??___lldiv,f
  2528  024F  2A49               	goto	u1175
  2529  0250                     l1628:
  2530  0250  084D               	movf	___lldiv@divisor+3,w
  2531  0251  0251               	subwf	___lldiv@dividend+3,w
  2532  0252  1D03               	skipz
  2533  0253  2A5E               	goto	u1185
  2534  0254  084C               	movf	___lldiv@divisor+2,w
  2535  0255  0250               	subwf	___lldiv@dividend+2,w
  2536  0256  1D03               	skipz
  2537  0257  2A5E               	goto	u1185
  2538  0258  084B               	movf	___lldiv@divisor+1,w
  2539  0259  024F               	subwf	___lldiv@dividend+1,w
  2540  025A  1D03               	skipz
  2541  025B  2A5E               	goto	u1185
  2542  025C  084A               	movf	___lldiv@divisor,w
  2543  025D  024E               	subwf	___lldiv@dividend,w
  2544  025E                     u1185:
  2545  025E  1C03               	skipc
  2546  025F  2A61               	goto	u1181
  2547  0260  2A62               	goto	u1180
  2548  0261                     u1181:
  2549  0261  2A71               	goto	l1634
  2550  0262                     u1180:
  2551  0262                     l1630:
  2552  0262  084A               	movf	___lldiv@divisor,w
  2553  0263  02CE               	subwf	___lldiv@dividend,f
  2554  0264  084B               	movf	___lldiv@divisor+1,w
  2555  0265  1C03               	skipc
  2556  0266  0F4B               	incfsz	___lldiv@divisor+1,w
  2557  0267  02CF               	subwf	___lldiv@dividend+1,f
  2558  0268  084C               	movf	___lldiv@divisor+2,w
  2559  0269  1C03               	skipc
  2560  026A  0F4C               	incfsz	___lldiv@divisor+2,w
  2561  026B  02D0               	subwf	___lldiv@dividend+2,f
  2562  026C  084D               	movf	___lldiv@divisor+3,w
  2563  026D  1C03               	skipc
  2564  026E  0F4D               	incfsz	___lldiv@divisor+3,w
  2565  026F  02D1               	subwf	___lldiv@dividend+3,f
  2566  0270                     l1632:
  2567  0270  1474               	bsf	___lldiv@quotient,0
  2568  0271                     l1634:
  2569  0271  3001               	movlw	1
  2570  0272                     u1195:
  2571  0272  1003               	clrc
  2572  0273  0CCD               	rrf	___lldiv@divisor+3,f
  2573  0274  0CCC               	rrf	___lldiv@divisor+2,f
  2574  0275  0CCB               	rrf	___lldiv@divisor+1,f
  2575  0276  0CCA               	rrf	___lldiv@divisor,f
  2576  0277  3EFF               	addlw	-1
  2577  0278  1D03               	skipz
  2578  0279  2A72               	goto	u1195
  2579  027A                     l1636:
  2580  027A  3001               	movlw	1
  2581  027B  02F8               	subwf	___lldiv@counter,f
  2582  027C  1D03               	btfss	3,2
  2583  027D  2A7F               	goto	u1201
  2584  027E  2A80               	goto	u1200
  2585  027F                     u1201:
  2586  027F  2A47               	goto	l1626
  2587  0280                     u1200:
  2588  0280                     l1638:
  2589  0280  0877               	movf	___lldiv@quotient+3,w
  2590  0281  00CD               	movwf	?___lldiv+3
  2591  0282  0876               	movf	___lldiv@quotient+2,w
  2592  0283  00CC               	movwf	?___lldiv+2
  2593  0284  0875               	movf	___lldiv@quotient+1,w
  2594  0285  00CB               	movwf	?___lldiv+1
  2595  0286  0874               	movf	___lldiv@quotient,w
  2596  0287  00CA               	movwf	?___lldiv
  2597  0288                     l313:
  2598  0288  0008               	return
  2599  0289                     __end_of___lldiv:
  2600                           
  2601                           	psect	text10
  2602  0344                     __ptext10:	
  2603 ;; *************** function _Lcd_Init *****************
  2604 ;; Defined at:
  2605 ;;		line 68 in file "LCD.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, pclath, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0
  2621 ;;      Temps:          2       0       0       0       0
  2622 ;;      Totals:         2       0       0       0       0
  2623 ;;Total ram usage:        2 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 4
  2626 ;; This function calls:
  2627 ;;		_Lcd_Cmd
  2628 ;;		_Lcd_Port
  2629 ;; This function is called by:
  2630 ;;		_setup
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634  0344                     _Lcd_Init:	
  2635                           ;psect for function _Lcd_Init
  2636                           
  2637  0344                     l1272:	
  2638                           ;incstack = 0
  2639                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2640                           
  2641                           
  2642                           ;LCD.c: 69:     Lcd_Port(0x00);
  2643  0344  3000               	movlw	0
  2644  0345  120A  118A  255B  120A  118A  	fcall	_Lcd_Port
  2645  034A                     l1274:
  2646                           
  2647                           ;LCD.c: 70:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2648  034A  3007               	movlw	7
  2649  034B  00F7               	movwf	??_Lcd_Init+1
  2650  034C  307D               	movlw	125
  2651  034D  00F6               	movwf	??_Lcd_Init
  2652  034E                     u1517:
  2653  034E  0BF6               	decfsz	??_Lcd_Init,f
  2654  034F  2B4E               	goto	u1517
  2655  0350  0BF7               	decfsz	??_Lcd_Init+1,f
  2656  0351  2B4E               	goto	u1517
  2657  0352                     l1276:
  2658                           
  2659                           ;LCD.c: 71:     Lcd_Cmd(0x03);
  2660  0352  3003               	movlw	3
  2661  0353  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2662                           
  2663                           ;LCD.c: 72:     _delay((unsigned long)((5)*(1000000/4000.0)));
  2664  0358  30F9               	movlw	249
  2665  0359  00F6               	movwf	??_Lcd_Init
  2666  035A                     u1527:
  2667  035A  2B5B               	nop2
  2668  035B  0BF6               	decfsz	??_Lcd_Init,f
  2669  035C  2B5A               	goto	u1527
  2670  035D  2B5E               	nop2
  2671  035E  2B5F               	nop2
  2672  035F                     l1278:
  2673                           
  2674                           ;LCD.c: 73:     Lcd_Cmd(0x03);
  2675  035F  3003               	movlw	3
  2676  0360  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2677  0365                     l1280:
  2678                           
  2679                           ;LCD.c: 74:     _delay((unsigned long)((11)*(1000000/4000000.0)));
  2680  0365  2B66               	nop2	;2 cycle nop
  2681  0366                     l1282:
  2682                           
  2683                           ;LCD.c: 75:     Lcd_Cmd(0x03);
  2684  0366  3003               	movlw	3
  2685  0367  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2686  036C                     l1284:
  2687                           
  2688                           ;LCD.c: 77:     Lcd_Cmd(0x02);
  2689  036C  3002               	movlw	2
  2690  036D  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2691  0372                     l1286:
  2692                           
  2693                           ;LCD.c: 78:     Lcd_Cmd(0x02);
  2694  0372  3002               	movlw	2
  2695  0373  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2696  0378                     l1288:
  2697                           
  2698                           ;LCD.c: 79:     Lcd_Cmd(0x08);
  2699  0378  3008               	movlw	8
  2700  0379  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2701  037E                     l1290:
  2702                           
  2703                           ;LCD.c: 80:     Lcd_Cmd(0x00);
  2704  037E  3000               	movlw	0
  2705  037F  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2706  0384                     l1292:
  2707                           
  2708                           ;LCD.c: 81:     Lcd_Cmd(0x0C);
  2709  0384  300C               	movlw	12
  2710  0385  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2711  038A                     l1294:
  2712                           
  2713                           ;LCD.c: 82:     Lcd_Cmd(0x00);
  2714  038A  3000               	movlw	0
  2715  038B  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2716  0390                     l1296:
  2717                           
  2718                           ;LCD.c: 83:     Lcd_Cmd(0x06);
  2719  0390  3006               	movlw	6
  2720  0391  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  2721  0396                     l105:
  2722  0396  0008               	return
  2723  0397                     __end_of_Lcd_Init:
  2724                           
  2725                           	psect	text11
  2726  04C4                     __ptext11:	
  2727 ;; *************** function _read_red *****************
  2728 ;; Defined at:
  2729 ;;		line 100 in file "main_master_p1.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0
  2745 ;;      Temps:          2       0       0       0       0
  2746 ;;      Totals:         2       0       0       0       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 2
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757  04C4                     _read_red:	
  2758                           ;psect for function _read_red
  2759                           
  2760  04C4                     l1430:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _read_red: [wreg+status,2+status,0]
  2763                           
  2764                           
  2765                           ;main_master_p1.c: 101:     if ((val>>1)== 'M'){
  2766  04C4  087A               	movf	_val,w
  2767  04C5  00F3               	movwf	??_read_red
  2768  04C6  3001               	movlw	1
  2769  04C7                     u925:
  2770  04C7  1003               	clrc
  2771  04C8  0CF3               	rrf	??_read_red,f
  2772  04C9  3EFF               	addlw	-1
  2773  04CA  1D03               	skipz
  2774  04CB  2CC7               	goto	u925
  2775  04CC  304D               	movlw	77
  2776  04CD  0673               	xorwf	??_read_red,w
  2777  04CE  1D03               	btfss	3,2
  2778  04CF  2CD1               	goto	u931
  2779  04D0  2CD2               	goto	u930
  2780  04D1                     u931:
  2781  04D1  2CDD               	goto	l59
  2782  04D2                     u930:
  2783  04D2                     l1432:
  2784                           
  2785                           ;main_master_p1.c: 102:         mov = val & 0x01;
  2786  04D2  087A               	movf	_val,w
  2787  04D3  3901               	andlw	1
  2788  04D4  00F3               	movwf	??_read_red
  2789  04D5  01F4               	clrf	??_read_red+1
  2790  04D6  0873               	movf	??_read_red,w
  2791  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2792  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2793  04D9  00A0               	movwf	_mov
  2794  04DA  0874               	movf	??_read_red+1,w
  2795  04DB  00A1               	movwf	_mov+1
  2796                           
  2797                           ;main_master_p1.c: 103:     }
  2798  04DC  2CEB               	goto	l62
  2799  04DD                     l59:	
  2800                           ;main_master_p1.c: 104:     else if((val & 0x80) == 128){
  2801                           
  2802  04DD  1FFA               	btfss	_val,7
  2803  04DE  2CE0               	goto	u941
  2804  04DF  2CE1               	goto	u940
  2805  04E0                     u941:
  2806  04E0  2CEB               	goto	l62
  2807  04E1                     u940:
  2808  04E1                     l1434:
  2809                           
  2810                           ;main_master_p1.c: 105:         temp = val & 0x7F;
  2811  04E1  087A               	movf	_val,w
  2812  04E2  397F               	andlw	127
  2813  04E3  00F3               	movwf	??_read_red
  2814  04E4  01F4               	clrf	??_read_red+1
  2815  04E5  0873               	movf	??_read_red,w
  2816  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2817  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2818  04E8  00E9               	movwf	_temp
  2819  04E9  0874               	movf	??_read_red+1,w
  2820  04EA  00EA               	movwf	_temp+1
  2821  04EB                     l62:
  2822  04EB  0008               	return
  2823  04EC                     __end_of_read_red:
  2824                           
  2825                           	psect	text12
  2826  0536                     __ptext12:	
  2827 ;; *************** function _Lcd_Write_String *****************
  2828 ;; Defined at:
  2829 ;;		line 101 in file "LCD.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  a               1    wreg     PTR unsigned char 
  2832 ;;		 -> srow(20), frow(20), 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2835 ;;		 -> srow(20), frow(20), 
  2836 ;;  i               2    0[BANK0 ] int 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       3       0       0       0
  2848 ;;      Temps:          1       0       0       0       0
  2849 ;;      Totals:         1       3       0       0       0
  2850 ;;Total ram usage:        4 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 4
  2853 ;; This function calls:
  2854 ;;		_Lcd_Write_Char
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860  0536                     _Lcd_Write_String:	
  2861                           ;psect for function _Lcd_Write_String
  2862                           
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2866                           ;Lcd_Write_String@a stored from wreg
  2867  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0538  00CC               	movwf	Lcd_Write_String@a
  2870  0539                     l1550:
  2871                           
  2872                           ;LCD.c: 102:     int i;;LCD.c: 103:     for (i = 0; a[i] != '\0'; i++)
  2873  0539  01CA               	clrf	Lcd_Write_String@i
  2874  053A  01CB               	clrf	Lcd_Write_String@i+1
  2875  053B  2D4F               	goto	l1556
  2876  053C                     l1552:
  2877                           
  2878                           ;LCD.c: 104:         Lcd_Write_Char(a[i]);
  2879  053C  084A               	movf	Lcd_Write_String@i,w
  2880  053D  074C               	addwf	Lcd_Write_String@a,w
  2881  053E  00F8               	movwf	??_Lcd_Write_String
  2882  053F  0878               	movf	??_Lcd_Write_String,w
  2883  0540  0084               	movwf	4
  2884  0541  0800               	movf	0,w
  2885  0542  120A  118A  248D  120A  118A  	fcall	_Lcd_Write_Char
  2886  0547                     l1554:
  2887  0547  3001               	movlw	1
  2888  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2890  054A  07CA               	addwf	Lcd_Write_String@i,f
  2891  054B  1803               	skipnc
  2892  054C  0ACB               	incf	Lcd_Write_String@i+1,f
  2893  054D  3000               	movlw	0
  2894  054E  07CB               	addwf	Lcd_Write_String@i+1,f
  2895  054F                     l1556:
  2896  054F  084A               	movf	Lcd_Write_String@i,w
  2897  0550  074C               	addwf	Lcd_Write_String@a,w
  2898  0551  00F8               	movwf	??_Lcd_Write_String
  2899  0552  0878               	movf	??_Lcd_Write_String,w
  2900  0553  0084               	movwf	4
  2901  0554  1383               	bcf	3,7	;select IRP bank0
  2902  0555  0800               	movf	0,w
  2903  0556  1D03               	btfss	3,2
  2904  0557  2D59               	goto	u1131
  2905  0558  2D5A               	goto	u1130
  2906  0559                     u1131:
  2907  0559  2D3C               	goto	l1552
  2908  055A                     u1130:
  2909  055A                     l114:
  2910  055A  0008               	return
  2911  055B                     __end_of_Lcd_Write_String:
  2912                           
  2913                           	psect	text13
  2914  048D                     __ptext13:	
  2915 ;; *************** function _Lcd_Write_Char *****************
  2916 ;; Defined at:
  2917 ;;		line 86 in file "LCD.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  a               1    wreg     unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  a               1    7[COMMON] unsigned char 
  2922 ;;  y               1    6[COMMON] unsigned char 
  2923 ;;  temp            1    5[COMMON] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       0       0       0       0
  2934 ;;      Locals:         3       0       0       0       0
  2935 ;;      Temps:          1       0       0       0       0
  2936 ;;      Totals:         4       0       0       0       0
  2937 ;;Total ram usage:        4 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 3
  2940 ;; This function calls:
  2941 ;;		_Lcd_Port
  2942 ;; This function is called by:
  2943 ;;		_Lcd_Write_String
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947  048D                     _Lcd_Write_Char:	
  2948                           ;psect for function _Lcd_Write_Char
  2949                           
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2953                           ;Lcd_Write_Char@a stored from wreg
  2954  048D  00F7               	movwf	Lcd_Write_Char@a
  2955  048E                     l1314:
  2956                           
  2957                           ;LCD.c: 87:     char temp, y;;LCD.c: 88:     temp = a & 0x0F;
  2958  048E  0877               	movf	Lcd_Write_Char@a,w
  2959  048F  390F               	andlw	15
  2960  0490  00F4               	movwf	??_Lcd_Write_Char
  2961  0491  0874               	movf	??_Lcd_Write_Char,w
  2962  0492  00F5               	movwf	Lcd_Write_Char@temp
  2963                           
  2964                           ;LCD.c: 89:     y = a & 0xF0;
  2965  0493  0877               	movf	Lcd_Write_Char@a,w
  2966  0494  39F0               	andlw	240
  2967  0495  00F4               	movwf	??_Lcd_Write_Char
  2968  0496  0874               	movf	??_Lcd_Write_Char,w
  2969  0497  00F6               	movwf	Lcd_Write_Char@y
  2970  0498                     l1316:
  2971                           
  2972                           ;LCD.c: 90:     RA0 = 1;
  2973  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2975  049A  1405               	bsf	5,0	;volatile
  2976  049B                     l1318:
  2977                           
  2978                           ;LCD.c: 91:     Lcd_Port(y >> 4);
  2979  049B  0876               	movf	Lcd_Write_Char@y,w
  2980  049C  00F4               	movwf	??_Lcd_Write_Char
  2981  049D  3004               	movlw	4
  2982  049E                     u725:
  2983  049E  1003               	clrc
  2984  049F  0CF4               	rrf	??_Lcd_Write_Char,f
  2985  04A0  3EFF               	addlw	-1
  2986  04A1  1D03               	skipz
  2987  04A2  2C9E               	goto	u725
  2988  04A3  0874               	movf	??_Lcd_Write_Char,w
  2989  04A4  120A  118A  255B  120A  118A  	fcall	_Lcd_Port
  2990  04A9                     l1320:
  2991                           
  2992                           ;LCD.c: 92:     RA1 = 1;
  2993  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2994  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2995  04AB  1485               	bsf	5,1	;volatile
  2996  04AC                     l1322:
  2997                           
  2998                           ;LCD.c: 93:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2999  04AC  3003               	movlw	3
  3000  04AD  00F4               	movwf	??_Lcd_Write_Char
  3001  04AE                     u1537:
  3002  04AE  0BF4               	decfsz	??_Lcd_Write_Char,f
  3003  04AF  2CAE               	goto	u1537
  3004  04B0                     l1324:
  3005                           
  3006                           ;LCD.c: 94:     RA1 = 0;
  3007  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3008  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3009  04B2  1085               	bcf	5,1	;volatile
  3010  04B3                     l1326:
  3011                           
  3012                           ;LCD.c: 95:     Lcd_Port(temp);
  3013  04B3  0875               	movf	Lcd_Write_Char@temp,w
  3014  04B4  120A  118A  255B  120A  118A  	fcall	_Lcd_Port
  3015  04B9                     l1328:
  3016                           
  3017                           ;LCD.c: 96:     RA1 = 1;
  3018  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3019  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3020  04BB  1485               	bsf	5,1	;volatile
  3021  04BC                     l1330:
  3022                           
  3023                           ;LCD.c: 97:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  3024  04BC  3003               	movlw	3
  3025  04BD  00F4               	movwf	??_Lcd_Write_Char
  3026  04BE                     u1547:
  3027  04BE  0BF4               	decfsz	??_Lcd_Write_Char,f
  3028  04BF  2CBE               	goto	u1547
  3029  04C0                     l1332:
  3030                           
  3031                           ;LCD.c: 98:     RA1 = 0;
  3032  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3033  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3034  04C2  1085               	bcf	5,1	;volatile
  3035  04C3                     l108:
  3036  04C3  0008               	return
  3037  04C4                     __end_of_Lcd_Write_Char:
  3038                           
  3039                           	psect	text14
  3040  02EC                     __ptext14:	
  3041 ;; *************** function _Lcd_Set_Cursor *****************
  3042 ;; Defined at:
  3043 ;;		line 50 in file "LCD.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  a               1    wreg     unsigned char 
  3046 ;;  b               1    6[COMMON] unsigned char 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  a               1    0[BANK0 ] unsigned char 
  3049 ;;  temp            1    3[BANK0 ] unsigned char 
  3050 ;;  y               1    2[BANK0 ] unsigned char 
  3051 ;;  z               1    1[BANK0 ] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         1       0       0       0       0
  3062 ;;      Locals:         0       4       0       0       0
  3063 ;;      Temps:          2       0       0       0       0
  3064 ;;      Totals:         3       4       0       0       0
  3065 ;;Total ram usage:        7 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 4
  3068 ;; This function calls:
  3069 ;;		_Lcd_Cmd
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075  02EC                     _Lcd_Set_Cursor:	
  3076                           ;psect for function _Lcd_Set_Cursor
  3077                           
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3081                           ;Lcd_Set_Cursor@a stored from wreg
  3082  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3083  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3084  02EE  00CA               	movwf	Lcd_Set_Cursor@a
  3085  02EF                     l1530:
  3086                           
  3087                           ;LCD.c: 50: void Lcd_Set_Cursor(char a, char b);LCD.c: 51: {;LCD.c: 52:     char temp, z
      +                          , y;;LCD.c: 53:     if (a == 1) {
  3088  02EF  034A               	decf	Lcd_Set_Cursor@a,w
  3089  02F0  1D03               	btfss	3,2
  3090  02F1  2AF3               	goto	u1091
  3091  02F2  2AF4               	goto	u1090
  3092  02F3                     u1091:
  3093  02F3  2B19               	goto	l1540
  3094  02F4                     u1090:
  3095  02F4                     l1532:
  3096                           
  3097                           ;LCD.c: 54:         temp = 0x80 + b - 1;
  3098  02F4  0876               	movf	Lcd_Set_Cursor@b,w
  3099  02F5  3E7F               	addlw	127
  3100  02F6  00F7               	movwf	??_Lcd_Set_Cursor
  3101  02F7  0877               	movf	??_Lcd_Set_Cursor,w
  3102  02F8  00CD               	movwf	Lcd_Set_Cursor@temp
  3103                           
  3104                           ;LCD.c: 55:         z = temp >> 4;
  3105  02F9  084D               	movf	Lcd_Set_Cursor@temp,w
  3106  02FA  00F7               	movwf	??_Lcd_Set_Cursor
  3107  02FB  3004               	movlw	4
  3108  02FC                     u1105:
  3109  02FC  1003               	clrc
  3110  02FD  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3111  02FE  3EFF               	addlw	-1
  3112  02FF  1D03               	skipz
  3113  0300  2AFC               	goto	u1105
  3114  0301  0877               	movf	??_Lcd_Set_Cursor,w
  3115  0302  00F8               	movwf	??_Lcd_Set_Cursor+1
  3116  0303  0878               	movf	??_Lcd_Set_Cursor+1,w
  3117  0304  00CB               	movwf	Lcd_Set_Cursor@z
  3118  0305                     l1534:
  3119                           
  3120                           ;LCD.c: 56:         y = temp & 0x0F;
  3121  0305  084D               	movf	Lcd_Set_Cursor@temp,w
  3122  0306  390F               	andlw	15
  3123  0307  00F7               	movwf	??_Lcd_Set_Cursor
  3124  0308  0877               	movf	??_Lcd_Set_Cursor,w
  3125  0309  00CC               	movwf	Lcd_Set_Cursor@y
  3126  030A                     l1536:
  3127                           
  3128                           ;LCD.c: 57:         Lcd_Cmd(z);
  3129  030A  084B               	movf	Lcd_Set_Cursor@z,w
  3130  030B  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  3131  0310                     l1538:
  3132                           
  3133                           ;LCD.c: 58:         Lcd_Cmd(y);
  3134  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0312  084C               	movf	Lcd_Set_Cursor@y,w
  3137  0313  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  3138                           
  3139                           ;LCD.c: 59:     } else if (a == 2) {
  3140  0318  2B43               	goto	l102
  3141  0319                     l1540:
  3142  0319  3002               	movlw	2
  3143  031A  064A               	xorwf	Lcd_Set_Cursor@a,w
  3144  031B  1D03               	btfss	3,2
  3145  031C  2B1E               	goto	u1111
  3146  031D  2B1F               	goto	u1110
  3147  031E                     u1111:
  3148  031E  2B43               	goto	l102
  3149  031F                     u1110:
  3150  031F                     l1542:
  3151                           
  3152                           ;LCD.c: 60:         temp = 0xC0 + b - 1;
  3153  031F  0876               	movf	Lcd_Set_Cursor@b,w
  3154  0320  3EBF               	addlw	191
  3155  0321  00F7               	movwf	??_Lcd_Set_Cursor
  3156  0322  0877               	movf	??_Lcd_Set_Cursor,w
  3157  0323  00CD               	movwf	Lcd_Set_Cursor@temp
  3158                           
  3159                           ;LCD.c: 61:         z = temp >> 4;
  3160  0324  084D               	movf	Lcd_Set_Cursor@temp,w
  3161  0325  00F7               	movwf	??_Lcd_Set_Cursor
  3162  0326  3004               	movlw	4
  3163  0327                     u1125:
  3164  0327  1003               	clrc
  3165  0328  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3166  0329  3EFF               	addlw	-1
  3167  032A  1D03               	skipz
  3168  032B  2B27               	goto	u1125
  3169  032C  0877               	movf	??_Lcd_Set_Cursor,w
  3170  032D  00F8               	movwf	??_Lcd_Set_Cursor+1
  3171  032E  0878               	movf	??_Lcd_Set_Cursor+1,w
  3172  032F  00CB               	movwf	Lcd_Set_Cursor@z
  3173  0330                     l1544:
  3174                           
  3175                           ;LCD.c: 62:         y = temp & 0x0F;
  3176  0330  084D               	movf	Lcd_Set_Cursor@temp,w
  3177  0331  390F               	andlw	15
  3178  0332  00F7               	movwf	??_Lcd_Set_Cursor
  3179  0333  0877               	movf	??_Lcd_Set_Cursor,w
  3180  0334  00CC               	movwf	Lcd_Set_Cursor@y
  3181  0335                     l1546:
  3182                           
  3183                           ;LCD.c: 63:         Lcd_Cmd(z);
  3184  0335  084B               	movf	Lcd_Set_Cursor@z,w
  3185  0336  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  3186  033B                     l1548:
  3187                           
  3188                           ;LCD.c: 64:         Lcd_Cmd(y);
  3189  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3190  033C  1303               	bcf	3,6	;RP1=0, select bank0
  3191  033D  084C               	movf	Lcd_Set_Cursor@y,w
  3192  033E  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  3193  0343                     l102:
  3194  0343  0008               	return
  3195  0344                     __end_of_Lcd_Set_Cursor:
  3196                           
  3197                           	psect	text15
  3198  05BC                     __ptext15:	
  3199 ;; *************** function _Lcd_Clear *****************
  3200 ;; Defined at:
  3201 ;;		line 45 in file "LCD.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 4
  3222 ;; This function calls:
  3223 ;;		_Lcd_Cmd
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229  05BC                     _Lcd_Clear:	
  3230                           ;psect for function _Lcd_Clear
  3231                           
  3232  05BC                     l1428:	
  3233                           ;incstack = 0
  3234                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3235                           
  3236                           
  3237                           ;LCD.c: 46:     Lcd_Cmd(0);
  3238  05BC  3000               	movlw	0
  3239  05BD  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  3240                           
  3241                           ;LCD.c: 47:     Lcd_Cmd(1);
  3242  05C2  3001               	movlw	1
  3243  05C3  120A  118A  257D  120A  118A  	fcall	_Lcd_Cmd
  3244  05C8                     l96:
  3245  05C8  0008               	return
  3246  05C9                     __end_of_Lcd_Clear:
  3247                           
  3248                           	psect	text16
  3249  057D                     __ptext16:	
  3250 ;; *************** function _Lcd_Cmd *****************
  3251 ;; Defined at:
  3252 ;;		line 36 in file "LCD.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  a               1    wreg     unsigned char 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  a               1    5[COMMON] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       0       0       0       0
  3267 ;;      Locals:         1       0       0       0       0
  3268 ;;      Temps:          1       0       0       0       0
  3269 ;;      Totals:         2       0       0       0       0
  3270 ;;Total ram usage:        2 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 3
  3273 ;; This function calls:
  3274 ;;		_Lcd_Port
  3275 ;; This function is called by:
  3276 ;;		_Lcd_Clear
  3277 ;;		_Lcd_Set_Cursor
  3278 ;;		_Lcd_Init
  3279 ;;		_Lcd_Shift_Right
  3280 ;;		_Lcd_Shift_Left
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284  057D                     _Lcd_Cmd:	
  3285                           ;psect for function _Lcd_Cmd
  3286                           
  3287                           
  3288                           ;incstack = 0
  3289                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3290                           ;Lcd_Cmd@a stored from wreg
  3291  057D  00F5               	movwf	Lcd_Cmd@a
  3292  057E                     l1218:
  3293                           
  3294                           ;LCD.c: 36: void Lcd_Cmd(char a);LCD.c: 37: {;LCD.c: 38:     RA0 = 0;
  3295  057E  1283               	bcf	3,5	;RP0=0, select bank0
  3296  057F  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0580  1005               	bcf	5,0	;volatile
  3298  0581                     l1220:
  3299                           
  3300                           ;LCD.c: 39:     Lcd_Port(a);
  3301  0581  0875               	movf	Lcd_Cmd@a,w
  3302  0582  120A  118A  255B  120A  118A  	fcall	_Lcd_Port
  3303  0587                     l1222:
  3304                           
  3305                           ;LCD.c: 40:     RA1 = 1;
  3306  0587  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0588  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0589  1485               	bsf	5,1	;volatile
  3309  058A                     l1224:
  3310                           
  3311                           ;LCD.c: 41:     _delay((unsigned long)((4)*(1000000/4000.0)));
  3312  058A  30C7               	movlw	199
  3313  058B  00F4               	movwf	??_Lcd_Cmd
  3314  058C                     u1557:
  3315  058C  2D8D               	nop2
  3316  058D  0BF4               	decfsz	??_Lcd_Cmd,f
  3317  058E  2D8C               	goto	u1557
  3318  058F  2D90               	nop2
  3319  0590  2D91               	nop2
  3320  0591                     l1226:
  3321                           
  3322                           ;LCD.c: 42:     RA1 = 0;
  3323  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0592  1303               	bcf	3,6	;RP1=0, select bank0
  3325  0593  1085               	bcf	5,1	;volatile
  3326  0594                     l93:
  3327  0594  0008               	return
  3328  0595                     __end_of_Lcd_Cmd:
  3329                           
  3330                           	psect	text17
  3331  055B                     __ptext17:	
  3332 ;; *************** function _Lcd_Port *****************
  3333 ;; Defined at:
  3334 ;;		line 13 in file "LCD.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  a               1    wreg     unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  a               1    3[COMMON] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3348 ;;      Params:         0       0       0       0       0
  3349 ;;      Locals:         1       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0
  3351 ;;      Totals:         1       0       0       0       0
  3352 ;;Total ram usage:        1 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 2
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_Lcd_Cmd
  3359 ;;		_Lcd_Init
  3360 ;;		_Lcd_Write_Char
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364  055B                     _Lcd_Port:	
  3365                           ;psect for function _Lcd_Port
  3366                           
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _Lcd_Port: [wreg]
  3370                           ;Lcd_Port@a stored from wreg
  3371  055B  00F3               	movwf	Lcd_Port@a
  3372  055C                     l1208:
  3373                           
  3374                           ;LCD.c: 13: void Lcd_Port(char a);LCD.c: 14: {;LCD.c: 15:     if (a & 1)
  3375  055C  1C73               	btfss	Lcd_Port@a,0
  3376  055D  2D5F               	goto	u581
  3377  055E  2D60               	goto	u580
  3378  055F                     u581:
  3379  055F  2D64               	goto	l82
  3380  0560                     u580:
  3381  0560                     l1210:
  3382                           
  3383                           ;LCD.c: 16:         RA2 = 1;
  3384  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0562  1505               	bsf	5,2	;volatile
  3387  0563  2D67               	goto	l83
  3388  0564                     l82:	
  3389                           ;LCD.c: 17:     else
  3390                           
  3391                           
  3392                           ;LCD.c: 18:         RA2 = 0;
  3393  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0566  1105               	bcf	5,2	;volatile
  3396  0567                     l83:
  3397                           
  3398                           ;LCD.c: 20:     if (a & 2)
  3399  0567  1CF3               	btfss	Lcd_Port@a,1
  3400  0568  2D6A               	goto	u591
  3401  0569  2D6B               	goto	u590
  3402  056A                     u591:
  3403  056A  2D6D               	goto	l84
  3404  056B                     u590:
  3405  056B                     l1212:
  3406                           
  3407                           ;LCD.c: 21:         RA3 = 1;
  3408  056B  1585               	bsf	5,3	;volatile
  3409  056C  2D6E               	goto	l85
  3410  056D                     l84:	
  3411                           ;LCD.c: 22:     else
  3412                           
  3413                           
  3414                           ;LCD.c: 23:         RA3 = 0;
  3415  056D  1185               	bcf	5,3	;volatile
  3416  056E                     l85:
  3417                           
  3418                           ;LCD.c: 25:     if (a & 4)
  3419  056E  1D73               	btfss	Lcd_Port@a,2
  3420  056F  2D71               	goto	u601
  3421  0570  2D72               	goto	u600
  3422  0571                     u601:
  3423  0571  2D74               	goto	l86
  3424  0572                     u600:
  3425  0572                     l1214:
  3426                           
  3427                           ;LCD.c: 26:         RA4 = 1;
  3428  0572  1605               	bsf	5,4	;volatile
  3429  0573  2D75               	goto	l87
  3430  0574                     l86:	
  3431                           ;LCD.c: 27:     else
  3432                           
  3433                           
  3434                           ;LCD.c: 28:         RA4 = 0;
  3435  0574  1205               	bcf	5,4	;volatile
  3436  0575                     l87:
  3437                           
  3438                           ;LCD.c: 30:     if (a & 8)
  3439  0575  1DF3               	btfss	Lcd_Port@a,3
  3440  0576  2D78               	goto	u611
  3441  0577  2D79               	goto	u610
  3442  0578                     u611:
  3443  0578  2D7B               	goto	l88
  3444  0579                     u610:
  3445  0579                     l1216:
  3446                           
  3447                           ;LCD.c: 31:         RA5 = 1;
  3448  0579  1685               	bsf	5,5	;volatile
  3449  057A  2D7C               	goto	l90
  3450  057B                     l88:	
  3451                           ;LCD.c: 32:     else
  3452                           
  3453                           
  3454                           ;LCD.c: 33:         RA5 = 0;
  3455  057B  1285               	bcf	5,5	;volatile
  3456  057C                     l90:
  3457  057C  0008               	return
  3458  057D                     __end_of_Lcd_Port:
  3459                           
  3460                           	psect	text18
  3461  0595                     __ptext18:	
  3462 ;; *************** function _master *****************
  3463 ;; Defined at:
  3464 ;;		line 71 in file "main_master_p1.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0
  3480 ;;      Temps:          3       0       0       0       0
  3481 ;;      Totals:         3       0       0       0       0
  3482 ;;Total ram usage:        3 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 1
  3485 ;; This function calls:
  3486 ;;		_USART_read
  3487 ;; This function is called by:
  3488 ;;		Interrupt level 1
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492  0595                     _master:	
  3493                           ;psect for function _master
  3494                           
  3495  0595                     i1l1142:
  3496                           
  3497                           ;main_master_p1.c: 73:     if(PIR1bits.RCIF){
  3498  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0596  1303               	bcf	3,6	;RP1=0, select bank0
  3500  0597  1E8C               	btfss	12,5	;volatile
  3501  0598  2D9A               	goto	u57_21
  3502  0599  2D9B               	goto	u57_20
  3503  059A                     u57_21:
  3504  059A  2DA3               	goto	i1l48
  3505  059B                     u57_20:
  3506  059B                     i1l1144:
  3507                           
  3508                           ;main_master_p1.c: 74:         val = USART_read();
  3509  059B  120A  118A  25D1  120A  118A  	fcall	_USART_read
  3510  05A0  00F0               	movwf	??_master
  3511  05A1  0870               	movf	??_master,w
  3512  05A2  00FA               	movwf	_val
  3513  05A3                     i1l48:
  3514  05A3  0872               	movf	??_master+2,w
  3515  05A4  008A               	movwf	10
  3516  05A5  0E71               	swapf	??_master+1,w
  3517  05A6  0083               	movwf	3
  3518  05A7  0EFE               	swapf	btemp,f
  3519  05A8  0E7E               	swapf	btemp,w
  3520  05A9  0009               	retfie
  3521  05AA                     __end_of_master:
  3522                           
  3523                           	psect	intentry
  3524  0004                     __pintentry:	
  3525                           ;incstack = 0
  3526                           ; Regs used in _master: [wreg+pclath+cstack]
  3527                           
  3528  0004                     interrupt_function:
  3529  007E                     saved_w	set	btemp
  3530  0004  00FE               	movwf	btemp
  3531  0005  0E03               	swapf	3,w
  3532  0006  00F1               	movwf	??_master+1
  3533  0007  080A               	movf	10,w
  3534  0008  00F2               	movwf	??_master+2
  3535  0009  120A  118A  2D95   	ljmp	_master
  3536                           
  3537                           	psect	text19
  3538  05D1                     __ptext19:	
  3539 ;; *************** function _USART_read *****************
  3540 ;; Defined at:
  3541 ;;		line 30 in file "USART.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      unsigned char 
  3548 ;; Registers used:
  3549 ;;		wreg
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0
  3558 ;;      Totals:         0       0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_master
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568  05D1                     _USART_read:	
  3569                           ;psect for function _USART_read
  3570                           
  3571  05D1                     i1l988:	
  3572                           ;incstack = 0
  3573                           ; Regs used in _USART_read: [wreg]
  3574                           
  3575                           
  3576                           ;USART.c: 32:     return RCREG;
  3577  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3578  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3579  05D3  081A               	movf	26,w	;volatile
  3580  05D4                     i1l152:
  3581  05D4  0008               	return
  3582  05D5                     __end_of_USART_read:
  3583  007E                     btemp	set	126	;btemp
  3584  007E                     wtemp0	set	126
  3585                           
  3586                           	psect	idloc
  3587                           
  3588                           ;Config register IDLOC0 @ 0x2000
  3589                           ;	unspecified, using default values
  3590  2000                     	org	8192
  3591  2000  3FFF               	dw	16383
  3592                           
  3593                           ;Config register IDLOC1 @ 0x2001
  3594                           ;	unspecified, using default values
  3595  2001                     	org	8193
  3596  2001  3FFF               	dw	16383
  3597                           
  3598                           ;Config register IDLOC2 @ 0x2002
  3599                           ;	unspecified, using default values
  3600  2002                     	org	8194
  3601  2002  3FFF               	dw	16383
  3602                           
  3603                           ;Config register IDLOC3 @ 0x2003
  3604                           ;	unspecified, using default values
  3605  2003                     	org	8195
  3606  2003  3FFF               	dw	16383
  3607                           
  3608                           	psect	config
  3609                           
  3610                           ;Config register CONFIG1 @ 0x2007
  3611                           ;	Oscillator Selection bits
  3612                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3613                           ;	Watchdog Timer Enable bit
  3614                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3615                           ;	Power-up Timer Enable bit
  3616                           ;	PWRTE = OFF, PWRT disabled
  3617                           ;	RE3/MCLR pin function select bit
  3618                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3619                           ;	Code Protection bit
  3620                           ;	CP = OFF, Program memory code protection is disabled
  3621                           ;	Data Code Protection bit
  3622                           ;	CPD = OFF, Data memory code protection is disabled
  3623                           ;	Brown Out Reset Selection bits
  3624                           ;	BOREN = OFF, BOR disabled
  3625                           ;	Internal External Switchover bit
  3626                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3627                           ;	Fail-Safe Clock Monitor Enabled bit
  3628                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3629                           ;	Low Voltage Programming Enable bit
  3630                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3631                           ;	In-Circuit Debugger Mode bit
  3632                           ;	DEBUG = 0x1, unprogrammed default
  3633  2007                     	org	8199
  3634  2007  20D4               	dw	8404
  3635                           
  3636                           ;Config register CONFIG2 @ 0x2008
  3637                           ;	Brown-out Reset Selection bit
  3638                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3639                           ;	Flash Program Memory Self Write Enable bits
  3640                           ;	WRT = OFF, Write protection off
  3641  2008                     	org	8200
  3642  2008  3EFF               	dw	16127

Data Sizes:
    Strings     41
    Constant    10
    Data        2
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     31      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_2(CODE[19]), STR_1(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_set->___lldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _master in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_USART_set
    _USART_set->___lldiv

Critical Paths under _master in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _master in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _master in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _master in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4261
                                             30 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _read_red
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    20     11    2492
                                              7 BANK0     23    12     11
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     793
                           _Lcd_Init
                          _USART_set
                        _int_osc_MHz
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     573
                                              8 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _read_red                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _master                                               3     3      0       0
                                              0 COMMON     3     3      0
                         _USART_read
 ---------------------------------------------------------------------------------
 (6) _USART_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _read_red
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _USART_set
       ___lldiv
     _int_osc_MHz
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _master (ROOT)
   _USART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      56      12        0.0%
ABS                  0      0      56       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Sep 14 15:23:20 2022

                       pc 0002                        l62 04EB                        l65 0535  
                      l90 057C                        l82 0564                        l83 0567  
                      l59 04DD                        l84 056D                        l85 056E  
                      l93 0594                        l86 0574                        l87 0575  
                      l88 057B                        l96 05C8                        fsr 0004  
     ___wmul@multiplicand 0075                       l102 0343                       l105 0396  
                     l114 055A                       l108 04C3                       l132 0453  
                     l127 0452                       l313 0288                       l149 0220  
                     l262 0108                       l273 01B0                       l277 04F8  
                     l279 0510                       l730 05BB                       l549 03DC  
                     l559 0418                       _RA0 0028                       _RA1 0029  
                     _RA2 002A                       _RA3 002B                       _RA4 002C  
                     _RA5 002D                       u600 0572                       u601 0571  
                     u610 0579                       u611 0578                       u730 05B2  
                     u731 05B1                       u580 0560                       u740 05B8  
                     u581 055F                       u725 049E                       u741 05B7  
                     u590 056B                       u750 04F2                       u591 056A  
                     u751 04F1                       u930 04D2                       u931 04D1  
                     u940 04E1                       u780 050C                       u941 04E0  
                     u925 04C7                       u781 050B                       u765 04F9  
                     u775 0500                       _val 007A                       _mov 0020  
                     fsr0 0004                       indf 0000                      l1210 0560  
                    l1212 056B                      l1220 0581                      l1214 0572  
                    l1222 0587                      l1216 0579                      l1208 055C  
                    l1224 058A                      l1320 04A9                      l1226 0591  
                    l1218 057E                      l1330 04BC                      l1322 04AC  
                    l1314 048E                      l1332 04C0                      l1324 04B0  
                    l1316 0498                      l1260 0430                      l1252 041A  
                    l1340 05B8                      l1326 04B3                      l1318 049B  
                    l1430 04C4                      l1262 0435                      l1254 041B  
                    l1350 04F2                      l1342 05BA                      l1334 05AB  
                    l1328 04B9                      l1432 04D2                      l1280 0365  
                    l1272 0344                      l1256 0422                      l1352 04FF  
                    l1336 05AC                      l1530 02EF                      l1434 04E1  
                    l1290 037E                      l1282 0366                      l1274 034A  
                    l1258 0429                      l1266 043C                      l1354 0506  
                    l1346 04EC                      l1338 05B2                      l1428 05BC  
                    l1532 02F4                      l1540 0319                      l1292 0384  
                    l1284 036C                      l1276 0352                      l1620 0233  
                    l1700 040E                      l1356 050C                      l1348 04EE  
                    l1542 031F                      l1534 0305                      l1550 0539  
                    l1294 038A                      l1286 0372                      l1278 035F  
                    l1630 0262                      l1622 0236                      l1710 051A  
                    l1702 0414                      l1544 0330                      l1536 030A  
                    l1552 053C                      l1296 0390                      l1288 0378  
                    l1632 0270                      l1624 0243                      l1720 0533  
                    l1712 051B                      l1800 0156                      l1546 0335  
                    l1538 0310                      l1554 0547                      l1634 0271  
                    l1626 0247                      l1618 0221                      l1650 0216  
                    l1642 01B1                      l1722 0534                      l1714 051E  
                    l1706 0511                      l1802 0186                      l1810 01AC  
                    l1730 0037                      l1548 033B                      l1556 054F  
                    l1636 027A                      l1628 0250                      l1652 0219  
                    l1644 01B7                      l1716 051F                      l1708 0517  
                    l1660 039B                      l1804 018D                      l1740 005A  
                    l1732 003E                      l1820 028E                      l1638 0280  
                    l1654 021C                      l1646 01BA                      l1718 0524  
                    l1670 03B3                      l1662 03A1                      l1806 0191  
                    l1742 006F                      l1750 0096                      l1734 0043  
                    l1726 002C                      l1830 02D4                      l1822 0293  
                    l1656 021F                      l1648 0215                      l1672 03C4  
                    l1664 03A4                      l1680 03D8                      l1760 00C9  
                    l1752 00B5                      l1744 0082                      l1736 0046  
                    l1728 0031                      l1808 019A                      l1832 02E2  
                    l1824 0298                      l1674 03CA                      l1666 03AB  
                    l1658 0397                      l1690 03EF                      l1762 00CE  
                    l1754 00BD                      l1746 0086                      l1738 0056  
                    l1826 02B8                      l1818 0289                      l1676 03CB  
                    l1668 03AF                      l1692 03F3                      l1684 03DD  
                    l1780 0113                      l1772 00EC                      l1756 00C1  
                    l1828 02CC                      l1678 03D2                      l1694 03F7  
                    l1686 03E5                      l1790 0134                      l1782 011F  
                    l1774 00F6                      l1758 00C5                      l1696 0401  
                    l1688 03E8                      l1792 0140                      l1784 0123  
                    l1776 00FC                      l1768 00D0                      l1698 0407  
                    l1794 0146                      l1786 0129                      l1778 0102  
                    l1874 00AA                      l1876 0444                      l1796 014D  
                    l1788 0130                      l1798 0151                      STR_1 0464  
                    STR_2 047A                      u1110 031F                      u1111 031E  
                    u1200 0280                      u1105 02FC                      u1201 027F  
                    u1130 055A                      u1210 01CA                      u1131 0559  
                    u1140 0233                      u1220 01E3                      u1300 03D8  
                    u1125 0327                      u1141 0232                      u1301 03D7  
                    u1310 03E5                      u1231 01F5                      u1215 01C5  
                    u1311 03E4                      u1160 0247                      u1232 01F6  
                    u1240 03A1                      u1400 00C5                      u1161 0246  
                    u1233 01FB                      u1225 01DE                      u1241 03A0  
                    u1401 00C4                      u1090 02F4                      u1234 01FC  
                    u1330 03F7                      u1410 00EB                      u1091 02F3  
                    u1155 0238                      u1235 0201                      u1331 03F6  
                    u1411 00EA                      u1180 0262                      u1236 0202  
                    u1260 03B3                      u1340 0401                      u1500 01AC  
                    u1420 00F6                      u1181 0261                      u1261 03B2  
                    u1341 0400                      u1325 03E9                      u1501 01AB  
                    u1421 00F5                      u1430 00FC                      u1175 0249  
                    u1255 03A5                      u1431 00FB                      u1415 00E7  
                    u1280 03C4                      u1360 0414                      u1440 0102  
                    u1185 025E                      u1281 03C3                      u1361 0413  
                    u1345 03FD                      u1441 0101                      u1450 0113  
                    u1370 0037                      u1195 0272                      u1275 03B4  
                    u1355 0408                      u1451 0112                      u1371 0036  
                    u1460 0129                      u1380 0056                      u1517 034E  
                    u1285 03C0                      u1461 0128                      u1381 0055  
                    u1470 0140                      u1390 0096                      u1527 035A  
                    u1295 03CC                      u1471 013F                      u1455 010F  
                    u1391 0095                      u1480 0146                      u1537 04AE  
                    u1481 0145                      u1490 019A                      u1547 04BE  
                    u1491 0199                      u1557 058C                      i1l48 05A3  
       ?_Lcd_Write_String 0070                      _main 0289                      _frow 0036  
                    _temp 0069                      btemp 007E                      _srow 0022  
                    start 000C        ??_Lcd_Write_String 0078           __end_of_Lcd_Cmd 0595  
                   ?_main 0070                     _ANSEL 0188           __end_of___lldiv 0289  
         __end_of___lwdiv 03DD                     i1l152 05D4           __end_of___lwmod 0419  
                   i1l988 05D1                     _RCREG 001A                     _SPBRG 0099  
                   u57_20 059B                     u57_21 059A                     _TRISA 0085  
                   _TRISB 0086           int_osc_MHz@freq 0075           __end_of_dpowers 0464  
         __end_of_isdigit 05BC                     _setup 0511              ?_int_osc_MHz 0070  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 01B1          __end_of_Lcd_Init 0397          __end_of_Lcd_Port 057D  
             ?_USART_read 0070           __initialization 000F              __end_of_main 02EC  
                  ??_main 0068                    ?_setup 0070                    _ANSELH 0189  
                  i1l1142 0595                    i1l1144 059B                 ??_Lcd_Cmd 0074  
                  _SPBRGH 009A                    ___wmul 04EC                 ??___lldiv 0073  
               ??___lwdiv 0077                 ??___lwmod 0078                    _master 0595  
        __end_of_read_red 04EC         __end_of_USART_set 0221                 ??_isdigit 0073  
                  saved_w 007E                 ??_sprintf 005C           Lcd_Set_Cursor@a 004A  
         Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 004C           Lcd_Set_Cursor@z 004B  
 __end_of__initialization 0025         __end_of_Lcd_Clear 05C9            __pcstackCOMMON 0070  
            __pidataBANK0 05D5             __end_of_setup 0536            _Lcd_Set_Cursor 02EC  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 0065  
                 ??_setup 0079                __pbssBANK0 0020                __pmaintext 0289  
                 ?___wmul 0073                __pintentry 0004                   ?_master 0070  
  __end_of_Lcd_Set_Cursor 0344                ??_Lcd_Init 0076                ??_Lcd_Port 0073  
              __stringtab 0454            _Lcd_Write_Char 048D                   _Lcd_Cmd 057D  
               ?_read_red 0070              ??_USART_read 0070                   ___lldiv 0221  
                 ___lwdiv 0397                   ___lwmod 03DD           ?_Lcd_Set_Cursor 0076  
                 __ptext1 0029                   __ptext2 05AA                   __ptext3 04EC  
                 __ptext4 03DD                   __ptext5 0397                   __ptext6 0511  
                 __ptext7 0419                   __ptext8 01B1                   __ptext9 0221  
                 _dpowers 045A                   _isdigit 05AA                   _sprintf 0029  
                 clrloop0 05CA        __end_of_USART_read 05D5    __end_of_Lcd_Write_Char 04C4  
    end_of_initialization 0025                ??_read_red 0073           ___lldiv@divisor 004A  
         ___lldiv@counter 0078                 _RCSTAbits 0018                 Lcd_Port@a 0073  
               _USART_set 01B1           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 004C  
       Lcd_Write_String@i 004A                 _TXSTAbits 0098                 _Lcd_Clear 05BC  
          __end_of___wmul 0511          _Lcd_Write_String 0536               _BAUDCTLbits 0187  
          __end_of_master 05AA       start_initialization 000F                ?_USART_set 0052  
       USART_set@baudrate 0052                ?_Lcd_Clear 0070                  ??___wmul 0077  
             __pdataBANK0 0069           Lcd_Write_Char@a 0077                  ??_master 0070  
         Lcd_Write_Char@y 0076               __pbssCOMMON 007A                 ___latbits 0002  
           __pcstackBANK0 004A             ??_int_osc_MHz 0073                  ?_Lcd_Cmd 0070  
             sprintf@flag 0061               sprintf@prec 0060          ___lwdiv@dividend 0075  
        ??_Lcd_Set_Cursor 0077                  ?___lldiv 004A                  ?___lwdiv 0073  
                ?___lwmod 004D                 __pstrings 0454                  ?_isdigit 0070  
             ??_USART_set 0056          ___lwdiv@quotient 004B                  ?_sprintf 0051  
       interrupt_function 0004            ___wmul@product 0077                 clear_ram0 05C9  
                _PIE1bits 008C       __end_of_int_osc_MHz 0454                  Lcd_Cmd@a 0075  
                _PIR1bits 000C               ??_Lcd_Clear 0076               __stringbase 0459  
       ___wmul@multiplier 0073          ??_Lcd_Write_Char 0074                  _Lcd_Init 0344  
                _Lcd_Port 055B  __end_of_Lcd_Write_String 055B        __end_of__stringtab 045A  
             _isdigit$838 0073                sprintf@val 0062           ___lwdiv@divisor 0073  
         ___lwdiv@counter 004A                  __ptext10 0344                  __ptext11 04C4  
                __ptext12 0536                  __ptext13 048D                  __ptext14 02EC  
                __ptext15 05BC                  __ptext16 057D                  __ptext17 055B  
                __ptext18 0595                  __ptext19 05D1               _int_osc_MHz 0419  
                _read_red 04C4                _INTCONbits 000B                  isdigit@c 0074  
      Lcd_Write_Char@temp 0075                  intlevel1 0000                 sprintf@ap 005F  
               sprintf@sp 0064          ___lwmod@dividend 004F          ___lldiv@dividend 004E  
               stringcode 0454                _OSCCONbits 008F        Lcd_Set_Cursor@temp 004D  
                sprintf@c 0067                  sprintf@f 0051          ___lldiv@quotient 0074  
         ___lwmod@divisor 004D           ___lwmod@counter 0079                  stringdir 0454  
                stringtab 0454                _USART_read 05D1  
