

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Sep 29 23:30:28 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.40
    46                           ; Generated 17/11/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  000E                     	;# 
   408  000F                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  0081                     	;# 
   428  0085                     	;# 
   429  0086                     	;# 
   430  0087                     	;# 
   431  0088                     	;# 
   432  0089                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  008F                     	;# 
   437  0090                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  0105                     	;# 
   456  0107                     	;# 
   457  0108                     	;# 
   458  0109                     	;# 
   459  010C                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  0185                     	;# 
   465  0187                     	;# 
   466  0188                     	;# 
   467  0189                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470  0000                     	;# 
   471  0001                     	;# 
   472  0002                     	;# 
   473  0003                     	;# 
   474  0004                     	;# 
   475  0005                     	;# 
   476  0006                     	;# 
   477  0007                     	;# 
   478  0008                     	;# 
   479  0009                     	;# 
   480  000A                     	;# 
   481  000B                     	;# 
   482  000C                     	;# 
   483  000D                     	;# 
   484  000E                     	;# 
   485  000E                     	;# 
   486  000F                     	;# 
   487  0010                     	;# 
   488  0011                     	;# 
   489  0012                     	;# 
   490  0013                     	;# 
   491  0014                     	;# 
   492  0015                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0017                     	;# 
   496  0018                     	;# 
   497  0019                     	;# 
   498  001A                     	;# 
   499  001B                     	;# 
   500  001B                     	;# 
   501  001C                     	;# 
   502  001D                     	;# 
   503  001E                     	;# 
   504  001F                     	;# 
   505  0081                     	;# 
   506  0085                     	;# 
   507  0086                     	;# 
   508  0087                     	;# 
   509  0088                     	;# 
   510  0089                     	;# 
   511  008C                     	;# 
   512  008D                     	;# 
   513  008E                     	;# 
   514  008F                     	;# 
   515  0090                     	;# 
   516  0091                     	;# 
   517  0092                     	;# 
   518  0093                     	;# 
   519  0093                     	;# 
   520  0093                     	;# 
   521  0094                     	;# 
   522  0095                     	;# 
   523  0096                     	;# 
   524  0097                     	;# 
   525  0098                     	;# 
   526  0099                     	;# 
   527  009A                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  0105                     	;# 
   534  0107                     	;# 
   535  0108                     	;# 
   536  0109                     	;# 
   537  010C                     	;# 
   538  010C                     	;# 
   539  010D                     	;# 
   540  010E                     	;# 
   541  010F                     	;# 
   542  0185                     	;# 
   543  0187                     	;# 
   544  0188                     	;# 
   545  0189                     	;# 
   546  018C                     	;# 
   547  018D                     	;# 
   548                           
   549                           	psect	idataCOMMON
   550  074B                     __pidataCOMMON:
   551                           
   552                           ;initializer for _req
   553  074B  340A               	retlw	10
   554  074C  3400               	retlw	0
   555                           
   556                           	psect	idataBANK0
   557  073B                     __pidataBANK0:	
   558                           ;initializer for _mins
   559                           
   560  073B  340F               	retlw	15
   561  073C  3400               	retlw	0
   562                           
   563                           ;initializer for _hrs
   564  073D  340F               	retlw	15
   565  073E  3400               	retlw	0
   566                           
   567                           ;initializer for _temp
   568  073F  3418               	retlw	24
   569  0740  3400               	retlw	0
   570                           
   571                           	psect	strings
   572  0624                     __pstrings:
   573  0624                     stringtab:
   574  0624                     __stringtab:
   575  0624                     stringcode:	
   576                           ;	String table - string pointers are 1 byte each
   577                           
   578  0624                     stringdir:
   579  0624  3006               	movlw	high stringdir
   580  0625  008A               	movwf	10
   581  0626  0804               	movf	4,w
   582  0627  0A84               	incf	4,f
   583  0628  0782               	addwf	2,f
   584  0629                     __stringbase:
   585  0629  3400               	retlw	0
   586  062A                     __end_of__stringtab:
   587  062A                     _dpowers:
   588  062A  3401               	retlw	1
   589  062B  3400               	retlw	0
   590  062C  340A               	retlw	10
   591  062D  3400               	retlw	0
   592  062E  3464               	retlw	100
   593  062F  3400               	retlw	0
   594  0630  34E8               	retlw	232
   595  0631  3403               	retlw	3
   596  0632  3410               	retlw	16
   597  0633  3427               	retlw	39
   598  0634                     __end_of_dpowers:
   599  0013                     _SSPBUF	set	19
   600  0014                     _SSPCON	set	20
   601  001A                     _RCREG	set	26
   602  0018                     _RCSTAbits	set	24
   603  000B                     _INTCONbits	set	11
   604  0005                     _PORTAbits	set	5
   605  0006                     _PORTB	set	6
   606  000C                     _PIR1bits	set	12
   607  0029                     _RA1	set	41
   608  0028                     _RA0	set	40
   609  0048                     _RE0	set	72
   610  002C                     _RA4	set	44
   611  002B                     _RA3	set	43
   612  002A                     _RA2	set	42
   613  0094                     _SSPSTATbits	set	148
   614  0094                     _SSPSTAT	set	148
   615  0087                     _TRISCbits	set	135
   616  0099                     _SPBRG	set	153
   617  009A                     _SPBRGH	set	154
   618  0098                     _TXSTAbits	set	152
   619  008F                     _OSCCONbits	set	143
   620  008C                     _PIE1bits	set	140
   621  0089                     _TRISEbits	set	137
   622  0086                     _TRISB	set	134
   623  0085                     _TRISAbits	set	133
   624  0187                     _BAUDCTLbits	set	391
   625  0189                     _ANSELH	set	393
   626  0188                     _ANSEL	set	392
   627  0634                     STR_1:
   628  0634  3425               	retlw	37	;'%'
   629  0635  3430               	retlw	48	;'0'
   630  0636  3432               	retlw	50	;'2'
   631  0637  3464               	retlw	100	;'d'
   632  0638  343A               	retlw	58	;':'
   633  0639  3425               	retlw	37	;'%'
   634  063A  3430               	retlw	48	;'0'
   635  063B  3432               	retlw	50	;'2'
   636  063C  3464               	retlw	100	;'d'
   637  063D  3420               	retlw	32	;' '
   638  063E  3420               	retlw	32	;' '
   639  063F  3420               	retlw	32	;' '
   640  0640  3420               	retlw	32	;' '
   641  0641  344C               	retlw	76	;'L'
   642  0642  3475               	retlw	117	;'u'
   643  0643  347A               	retlw	122	;'z'
   644  0644  343A               	retlw	58	;':'
   645  0645  3420               	retlw	32	;' '
   646  0646  3425               	retlw	37	;'%'
   647  0647  3430               	retlw	48	;'0'
   648  0648  3432               	retlw	50	;'2'
   649  0649  3464               	retlw	100	;'d'
   650  064A  3400               	retlw	0
   651  064B                     STR_2:
   652  064B  344D               	retlw	77	;'M'
   653  064C  346F               	retlw	111	;'o'
   654  064D  3476               	retlw	118	;'v'
   655  064E  343A               	retlw	58	;':'
   656  064F  3420               	retlw	32	;' '
   657  0650  3425               	retlw	37	;'%'
   658  0651  3464               	retlw	100	;'d'
   659  0652  3420               	retlw	32	;' '
   660  0653  3420               	retlw	32	;' '
   661  0654  3454               	retlw	84	;'T'
   662  0655  3465               	retlw	101	;'e'
   663  0656  346D               	retlw	109	;'m'
   664  0657  3470               	retlw	112	;'p'
   665  0658  343A               	retlw	58	;':'
   666  0659  3420               	retlw	32	;' '
   667  065A  3425               	retlw	37	;'%'
   668  065B  3430               	retlw	48	;'0'
   669  065C  3432               	retlw	50	;'2'
   670  065D  3464               	retlw	100	;'d'
   671  065E  3400               	retlw	0
   672                           
   673                           	psect	cinit
   674  0011                     start_initialization:	
   675                           ; #config settings
   676                           
   677  0011                     __initialization:
   678                           
   679                           ; Initialize objects allocated to BANK0
   680  0011  120A  118A  273B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   681  0016  00DA               	movwf	__pdataBANK0& (0+127)
   682  0017  120A  118A  273C  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   683  001C  00DB               	movwf	(__pdataBANK0+1)& (0+127)
   684  001D  120A  118A  273D  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   685  0022  00DC               	movwf	(__pdataBANK0+2)& (0+127)
   686  0023  120A  118A  273E  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   687  0028  00DD               	movwf	(__pdataBANK0+3)& (0+127)
   688  0029  120A  118A  273F  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   689  002E  00DE               	movwf	(__pdataBANK0+4)& (0+127)
   690  002F  120A  118A  2740  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   691  0034  00DF               	movwf	(__pdataBANK0+5)& (0+127)
   692                           
   693                           ; Initialize objects allocated to COMMON
   694  0035  120A  118A  274B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   695  003A  00F7               	movwf	__pdataCOMMON& (0+127)
   696  003B  120A  118A  274C  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   697  0040  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   698                           
   699                           ; Clear objects allocated to BANK1
   700  0041  1383               	bcf	3,7	;select IRP bank0
   701  0042  30A0               	movlw	low __pbssBANK1
   702  0043  0084               	movwf	4
   703  0044  30B4               	movlw	low (__pbssBANK1+20)
   704  0045  120A  118A  272C  120A  118A  	fcall	clear_ram0
   705                           
   706                           ; Clear objects allocated to BANK0
   707  004A  3042               	movlw	low __pbssBANK0
   708  004B  0084               	movwf	4
   709  004C  305A               	movlw	low (__pbssBANK0+24)
   710  004D  120A  118A  272C  120A  118A  	fcall	clear_ram0
   711                           
   712                           ; Clear objects allocated to COMMON
   713  0052  01F9               	clrf	__pbssCOMMON& (0+127)
   714  0053                     end_of_initialization:	
   715                           ;End of C runtime variable initialization code
   716                           
   717  0053                     __end_of__initialization:
   718  0053  0183               	clrf	3
   719  0054  120A  118A  2A9F   	ljmp	_main	;jump to C main() function
   720                           
   721                           	psect	bssCOMMON
   722  0079                     __pbssCOMMON:
   723  0079                     _val:
   724  0079                     	ds	1
   725                           
   726                           	psect	dataCOMMON
   727  0077                     __pdataCOMMON:
   728  0077                     _req:
   729  0077                     	ds	2
   730                           
   731                           	psect	bssBANK0
   732  0042                     __pbssBANK0:
   733  0042                     _lux:
   734  0042                     	ds	2
   735  0044                     _mov:
   736  0044                     	ds	2
   737  0046                     _frow:
   738  0046                     	ds	20
   739                           
   740                           	psect	dataBANK0
   741  005A                     __pdataBANK0:
   742  005A                     _mins:
   743  005A                     	ds	2
   744  005C                     _hrs:
   745  005C                     	ds	2
   746  005E                     _temp:
   747  005E                     	ds	2
   748                           
   749                           	psect	bssBANK1
   750  00A0                     __pbssBANK1:
   751  00A0                     _srow:
   752  00A0                     	ds	20
   753                           
   754                           	psect	clrtext
   755  072C                     clear_ram0:	
   756                           ;	Called with FSR containing the base address, and
   757                           ;	W with the last address+1
   758                           
   759  072C  0064               	clrwdt	;clear the watchdog before getting into this loop
   760  072D                     clrloop0:
   761  072D  0180               	clrf	0	;clear RAM location pointed to by FSR
   762  072E  0A84               	incf	4,f	;increment pointer
   763  072F  0604               	xorwf	4,w	;XOR with final address
   764  0730  1903               	btfsc	3,2	;have we reached the end yet?
   765  0731  3400               	retlw	0	;all done for this memory range, return
   766  0732  0604               	xorwf	4,w	;XOR again to restore value
   767  0733  2F2D               	goto	clrloop0	;do the next byte
   768                           
   769                           	psect	cstackCOMMON
   770  0070                     __pcstackCOMMON:
   771  0070                     ?_isdigit:
   772  0070                     ?_USART_read:	
   773                           ; 1 bit 
   774                           
   775  0070                     ??_USART_read:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_read_red:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ??_read_red:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_spiRead:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ??_spiRead:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_spiWrite:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ??_spiWrite:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_setup:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_Lcd_Clear:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_Lcd_Write_String:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_int_osc_MHz:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_Lcd_Init:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_master:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_main:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_Lcd_Port:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_Lcd_Cmd:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_Lcd_Write_Char:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_spiReceiveWait:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ??_spiReceiveWait:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     spiWrite@dat:	
   833                           ; 1 bytes @ 0x0
   834                           
   835                           
   836                           ; 1 bytes @ 0x0
   837  0070                     	ds	2
   838  0072                     ??_master:
   839                           
   840                           ; 1 bytes @ 0x2
   841  0072                     	ds	5
   842                           
   843                           	psect	cstackBANK0
   844  0020                     __pcstackBANK0:
   845  0020                     ??_int_osc_MHz:
   846  0020                     ?_spiInit:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0020                     ??_isdigit:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0020                     ??_Lcd_Port:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0020                     ?___wmul:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0020                     ?___lwdiv:	
   859                           ; 2 bytes @ 0x0
   860                           
   861  0020                     ?___lldiv:	
   862                           ; 2 bytes @ 0x0
   863                           
   864  0020                     Lcd_Port@a:	
   865                           ; 4 bytes @ 0x0
   866                           
   867  0020                     spiInit@sDataSample:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     _isdigit$1117:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     ___wmul@multiplier:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     ___lwdiv@divisor:	
   877                           ; 2 bytes @ 0x0
   878                           
   879  0020                     ___lldiv@divisor:	
   880                           ; 2 bytes @ 0x0
   881                           
   882                           
   883                           ; 4 bytes @ 0x0
   884  0020                     	ds	1
   885  0021                     ??_Lcd_Cmd:
   886  0021                     ??_Lcd_Write_Char:	
   887                           ; 1 bytes @ 0x1
   888                           
   889  0021                     spiInit@sClockIdle:	
   890                           ; 1 bytes @ 0x1
   891                           
   892  0021                     isdigit@c:	
   893                           ; 1 bytes @ 0x1
   894                           
   895                           
   896                           ; 1 bytes @ 0x1
   897  0021                     	ds	1
   898  0022                     Lcd_Cmd@a:
   899  0022                     Lcd_Write_Char@temp:	
   900                           ; 1 bytes @ 0x2
   901                           
   902  0022                     int_osc_MHz@freq:	
   903                           ; 1 bytes @ 0x2
   904                           
   905  0022                     spiInit@sTransmitEdge:	
   906                           ; 1 bytes @ 0x2
   907                           
   908  0022                     ___wmul@multiplicand:	
   909                           ; 1 bytes @ 0x2
   910                           
   911  0022                     ___lwdiv@dividend:	
   912                           ; 2 bytes @ 0x2
   913                           
   914                           
   915                           ; 2 bytes @ 0x2
   916  0022                     	ds	1
   917  0023                     ??_Lcd_Clear:
   918  0023                     ?_Lcd_Set_Cursor:	
   919                           ; 1 bytes @ 0x3
   920                           
   921  0023                     ??_Lcd_Init:	
   922                           ; 1 bytes @ 0x3
   923                           
   924  0023                     ??_spiInit:	
   925                           ; 1 bytes @ 0x3
   926                           
   927  0023                     Lcd_Set_Cursor@b:	
   928                           ; 1 bytes @ 0x3
   929                           
   930  0023                     Lcd_Write_Char@y:	
   931                           ; 1 bytes @ 0x3
   932                           
   933  0023                     spiInit@sType:	
   934                           ; 1 bytes @ 0x3
   935                           
   936                           
   937                           ; 1 bytes @ 0x3
   938  0023                     	ds	1
   939  0024                     ??_Lcd_Set_Cursor:
   940  0024                     ??___wmul:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0024                     ??___lwdiv:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0024                     Lcd_Write_Char@a:	
   947                           ; 1 bytes @ 0x4
   948                           
   949  0024                     ___wmul@product:	
   950                           ; 1 bytes @ 0x4
   951                           
   952  0024                     ___lldiv@dividend:	
   953                           ; 2 bytes @ 0x4
   954                           
   955                           
   956                           ; 4 bytes @ 0x4
   957  0024                     	ds	1
   958  0025                     ??_Lcd_Write_String:
   959  0025                     ___lwdiv@quotient:	
   960                           ; 1 bytes @ 0x5
   961                           
   962                           
   963                           ; 2 bytes @ 0x5
   964  0025                     	ds	1
   965  0026                     Lcd_Set_Cursor@a:
   966  0026                     Lcd_Write_String@i:	
   967                           ; 1 bytes @ 0x6
   968                           
   969                           
   970                           ; 2 bytes @ 0x6
   971  0026                     	ds	1
   972  0027                     Lcd_Set_Cursor@z:
   973  0027                     ___lwdiv@counter:	
   974                           ; 1 bytes @ 0x7
   975                           
   976                           
   977                           ; 1 bytes @ 0x7
   978  0027                     	ds	1
   979  0028                     ??___lldiv:
   980  0028                     ?___lwmod:	
   981                           ; 1 bytes @ 0x8
   982                           
   983  0028                     Lcd_Set_Cursor@y:	
   984                           ; 2 bytes @ 0x8
   985                           
   986  0028                     Lcd_Write_String@a:	
   987                           ; 1 bytes @ 0x8
   988                           
   989  0028                     ___lwmod@divisor:	
   990                           ; 1 bytes @ 0x8
   991                           
   992                           
   993                           ; 2 bytes @ 0x8
   994  0028                     	ds	1
   995  0029                     Lcd_Set_Cursor@temp:
   996  0029                     ___lldiv@quotient:	
   997                           ; 1 bytes @ 0x9
   998                           
   999                           
  1000                           ; 4 bytes @ 0x9
  1001  0029                     	ds	1
  1002  002A                     ___lwmod@dividend:
  1003                           
  1004                           ; 2 bytes @ 0xA
  1005  002A                     	ds	2
  1006  002C                     ??___lwmod:
  1007                           
  1008                           ; 1 bytes @ 0xC
  1009  002C                     	ds	1
  1010  002D                     ___lldiv@counter:
  1011  002D                     ___lwmod@counter:	
  1012                           ; 1 bytes @ 0xD
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0xD
  1016  002D                     	ds	1
  1017  002E                     ?_USART_set:
  1018  002E                     ?_sprintf:	
  1019                           ; 1 bytes @ 0xE
  1020                           
  1021  002E                     sprintf@f:	
  1022                           ; 2 bytes @ 0xE
  1023                           
  1024  002E                     USART_set@baudrate:	
  1025                           ; 1 bytes @ 0xE
  1026                           
  1027                           
  1028                           ; 4 bytes @ 0xE
  1029  002E                     	ds	4
  1030  0032                     ??_USART_set:
  1031                           
  1032                           ; 1 bytes @ 0x12
  1033  0032                     	ds	3
  1034  0035                     ??_sprintf:
  1035                           
  1036                           ; 1 bytes @ 0x15
  1037  0035                     	ds	3
  1038  0038                     sprintf@ap:
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041  0038                     	ds	1
  1042  0039                     sprintf@prec:
  1043                           
  1044                           ; 1 bytes @ 0x19
  1045  0039                     	ds	1
  1046  003A                     sprintf@val:
  1047                           
  1048                           ; 2 bytes @ 0x1A
  1049  003A                     	ds	2
  1050  003C                     sprintf@flag:
  1051                           
  1052                           ; 1 bytes @ 0x1C
  1053  003C                     	ds	1
  1054  003D                     sprintf@width:
  1055                           
  1056                           ; 2 bytes @ 0x1D
  1057  003D                     	ds	1
  1058  003E                     ??_setup:
  1059                           
  1060                           ; 1 bytes @ 0x1E
  1061  003E                     	ds	1
  1062  003F                     sprintf@sp:
  1063                           
  1064                           ; 1 bytes @ 0x1F
  1065  003F                     	ds	1
  1066  0040                     sprintf@c:
  1067                           
  1068                           ; 1 bytes @ 0x20
  1069  0040                     	ds	1
  1070  0041                     ??_main:
  1071                           
  1072                           ; 1 bytes @ 0x21
  1073  0041                     	ds	1
  1074                           
  1075                           	psect	maintext
  1076  029F                     __pmaintext:	
  1077 ;;
  1078 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1079 ;;
  1080 ;; *************** function _main *****************
  1081 ;; Defined at:
  1082 ;;		line 108 in file "main_master_p1.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : B00/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          0       1       0       0       0
  1099 ;;      Totals:         0       1       0       0       0
  1100 ;;Total ram usage:        1 bytes
  1101 ;; Hardware stack levels required when called: 7
  1102 ;; This function calls:
  1103 ;;		_Lcd_Clear
  1104 ;;		_Lcd_Set_Cursor
  1105 ;;		_Lcd_Write_String
  1106 ;;		_setup
  1107 ;;		_sprintf
  1108 ;; This function is called by:
  1109 ;;		Startup code after reset
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113  029F                     _main:	
  1114                           ;psect for function _main
  1115                           
  1116  029F                     l2345:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1119                           
  1120                           
  1121                           ;main_master_p1.c: 109:     setup();
  1122  029F  120A  118A  252D  120A  118A  	fcall	_setup
  1123  02A4                     l2347:
  1124                           
  1125                           ;main_master_p1.c: 110:     Lcd_Clear();
  1126  02A4  120A  118A  2716  120A  118A  	fcall	_Lcd_Clear
  1127  02A9                     l2349:
  1128                           
  1129                           ;main_master_p1.c: 112:         sprintf(frow, "%02d:%02d    Luz: %02d", hrs,mins,lux);
  1130  02A9  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1131  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1132  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1133  02AC  00C1               	movwf	??_main
  1134  02AD  0841               	movf	??_main,w
  1135  02AE  00AE               	movwf	sprintf@f
  1136  02AF  085D               	movf	_hrs+1,w
  1137  02B0  00B0               	movwf	?_sprintf+2
  1138  02B1  085C               	movf	_hrs,w
  1139  02B2  00AF               	movwf	?_sprintf+1
  1140  02B3  085B               	movf	_mins+1,w
  1141  02B4  00B2               	movwf	?_sprintf+4
  1142  02B5  085A               	movf	_mins,w
  1143  02B6  00B1               	movwf	?_sprintf+3
  1144  02B7  0843               	movf	_lux+1,w
  1145  02B8  00B4               	movwf	?_sprintf+6
  1146  02B9  0842               	movf	_lux,w
  1147  02BA  00B3               	movwf	?_sprintf+5
  1148  02BB  3046               	movlw	(low (_frow| 0))& (0+255)
  1149  02BC  120A  118A  2057  120A  118A  	fcall	_sprintf
  1150  02C1                     l2351:
  1151                           
  1152                           ;main_master_p1.c: 113:         sprintf(srow, "Mov: %d  Temp: %02d",mov,temp);
  1153  02C1  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1154  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1155  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1156  02C4  00C1               	movwf	??_main
  1157  02C5  0841               	movf	??_main,w
  1158  02C6  00AE               	movwf	sprintf@f
  1159  02C7  0845               	movf	_mov+1,w
  1160  02C8  00B0               	movwf	?_sprintf+2
  1161  02C9  0844               	movf	_mov,w
  1162  02CA  00AF               	movwf	?_sprintf+1
  1163  02CB  085F               	movf	_temp+1,w
  1164  02CC  00B2               	movwf	?_sprintf+4
  1165  02CD  085E               	movf	_temp,w
  1166  02CE  00B1               	movwf	?_sprintf+3
  1167  02CF  30A0               	movlw	(low (_srow| 0))& (0+255)
  1168  02D0  120A  118A  2057  120A  118A  	fcall	_sprintf
  1169  02D5                     l2353:
  1170                           
  1171                           ;main_master_p1.c: 114:         Lcd_Set_Cursor(1,1);
  1172  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1173  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1174  02D7  01A3               	clrf	Lcd_Set_Cursor@b
  1175  02D8  0AA3               	incf	Lcd_Set_Cursor@b,f
  1176  02D9  3001               	movlw	1
  1177  02DA  120A  118A  23E8  120A  118A  	fcall	_Lcd_Set_Cursor
  1178                           
  1179                           ;main_master_p1.c: 115:         Lcd_Write_String(frow);
  1180  02DF  3046               	movlw	(low (_frow| 0))& (0+255)
  1181  02E0  120A  118A  2686  120A  118A  	fcall	_Lcd_Write_String
  1182  02E5                     l2355:
  1183                           
  1184                           ;main_master_p1.c: 116:         Lcd_Set_Cursor(2,1);
  1185  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1186  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1187  02E7  01A3               	clrf	Lcd_Set_Cursor@b
  1188  02E8  0AA3               	incf	Lcd_Set_Cursor@b,f
  1189  02E9  3002               	movlw	2
  1190  02EA  120A  118A  23E8  120A  118A  	fcall	_Lcd_Set_Cursor
  1191  02EF                     l2357:
  1192                           
  1193                           ;main_master_p1.c: 117:         Lcd_Write_String(srow);
  1194  02EF  30A0               	movlw	(low (_srow| 0))& (0+255)
  1195  02F0  120A  118A  2686  120A  118A  	fcall	_Lcd_Write_String
  1196  02F5                     l2359:
  1197                           
  1198                           ;main_master_p1.c: 119:         if(lux <= 6)
  1199  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1200  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1201  02F7  0843               	movf	_lux+1,w
  1202  02F8  3A80               	xorlw	128
  1203  02F9  00FF               	movwf	btemp+1
  1204  02FA  3080               	movlw	128
  1205  02FB  027F               	subwf	btemp+1,w
  1206  02FC  1D03               	skipz
  1207  02FD  2B00               	goto	u1605
  1208  02FE  3007               	movlw	7
  1209  02FF  0242               	subwf	_lux,w
  1210  0300                     u1605:
  1211  0300  1803               	skipnc
  1212  0301  2B03               	goto	u1601
  1213  0302  2B04               	goto	u1600
  1214  0303                     u1601:
  1215  0303  2B09               	goto	l2363
  1216  0304                     u1600:
  1217  0304                     l2361:
  1218                           
  1219                           ;main_master_p1.c: 120:             PORTB = 0xFF;
  1220  0304  30FF               	movlw	255
  1221  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0307  0086               	movwf	6	;volatile
  1224  0308  2AA9               	goto	l2349
  1225  0309                     l2363:
  1226                           
  1227                           ;main_master_p1.c: 122:             PORTB = 0x00;
  1228  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1229  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1230  030B  0186               	clrf	6	;volatile
  1231  030C  2AA9               	goto	l2349
  1232  030D  120A  118A  280E   	ljmp	start
  1233  0310                     __end_of_main:
  1234                           
  1235                           	psect	text1
  1236  0057                     __ptext1:	
  1237 ;; *************** function _sprintf *****************
  1238 ;; Defined at:
  1239 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  sp              1    wreg     PTR unsigned char 
  1242 ;;		 -> srow(20), frow(20), 
  1243 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1244 ;;		 -> STR_2(20), STR_1(23), 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  sp              1   31[BANK0 ] PTR unsigned char 
  1247 ;;		 -> srow(20), frow(20), 
  1248 ;;  tmpval          4    0        struct .
  1249 ;;  width           2   29[BANK0 ] int 
  1250 ;;  val             2   26[BANK0 ] unsigned int 
  1251 ;;  cp              2    0        PTR const unsigned char 
  1252 ;;  len             2    0        unsigned int 
  1253 ;;  c               1   32[BANK0 ] unsigned char 
  1254 ;;  flag            1   28[BANK0 ] unsigned char 
  1255 ;;  prec            1   25[BANK0 ] char 
  1256 ;;  ap              1   24[BANK0 ] PTR void [1]
  1257 ;;		 -> ?_sprintf(2), 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2   14[BANK0 ] int 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       7       0       0       0
  1268 ;;      Locals:         0       9       0       0       0
  1269 ;;      Temps:          0       3       0       0       0
  1270 ;;      Totals:         0      19       0       0       0
  1271 ;;Total ram usage:       19 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 4
  1274 ;; This function calls:
  1275 ;;		___lwdiv
  1276 ;;		___lwmod
  1277 ;;		___wmul
  1278 ;;		_isdigit
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284  0057                     _sprintf:	
  1285                           ;psect for function _sprintf
  1286                           
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1290                           ;sprintf@sp stored from wreg
  1291  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0059  00BF               	movwf	sprintf@sp
  1294  005A                     l2199:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1297  005A  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1298  005B  00B5               	movwf	??_sprintf
  1299  005C  0835               	movf	??_sprintf,w
  1300  005D  00B8               	movwf	sprintf@ap
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1303  005E  2A14               	goto	l2303
  1304  005F                     l2201:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1307  005F  3025               	movlw	37
  1308  0060  0640               	xorwf	sprintf@c,w
  1309  0061  1903               	btfsc	3,2
  1310  0062  2864               	goto	u1371
  1311  0063  2865               	goto	u1370
  1312  0064                     u1371:
  1313  0064  2871               	goto	l2207
  1314  0065                     u1370:
  1315  0065                     l2203:
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1318  0065  0840               	movf	sprintf@c,w
  1319  0066  00B5               	movwf	??_sprintf
  1320  0067  083F               	movf	sprintf@sp,w
  1321  0068  0084               	movwf	4
  1322  0069  0835               	movf	??_sprintf,w
  1323  006A  1383               	bcf	3,7	;select IRP bank0
  1324  006B  0080               	movwf	0
  1325  006C                     l2205:
  1326  006C  3001               	movlw	1
  1327  006D  00B5               	movwf	??_sprintf
  1328  006E  0835               	movf	??_sprintf,w
  1329  006F  07BF               	addwf	sprintf@sp,f
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1332  0070  2A14               	goto	l2303
  1333  0071                     l2207:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1336  0071  01BD               	clrf	sprintf@width
  1337  0072  01BE               	clrf	sprintf@width+1
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1340  0073  01BC               	clrf	sprintf@flag
  1341  0074  287A               	goto	l2213
  1342  0075                     l319:	
  1343                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1344                           
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1347  0075  153C               	bsf	sprintf@flag,2
  1348  0076                     l2209:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 598:     f++;
  1351  0076  3001               	movlw	1
  1352  0077  00B5               	movwf	??_sprintf
  1353  0078  0835               	movf	??_sprintf,w
  1354  0079  07AE               	addwf	sprintf@f,f
  1355  007A                     l2213:	
  1356                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1357                           
  1358  007A  082E               	movf	sprintf@f,w
  1359  007B  0084               	movwf	4
  1360  007C  120A  118A  2624  120A  118A  	fcall	stringdir
  1361  0081  00B5               	movwf	??_sprintf
  1362  0082  01B6               	clrf	??_sprintf+1
  1363                           
  1364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1365                           ; Switch size 1, requested type "simple"
  1366                           ; Number of cases is 1, Range of values is 0 to 0
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte            4     3 (average)
  1370                           ; direct_byte           11     8 (fixed)
  1371                           ; jumptable            260     6 (fixed)
  1372                           ;	Chosen strategy is simple_byte
  1373  0083  0836               	movf	??_sprintf+1,w
  1374  0084  3A00               	xorlw	0	; case 0
  1375  0085  1903               	skipnz
  1376  0086  2888               	goto	l2479
  1377  0087  288D               	goto	l2215
  1378  0088                     l2479:
  1379                           
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 1, Range of values is 48 to 48
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte            4     3 (average)
  1385                           ; direct_byte           14    11 (fixed)
  1386                           ; jumptable            263     9 (fixed)
  1387                           ;	Chosen strategy is simple_byte
  1388  0088  0835               	movf	??_sprintf,w
  1389  0089  3A30               	xorlw	48	; case 48
  1390  008A  1903               	skipnz
  1391  008B  2875               	goto	l319
  1392  008C  288D               	goto	l2215
  1393  008D                     l2215:
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1396  008D  082E               	movf	sprintf@f,w
  1397  008E  0084               	movwf	4
  1398  008F  120A  118A  2624  120A  118A  	fcall	stringdir
  1399  0094  120A  118A  2702  120A  118A  	fcall	_isdigit
  1400  0099  1C03               	btfss	3,0
  1401  009A  289C               	goto	u1381
  1402  009B  289D               	goto	u1380
  1403  009C                     u1381:
  1404  009C  28DD               	goto	l2229
  1405  009D                     u1380:
  1406  009D                     l2217:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1409  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1410  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1411  009F  01BD               	clrf	sprintf@width
  1412  00A0  01BE               	clrf	sprintf@width+1
  1413  00A1                     l2219:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1416  00A1  300A               	movlw	10
  1417  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1418  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1419  00A4  00A0               	movwf	___wmul@multiplier
  1420  00A5  3000               	movlw	0
  1421  00A6  00A1               	movwf	___wmul@multiplier+1
  1422  00A7  083E               	movf	sprintf@width+1,w
  1423  00A8  00A3               	movwf	___wmul@multiplicand+1
  1424  00A9  083D               	movf	sprintf@width,w
  1425  00AA  00A2               	movwf	___wmul@multiplicand
  1426  00AB  120A  118A  265F  120A  118A  	fcall	___wmul
  1427  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1428  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1429  00B2  0821               	movf	?___wmul+1,w
  1430  00B3  00BE               	movwf	sprintf@width+1
  1431  00B4  0820               	movf	?___wmul,w
  1432  00B5  00BD               	movwf	sprintf@width
  1433  00B6                     l2221:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1436  00B6  082E               	movf	sprintf@f,w
  1437  00B7  0084               	movwf	4
  1438  00B8  120A  118A  2624  120A  118A  	fcall	stringdir
  1439  00BD  3ED0               	addlw	208
  1440  00BE  00B5               	movwf	??_sprintf
  1441  00BF  30FF               	movlw	255
  1442  00C0  1803               	skipnc
  1443  00C1  3000               	movlw	0
  1444  00C2  00B6               	movwf	??_sprintf+1
  1445  00C3  0835               	movf	??_sprintf,w
  1446  00C4  07BD               	addwf	sprintf@width,f
  1447  00C5  1803               	skipnc
  1448  00C6  0ABE               	incf	sprintf@width+1,f
  1449  00C7  0836               	movf	??_sprintf+1,w
  1450  00C8  07BE               	addwf	sprintf@width+1,f
  1451  00C9                     l2223:
  1452  00C9  3001               	movlw	1
  1453  00CA  00B5               	movwf	??_sprintf
  1454  00CB  0835               	movf	??_sprintf,w
  1455  00CC  07AE               	addwf	sprintf@f,f
  1456  00CD                     l2225:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1459  00CD  082E               	movf	sprintf@f,w
  1460  00CE  0084               	movwf	4
  1461  00CF  120A  118A  2624  120A  118A  	fcall	stringdir
  1462  00D4  120A  118A  2702  120A  118A  	fcall	_isdigit
  1463  00D9  1803               	btfsc	3,0
  1464  00DA  28DC               	goto	u1391
  1465  00DB  28DD               	goto	u1390
  1466  00DC                     u1391:
  1467  00DC  28A1               	goto	l2219
  1468  00DD                     u1390:
  1469  00DD                     l2229:
  1470  00DD  3001               	movlw	1
  1471  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1472  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1473  00E0  07AE               	addwf	sprintf@f,f
  1474  00E1  30FF               	movlw	-1
  1475  00E2  072E               	addwf	sprintf@f,w
  1476  00E3  0084               	movwf	4
  1477  00E4  120A  118A  2624  120A  118A  	fcall	stringdir
  1478  00E9  00C0               	movwf	sprintf@c
  1479  00EA  00B5               	movwf	??_sprintf
  1480  00EB  01B6               	clrf	??_sprintf+1
  1481                           
  1482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1483                           ; Switch size 1, requested type "simple"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ; direct_byte           11     8 (fixed)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ;	Chosen strategy is simple_byte
  1491  00EC  0836               	movf	??_sprintf+1,w
  1492  00ED  3A00               	xorlw	0	; case 0
  1493  00EE  1903               	skipnz
  1494  00EF  28F1               	goto	l2481
  1495  00F0  2A14               	goto	l2303
  1496  00F1                     l2481:
  1497                           
  1498                           ; Switch size 1, requested type "simple"
  1499                           ; Number of cases is 3, Range of values is 0 to 105
  1500                           ; switch strategies available:
  1501                           ; Name         Instructions Cycles
  1502                           ; simple_byte           10     6 (average)
  1503                           ; jumptable            260     6 (fixed)
  1504                           ;	Chosen strategy is simple_byte
  1505  00F1  0835               	movf	??_sprintf,w
  1506  00F2  3A00               	xorlw	0	; case 0
  1507  00F3  1903               	skipnz
  1508  00F4  2A26               	goto	l2305
  1509  00F5  3A64               	xorlw	100	; case 100
  1510  00F6  1903               	skipnz
  1511  00F7  28FC               	goto	l2231
  1512  00F8  3A0D               	xorlw	13	; case 105
  1513  00F9  1903               	skipnz
  1514  00FA  28FC               	goto	l2231
  1515  00FB  2A14               	goto	l2303
  1516  00FC                     l2231:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1519  00FC  0838               	movf	sprintf@ap,w
  1520  00FD  0084               	movwf	4
  1521  00FE  1383               	bcf	3,7	;select IRP bank0
  1522  00FF  0800               	movf	0,w
  1523  0100  00BA               	movwf	sprintf@val
  1524  0101  0A84               	incf	4,f
  1525  0102  0800               	movf	0,w
  1526  0103  00BB               	movwf	sprintf@val+1
  1527  0104                     l2233:
  1528  0104  3002               	movlw	2
  1529  0105  00B5               	movwf	??_sprintf
  1530  0106  0835               	movf	??_sprintf,w
  1531  0107  07B8               	addwf	sprintf@ap,f
  1532  0108                     l2235:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1535  0108  1FBB               	btfss	sprintf@val+1,7
  1536  0109  290B               	goto	u1401
  1537  010A  290C               	goto	u1400
  1538  010B                     u1401:
  1539  010B  2915               	goto	l2241
  1540  010C                     u1400:
  1541  010C                     l2237:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1544  010C  3003               	movlw	3
  1545  010D  00B5               	movwf	??_sprintf
  1546  010E  0835               	movf	??_sprintf,w
  1547  010F  04BC               	iorwf	sprintf@flag,f
  1548  0110                     l2239:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1551  0110  09BA               	comf	sprintf@val,f
  1552  0111  09BB               	comf	sprintf@val+1,f
  1553  0112  0ABA               	incf	sprintf@val,f
  1554  0113  1903               	skipnz
  1555  0114  0ABB               	incf	sprintf@val+1,f
  1556  0115                     l2241:
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1559  0115  01C0               	clrf	sprintf@c
  1560  0116  0AC0               	incf	sprintf@c,f
  1561  0117                     l2247:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1564  0117  0840               	movf	sprintf@c,w
  1565  0118  00B5               	movwf	??_sprintf
  1566  0119  0735               	addwf	??_sprintf,w
  1567  011A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1568  011B  0084               	movwf	4
  1569  011C  120A  118A  2624  120A  118A  	fcall	stringdir
  1570  0121  00B6               	movwf	??_sprintf+1
  1571  0122  120A  118A  2624  120A  118A  	fcall	stringdir
  1572  0127  00B7               	movwf	??_sprintf+2
  1573  0128  0837               	movf	??_sprintf+2,w
  1574  0129  023B               	subwf	sprintf@val+1,w
  1575  012A  1D03               	skipz
  1576  012B  292E               	goto	u1415
  1577  012C  0836               	movf	??_sprintf+1,w
  1578  012D  023A               	subwf	sprintf@val,w
  1579  012E                     u1415:
  1580  012E  1803               	skipnc
  1581  012F  2931               	goto	u1411
  1582  0130  2932               	goto	u1410
  1583  0131                     u1411:
  1584  0131  2933               	goto	l2251
  1585  0132                     u1410:
  1586  0132  293D               	goto	l2253
  1587  0133                     l2251:
  1588  0133  3001               	movlw	1
  1589  0134  00B5               	movwf	??_sprintf
  1590  0135  0835               	movf	??_sprintf,w
  1591  0136  07C0               	addwf	sprintf@c,f
  1592  0137  3005               	movlw	5
  1593  0138  0640               	xorwf	sprintf@c,w
  1594  0139  1D03               	btfss	3,2
  1595  013A  293C               	goto	u1421
  1596  013B  293D               	goto	u1420
  1597  013C                     u1421:
  1598  013C  2917               	goto	l2247
  1599  013D                     u1420:
  1600  013D                     l2253:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1603  013D  083D               	movf	sprintf@width,w
  1604  013E  043E               	iorwf	sprintf@width+1,w
  1605  013F  1903               	btfsc	3,2
  1606  0140  2942               	goto	u1431
  1607  0141  2943               	goto	u1430
  1608  0142                     u1431:
  1609  0142  294F               	goto	l337
  1610  0143                     u1430:
  1611  0143                     l2255:
  1612  0143  083C               	movf	sprintf@flag,w
  1613  0144  3903               	andlw	3
  1614  0145  1903               	btfsc	3,2
  1615  0146  2948               	goto	u1441
  1616  0147  2949               	goto	u1440
  1617  0148                     u1441:
  1618  0148  294F               	goto	l337
  1619  0149                     u1440:
  1620  0149                     l2257:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1623  0149  30FF               	movlw	255
  1624  014A  07BD               	addwf	sprintf@width,f
  1625  014B  1803               	skipnc
  1626  014C  0ABE               	incf	sprintf@width+1,f
  1627  014D  30FF               	movlw	255
  1628  014E  07BE               	addwf	sprintf@width+1,f
  1629  014F                     l337:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1632  014F  083E               	movf	sprintf@width+1,w
  1633  0150  3A80               	xorlw	128
  1634  0151  3C80               	sublw	128
  1635  0152  1D03               	skipz
  1636  0153  2956               	goto	u1455
  1637  0154  083D               	movf	sprintf@width,w
  1638  0155  0240               	subwf	sprintf@c,w
  1639  0156                     u1455:
  1640  0156  1803               	skipnc
  1641  0157  2959               	goto	u1451
  1642  0158  295A               	goto	u1450
  1643  0159                     u1451:
  1644  0159  2966               	goto	l2261
  1645  015A                     u1450:
  1646  015A                     l2259:
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1649  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1650  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1651  015C  0840               	movf	sprintf@c,w
  1652  015D  00B5               	movwf	??_sprintf
  1653  015E  01B6               	clrf	??_sprintf+1
  1654  015F  0835               	movf	??_sprintf,w
  1655  0160  02BD               	subwf	sprintf@width,f
  1656  0161  0836               	movf	??_sprintf+1,w
  1657  0162  1C03               	skipc
  1658  0163  03BE               	decf	sprintf@width+1,f
  1659  0164  02BE               	subwf	sprintf@width+1,f
  1660  0165  296A               	goto	l2263
  1661  0166                     l2261:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1664  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0168  01BD               	clrf	sprintf@width
  1667  0169  01BE               	clrf	sprintf@width+1
  1668  016A                     l2263:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1671  016A  1D3C               	btfss	sprintf@flag,2
  1672  016B  296D               	goto	u1461
  1673  016C  296E               	goto	u1460
  1674  016D                     u1461:
  1675  016D  299D               	goto	l2279
  1676  016E                     u1460:
  1677  016E                     l2265:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  1680  016E  083C               	movf	sprintf@flag,w
  1681  016F  3903               	andlw	3
  1682  0170  1903               	btfsc	3,2
  1683  0171  2973               	goto	u1471
  1684  0172  2974               	goto	u1470
  1685  0173                     u1471:
  1686  0173  297F               	goto	l2271
  1687  0174                     u1470:
  1688  0174                     l2267:
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  1691  0174  302D               	movlw	45
  1692  0175  00B5               	movwf	??_sprintf
  1693  0176  083F               	movf	sprintf@sp,w
  1694  0177  0084               	movwf	4
  1695  0178  0835               	movf	??_sprintf,w
  1696  0179  1383               	bcf	3,7	;select IRP bank0
  1697  017A  0080               	movwf	0
  1698  017B                     l2269:
  1699  017B  3001               	movlw	1
  1700  017C  00B5               	movwf	??_sprintf
  1701  017D  0835               	movf	??_sprintf,w
  1702  017E  07BF               	addwf	sprintf@sp,f
  1703  017F                     l2271:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1706  017F  083D               	movf	sprintf@width,w
  1707  0180  043E               	iorwf	sprintf@width+1,w
  1708  0181  1903               	btfsc	3,2
  1709  0182  2984               	goto	u1481
  1710  0183  2985               	goto	u1480
  1711  0184                     u1481:
  1712  0184  29CB               	goto	l2293
  1713  0185                     u1480:
  1714  0185                     l2273:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1717  0185  3030               	movlw	48
  1718  0186  00B5               	movwf	??_sprintf
  1719  0187  083F               	movf	sprintf@sp,w
  1720  0188  0084               	movwf	4
  1721  0189  0835               	movf	??_sprintf,w
  1722  018A  1383               	bcf	3,7	;select IRP bank0
  1723  018B  0080               	movwf	0
  1724  018C                     l2275:
  1725  018C  3001               	movlw	1
  1726  018D  00B5               	movwf	??_sprintf
  1727  018E  0835               	movf	??_sprintf,w
  1728  018F  07BF               	addwf	sprintf@sp,f
  1729  0190                     l2277:
  1730  0190  30FF               	movlw	255
  1731  0191  07BD               	addwf	sprintf@width,f
  1732  0192  1803               	skipnc
  1733  0193  0ABE               	incf	sprintf@width+1,f
  1734  0194  30FF               	movlw	255
  1735  0195  07BE               	addwf	sprintf@width+1,f
  1736  0196  083D               	movf	sprintf@width,w
  1737  0197  043E               	iorwf	sprintf@width+1,w
  1738  0198  1D03               	btfss	3,2
  1739  0199  299B               	goto	u1491
  1740  019A  299C               	goto	u1490
  1741  019B                     u1491:
  1742  019B  2985               	goto	l2273
  1743  019C                     u1490:
  1744  019C  29CB               	goto	l2293
  1745  019D                     l2279:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1748  019D  083D               	movf	sprintf@width,w
  1749  019E  043E               	iorwf	sprintf@width+1,w
  1750  019F  1903               	btfsc	3,2
  1751  01A0  29A2               	goto	u1501
  1752  01A1  29A3               	goto	u1500
  1753  01A2                     u1501:
  1754  01A2  29BA               	goto	l2287
  1755  01A3                     u1500:
  1756  01A3                     l2281:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1759  01A3  3020               	movlw	32
  1760  01A4  00B5               	movwf	??_sprintf
  1761  01A5  083F               	movf	sprintf@sp,w
  1762  01A6  0084               	movwf	4
  1763  01A7  0835               	movf	??_sprintf,w
  1764  01A8  1383               	bcf	3,7	;select IRP bank0
  1765  01A9  0080               	movwf	0
  1766  01AA                     l2283:
  1767  01AA  3001               	movlw	1
  1768  01AB  00B5               	movwf	??_sprintf
  1769  01AC  0835               	movf	??_sprintf,w
  1770  01AD  07BF               	addwf	sprintf@sp,f
  1771  01AE                     l2285:
  1772  01AE  30FF               	movlw	255
  1773  01AF  07BD               	addwf	sprintf@width,f
  1774  01B0  1803               	skipnc
  1775  01B1  0ABE               	incf	sprintf@width+1,f
  1776  01B2  30FF               	movlw	255
  1777  01B3  07BE               	addwf	sprintf@width+1,f
  1778  01B4  083D               	movf	sprintf@width,w
  1779  01B5  043E               	iorwf	sprintf@width+1,w
  1780  01B6  1D03               	btfss	3,2
  1781  01B7  29B9               	goto	u1511
  1782  01B8  29BA               	goto	u1510
  1783  01B9                     u1511:
  1784  01B9  29A3               	goto	l2281
  1785  01BA                     u1510:
  1786  01BA                     l2287:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1789  01BA  083C               	movf	sprintf@flag,w
  1790  01BB  3903               	andlw	3
  1791  01BC  1903               	btfsc	3,2
  1792  01BD  29BF               	goto	u1521
  1793  01BE  29C0               	goto	u1520
  1794  01BF                     u1521:
  1795  01BF  29CB               	goto	l2293
  1796  01C0                     u1520:
  1797  01C0                     l2289:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1800  01C0  302D               	movlw	45
  1801  01C1  00B5               	movwf	??_sprintf
  1802  01C2  083F               	movf	sprintf@sp,w
  1803  01C3  0084               	movwf	4
  1804  01C4  0835               	movf	??_sprintf,w
  1805  01C5  1383               	bcf	3,7	;select IRP bank0
  1806  01C6  0080               	movwf	0
  1807  01C7                     l2291:
  1808  01C7  3001               	movlw	1
  1809  01C8  00B5               	movwf	??_sprintf
  1810  01C9  0835               	movf	??_sprintf,w
  1811  01CA  07BF               	addwf	sprintf@sp,f
  1812  01CB                     l2293:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1815  01CB  0840               	movf	sprintf@c,w
  1816  01CC  00B5               	movwf	??_sprintf
  1817  01CD  0835               	movf	??_sprintf,w
  1818  01CE  00B9               	movwf	sprintf@prec
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1821  01CF  2A0B               	goto	l2301
  1822  01D0                     l2295:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1825  01D0  300A               	movlw	10
  1826  01D1  00A8               	movwf	___lwmod@divisor
  1827  01D2  3000               	movlw	0
  1828  01D3  00A9               	movwf	___lwmod@divisor+1
  1829  01D4  0839               	movf	sprintf@prec,w
  1830  01D5  00B5               	movwf	??_sprintf
  1831  01D6  0735               	addwf	??_sprintf,w
  1832  01D7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1833  01D8  0084               	movwf	4
  1834  01D9  120A  118A  2624  120A  118A  	fcall	stringdir
  1835  01DE  00A0               	movwf	___lwdiv@divisor
  1836  01DF  120A  118A  2624  120A  118A  	fcall	stringdir
  1837  01E4  00A1               	movwf	___lwdiv@divisor+1
  1838  01E5  083B               	movf	sprintf@val+1,w
  1839  01E6  00A3               	movwf	___lwdiv@dividend+1
  1840  01E7  083A               	movf	sprintf@val,w
  1841  01E8  00A2               	movwf	___lwdiv@dividend
  1842  01E9  120A  118A  24E7  120A  118A  	fcall	___lwdiv
  1843  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1844  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1845  01F0  0821               	movf	?___lwdiv+1,w
  1846  01F1  00AB               	movwf	___lwmod@dividend+1
  1847  01F2  0820               	movf	?___lwdiv,w
  1848  01F3  00AA               	movwf	___lwmod@dividend
  1849  01F4  120A  118A  25E8  120A  118A  	fcall	___lwmod
  1850  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1851  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1852  01FB  0828               	movf	?___lwmod,w
  1853  01FC  3E30               	addlw	48
  1854  01FD  00B6               	movwf	??_sprintf+1
  1855  01FE  0836               	movf	??_sprintf+1,w
  1856  01FF  00C0               	movwf	sprintf@c
  1857  0200                     l2297:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1860  0200  0840               	movf	sprintf@c,w
  1861  0201  00B5               	movwf	??_sprintf
  1862  0202  083F               	movf	sprintf@sp,w
  1863  0203  0084               	movwf	4
  1864  0204  0835               	movf	??_sprintf,w
  1865  0205  1383               	bcf	3,7	;select IRP bank0
  1866  0206  0080               	movwf	0
  1867  0207                     l2299:
  1868  0207  3001               	movlw	1
  1869  0208  00B5               	movwf	??_sprintf
  1870  0209  0835               	movf	??_sprintf,w
  1871  020A  07BF               	addwf	sprintf@sp,f
  1872  020B                     l2301:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1875  020B  30FF               	movlw	255
  1876  020C  00B5               	movwf	??_sprintf
  1877  020D  0835               	movf	??_sprintf,w
  1878  020E  07B9               	addwf	sprintf@prec,f
  1879  020F  0A39               	incf	sprintf@prec,w
  1880  0210  1D03               	btfss	3,2
  1881  0211  2A13               	goto	u1531
  1882  0212  2A14               	goto	u1530
  1883  0213                     u1531:
  1884  0213  29D0               	goto	l2295
  1885  0214                     u1530:
  1886  0214                     l2303:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1889  0214  3001               	movlw	1
  1890  0215  07AE               	addwf	sprintf@f,f
  1891  0216  30FF               	movlw	-1
  1892  0217  072E               	addwf	sprintf@f,w
  1893  0218  0084               	movwf	4
  1894  0219  120A  118A  2624  120A  118A  	fcall	stringdir
  1895  021E  00B5               	movwf	??_sprintf
  1896  021F  0835               	movf	??_sprintf,w
  1897  0220  00C0               	movwf	sprintf@c
  1898  0221  0840               	movf	sprintf@c,w
  1899  0222  1D03               	btfss	3,2
  1900  0223  2A25               	goto	u1541
  1901  0224  2A26               	goto	u1540
  1902  0225                     u1541:
  1903  0225  285F               	goto	l2201
  1904  0226                     u1540:
  1905  0226                     l2305:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1908  0226  083F               	movf	sprintf@sp,w
  1909  0227  0084               	movwf	4
  1910  0228  1383               	bcf	3,7	;select IRP bank0
  1911  0229  0180               	clrf	0
  1912  022A                     l354:
  1913  022A  0008               	return
  1914  022B                     __end_of_sprintf:
  1915                           
  1916                           	psect	text2
  1917  0702                     __ptext2:	
  1918 ;; *************** function _isdigit *****************
  1919 ;; Defined at:
  1920 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  c               1    wreg     unsigned char 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  c               1    1[BANK0 ] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       2       0       0       0
  1936 ;;      Temps:          0       0       0       0       0
  1937 ;;      Totals:         0       2       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 3
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_sprintf
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948  0702                     _isdigit:	
  1949                           ;psect for function _isdigit
  1950                           
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1954                           ;isdigit@c stored from wreg
  1955  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0704  00A1               	movwf	isdigit@c
  1958  0705                     l2131:
  1959  0705  01A0               	clrf	_isdigit$1117
  1960  0706                     l2133:
  1961  0706  303A               	movlw	58
  1962  0707  0221               	subwf	isdigit@c,w
  1963  0708  1803               	skipnc
  1964  0709  2F0B               	goto	u1311
  1965  070A  2F0C               	goto	u1310
  1966  070B                     u1311:
  1967  070B  2F14               	goto	l2139
  1968  070C                     u1310:
  1969  070C                     l2135:
  1970  070C  3030               	movlw	48
  1971  070D  0221               	subwf	isdigit@c,w
  1972  070E  1C03               	skipc
  1973  070F  2F11               	goto	u1321
  1974  0710  2F12               	goto	u1320
  1975  0711                     u1321:
  1976  0711  2F14               	goto	l2139
  1977  0712                     u1320:
  1978  0712                     l2137:
  1979  0712  01A0               	clrf	_isdigit$1117
  1980  0713  0AA0               	incf	_isdigit$1117,f
  1981  0714                     l2139:
  1982  0714  0C20               	rrf	_isdigit$1117,w
  1983  0715                     l811:
  1984  0715  0008               	return
  1985  0716                     __end_of_isdigit:
  1986                           
  1987                           	psect	text3
  1988  065F                     __ptext3:	
  1989 ;; *************** function ___wmul *****************
  1990 ;; Defined at:
  1991 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1994 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  product         2    4[BANK0 ] unsigned int 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  2    0[BANK0 ] unsigned int 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       4       0       0       0
  2007 ;;      Locals:         0       2       0       0       0
  2008 ;;      Temps:          0       0       0       0       0
  2009 ;;      Totals:         0       6       0       0       0
  2010 ;;Total ram usage:        6 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 3
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_sprintf
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020  065F                     ___wmul:	
  2021                           ;psect for function ___wmul
  2022                           
  2023  065F                     l2143:	
  2024                           ;incstack = 0
  2025                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2026                           
  2027  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0661  01A4               	clrf	___wmul@product
  2030  0662  01A5               	clrf	___wmul@product+1
  2031  0663                     l2145:
  2032  0663  1C20               	btfss	___wmul@multiplier,0
  2033  0664  2E66               	goto	u1331
  2034  0665  2E67               	goto	u1330
  2035  0666                     u1331:
  2036  0666  2E6D               	goto	l358
  2037  0667                     u1330:
  2038  0667                     l2147:
  2039  0667  0822               	movf	___wmul@multiplicand,w
  2040  0668  07A4               	addwf	___wmul@product,f
  2041  0669  1803               	skipnc
  2042  066A  0AA5               	incf	___wmul@product+1,f
  2043  066B  0823               	movf	___wmul@multiplicand+1,w
  2044  066C  07A5               	addwf	___wmul@product+1,f
  2045  066D                     l358:
  2046  066D  3001               	movlw	1
  2047  066E                     u1345:
  2048  066E  1003               	clrc
  2049  066F  0DA2               	rlf	___wmul@multiplicand,f
  2050  0670  0DA3               	rlf	___wmul@multiplicand+1,f
  2051  0671  3EFF               	addlw	-1
  2052  0672  1D03               	skipz
  2053  0673  2E6E               	goto	u1345
  2054  0674                     l2149:
  2055  0674  3001               	movlw	1
  2056  0675                     u1355:
  2057  0675  1003               	clrc
  2058  0676  0CA1               	rrf	___wmul@multiplier+1,f
  2059  0677  0CA0               	rrf	___wmul@multiplier,f
  2060  0678  3EFF               	addlw	-1
  2061  0679  1D03               	skipz
  2062  067A  2E75               	goto	u1355
  2063  067B                     l2151:
  2064  067B  0820               	movf	___wmul@multiplier,w
  2065  067C  0421               	iorwf	___wmul@multiplier+1,w
  2066  067D  1D03               	btfss	3,2
  2067  067E  2E80               	goto	u1361
  2068  067F  2E81               	goto	u1360
  2069  0680                     u1361:
  2070  0680  2E63               	goto	l2145
  2071  0681                     u1360:
  2072  0681                     l2153:
  2073  0681  0825               	movf	___wmul@product+1,w
  2074  0682  00A1               	movwf	?___wmul+1
  2075  0683  0824               	movf	___wmul@product,w
  2076  0684  00A0               	movwf	?___wmul
  2077  0685                     l360:
  2078  0685  0008               	return
  2079  0686                     __end_of___wmul:
  2080                           
  2081                           	psect	text4
  2082  05E8                     __ptext4:	
  2083 ;; *************** function ___lwmod *****************
  2084 ;; Defined at:
  2085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  divisor         2    8[BANK0 ] unsigned int 
  2088 ;;  dividend        2   10[BANK0 ] unsigned int 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  counter         1   13[BANK0 ] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  2    8[BANK0 ] unsigned int 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       4       0       0       0
  2101 ;;      Locals:         0       1       0       0       0
  2102 ;;      Temps:          0       1       0       0       0
  2103 ;;      Totals:         0       6       0       0       0
  2104 ;;Total ram usage:        6 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 3
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_sprintf
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114  05E8                     ___lwmod:	
  2115                           ;psect for function ___lwmod
  2116                           
  2117  05E8                     l1651:	
  2118                           ;incstack = 0
  2119                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2120                           
  2121  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2122  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2123  05EA  0828               	movf	___lwmod@divisor,w
  2124  05EB  0429               	iorwf	___lwmod@divisor+1,w
  2125  05EC  1903               	btfsc	3,2
  2126  05ED  2DEF               	goto	u931
  2127  05EE  2DF0               	goto	u930
  2128  05EF                     u931:
  2129  05EF  2E1F               	goto	l1669
  2130  05F0                     u930:
  2131  05F0                     l1653:
  2132  05F0  01AD               	clrf	___lwmod@counter
  2133  05F1  0AAD               	incf	___lwmod@counter,f
  2134  05F2  2DFE               	goto	l1659
  2135  05F3                     l1655:
  2136  05F3  3001               	movlw	1
  2137  05F4                     u945:
  2138  05F4  1003               	clrc
  2139  05F5  0DA8               	rlf	___lwmod@divisor,f
  2140  05F6  0DA9               	rlf	___lwmod@divisor+1,f
  2141  05F7  3EFF               	addlw	-1
  2142  05F8  1D03               	skipz
  2143  05F9  2DF4               	goto	u945
  2144  05FA                     l1657:
  2145  05FA  3001               	movlw	1
  2146  05FB  00AC               	movwf	??___lwmod
  2147  05FC  082C               	movf	??___lwmod,w
  2148  05FD  07AD               	addwf	___lwmod@counter,f
  2149  05FE                     l1659:
  2150  05FE  1FA9               	btfss	___lwmod@divisor+1,7
  2151  05FF  2E01               	goto	u951
  2152  0600  2E02               	goto	u950
  2153  0601                     u951:
  2154  0601  2DF3               	goto	l1655
  2155  0602                     u950:
  2156  0602                     l1661:
  2157  0602  0829               	movf	___lwmod@divisor+1,w
  2158  0603  022B               	subwf	___lwmod@dividend+1,w
  2159  0604  1D03               	skipz
  2160  0605  2E08               	goto	u965
  2161  0606  0828               	movf	___lwmod@divisor,w
  2162  0607  022A               	subwf	___lwmod@dividend,w
  2163  0608                     u965:
  2164  0608  1C03               	skipc
  2165  0609  2E0B               	goto	u961
  2166  060A  2E0C               	goto	u960
  2167  060B                     u961:
  2168  060B  2E12               	goto	l1665
  2169  060C                     u960:
  2170  060C                     l1663:
  2171  060C  0828               	movf	___lwmod@divisor,w
  2172  060D  02AA               	subwf	___lwmod@dividend,f
  2173  060E  0829               	movf	___lwmod@divisor+1,w
  2174  060F  1C03               	skipc
  2175  0610  03AB               	decf	___lwmod@dividend+1,f
  2176  0611  02AB               	subwf	___lwmod@dividend+1,f
  2177  0612                     l1665:
  2178  0612  3001               	movlw	1
  2179  0613                     u975:
  2180  0613  1003               	clrc
  2181  0614  0CA9               	rrf	___lwmod@divisor+1,f
  2182  0615  0CA8               	rrf	___lwmod@divisor,f
  2183  0616  3EFF               	addlw	-1
  2184  0617  1D03               	skipz
  2185  0618  2E13               	goto	u975
  2186  0619                     l1667:
  2187  0619  3001               	movlw	1
  2188  061A  02AD               	subwf	___lwmod@counter,f
  2189  061B  1D03               	btfss	3,2
  2190  061C  2E1E               	goto	u981
  2191  061D  2E1F               	goto	u980
  2192  061E                     u981:
  2193  061E  2E02               	goto	l1661
  2194  061F                     u980:
  2195  061F                     l1669:
  2196  061F  082B               	movf	___lwmod@dividend+1,w
  2197  0620  00A9               	movwf	?___lwmod+1
  2198  0621  082A               	movf	___lwmod@dividend,w
  2199  0622  00A8               	movwf	?___lwmod
  2200  0623                     l640:
  2201  0623  0008               	return
  2202  0624                     __end_of___lwmod:
  2203                           
  2204                           	psect	text5
  2205  04E7                     __ptext5:	
  2206 ;; *************** function ___lwdiv *****************
  2207 ;; Defined at:
  2208 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  divisor         2    0[BANK0 ] unsigned int 
  2211 ;;  dividend        2    2[BANK0 ] unsigned int 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  quotient        2    5[BANK0 ] unsigned int 
  2214 ;;  counter         1    7[BANK0 ] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2    0[BANK0 ] unsigned int 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       4       0       0       0
  2225 ;;      Locals:         0       3       0       0       0
  2226 ;;      Temps:          0       1       0       0       0
  2227 ;;      Totals:         0       8       0       0       0
  2228 ;;Total ram usage:        8 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 3
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_sprintf
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238  04E7                     ___lwdiv:	
  2239                           ;psect for function ___lwdiv
  2240                           
  2241  04E7                     l1625:	
  2242                           ;incstack = 0
  2243                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2244                           
  2245  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2246  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2247  04E9  01A5               	clrf	___lwdiv@quotient
  2248  04EA  01A6               	clrf	___lwdiv@quotient+1
  2249  04EB                     l1627:
  2250  04EB  0820               	movf	___lwdiv@divisor,w
  2251  04EC  0421               	iorwf	___lwdiv@divisor+1,w
  2252  04ED  1903               	btfsc	3,2
  2253  04EE  2CF0               	goto	u861
  2254  04EF  2CF1               	goto	u860
  2255  04F0                     u861:
  2256  04F0  2D28               	goto	l1647
  2257  04F1                     u860:
  2258  04F1                     l1629:
  2259  04F1  01A7               	clrf	___lwdiv@counter
  2260  04F2  0AA7               	incf	___lwdiv@counter,f
  2261  04F3  2CFF               	goto	l1635
  2262  04F4                     l1631:
  2263  04F4  3001               	movlw	1
  2264  04F5                     u875:
  2265  04F5  1003               	clrc
  2266  04F6  0DA0               	rlf	___lwdiv@divisor,f
  2267  04F7  0DA1               	rlf	___lwdiv@divisor+1,f
  2268  04F8  3EFF               	addlw	-1
  2269  04F9  1D03               	skipz
  2270  04FA  2CF5               	goto	u875
  2271  04FB                     l1633:
  2272  04FB  3001               	movlw	1
  2273  04FC  00A4               	movwf	??___lwdiv
  2274  04FD  0824               	movf	??___lwdiv,w
  2275  04FE  07A7               	addwf	___lwdiv@counter,f
  2276  04FF                     l1635:
  2277  04FF  1FA1               	btfss	___lwdiv@divisor+1,7
  2278  0500  2D02               	goto	u881
  2279  0501  2D03               	goto	u880
  2280  0502                     u881:
  2281  0502  2CF4               	goto	l1631
  2282  0503                     u880:
  2283  0503                     l1637:
  2284  0503  3001               	movlw	1
  2285  0504                     u895:
  2286  0504  1003               	clrc
  2287  0505  0DA5               	rlf	___lwdiv@quotient,f
  2288  0506  0DA6               	rlf	___lwdiv@quotient+1,f
  2289  0507  3EFF               	addlw	-1
  2290  0508  1D03               	skipz
  2291  0509  2D04               	goto	u895
  2292  050A  0821               	movf	___lwdiv@divisor+1,w
  2293  050B  0223               	subwf	___lwdiv@dividend+1,w
  2294  050C  1D03               	skipz
  2295  050D  2D10               	goto	u905
  2296  050E  0820               	movf	___lwdiv@divisor,w
  2297  050F  0222               	subwf	___lwdiv@dividend,w
  2298  0510                     u905:
  2299  0510  1C03               	skipc
  2300  0511  2D13               	goto	u901
  2301  0512  2D14               	goto	u900
  2302  0513                     u901:
  2303  0513  2D1B               	goto	l1643
  2304  0514                     u900:
  2305  0514                     l1639:
  2306  0514  0820               	movf	___lwdiv@divisor,w
  2307  0515  02A2               	subwf	___lwdiv@dividend,f
  2308  0516  0821               	movf	___lwdiv@divisor+1,w
  2309  0517  1C03               	skipc
  2310  0518  03A3               	decf	___lwdiv@dividend+1,f
  2311  0519  02A3               	subwf	___lwdiv@dividend+1,f
  2312  051A                     l1641:
  2313  051A  1425               	bsf	___lwdiv@quotient,0
  2314  051B                     l1643:
  2315  051B  3001               	movlw	1
  2316  051C                     u915:
  2317  051C  1003               	clrc
  2318  051D  0CA1               	rrf	___lwdiv@divisor+1,f
  2319  051E  0CA0               	rrf	___lwdiv@divisor,f
  2320  051F  3EFF               	addlw	-1
  2321  0520  1D03               	skipz
  2322  0521  2D1C               	goto	u915
  2323  0522                     l1645:
  2324  0522  3001               	movlw	1
  2325  0523  02A7               	subwf	___lwdiv@counter,f
  2326  0524  1D03               	btfss	3,2
  2327  0525  2D27               	goto	u921
  2328  0526  2D28               	goto	u920
  2329  0527                     u921:
  2330  0527  2D03               	goto	l1637
  2331  0528                     u920:
  2332  0528                     l1647:
  2333  0528  0826               	movf	___lwdiv@quotient+1,w
  2334  0529  00A1               	movwf	?___lwdiv+1
  2335  052A  0825               	movf	___lwdiv@quotient,w
  2336  052B  00A0               	movwf	?___lwdiv
  2337  052C                     l630:
  2338  052C  0008               	return
  2339  052D                     __end_of___lwdiv:
  2340                           
  2341                           	psect	text6
  2342  052D                     __ptext6:	
  2343 ;; *************** function _setup *****************
  2344 ;; Defined at:
  2345 ;;		line 155 in file "main_master_p1.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0
  2362 ;;      Totals:         0       0       0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 6
  2366 ;; This function calls:
  2367 ;;		_Lcd_Init
  2368 ;;		_USART_set
  2369 ;;		_int_osc_MHz
  2370 ;;		_spiInit
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376  052D                     _setup:	
  2377                           ;psect for function _setup
  2378                           
  2379  052D                     l2157:	
  2380                           ;incstack = 0
  2381                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2382                           
  2383                           
  2384                           ;main_master_p1.c: 156:     int_osc_MHz(1);
  2385  052D  3001               	movlw	1
  2386  052E  120A  118A  256E  120A  118A  	fcall	_int_osc_MHz
  2387  0533                     l2159:
  2388                           
  2389                           ;main_master_p1.c: 159:     ANSEL = 0;
  2390  0533  1683               	bsf	3,5	;RP0=1, select bank3
  2391  0534  1703               	bsf	3,6	;RP1=1, select bank3
  2392  0535  0188               	clrf	8	;volatile
  2393  0536                     l2161:
  2394                           
  2395                           ;main_master_p1.c: 160:     ANSELH = 0;
  2396  0536  0189               	clrf	9	;volatile
  2397  0537                     l2163:
  2398                           
  2399                           ;main_master_p1.c: 162:     TRISAbits.TRISA0 = 0;
  2400  0537  1683               	bsf	3,5	;RP0=1, select bank1
  2401  0538  1303               	bcf	3,6	;RP1=0, select bank1
  2402  0539  1005               	bcf	5,0	;volatile
  2403  053A                     l2165:
  2404                           
  2405                           ;main_master_p1.c: 163:     TRISAbits.TRISA1 = 0;
  2406  053A  1085               	bcf	5,1	;volatile
  2407  053B                     l2167:
  2408                           
  2409                           ;main_master_p1.c: 164:     TRISAbits.TRISA2 = 0;
  2410  053B  1105               	bcf	5,2	;volatile
  2411  053C                     l2169:
  2412                           
  2413                           ;main_master_p1.c: 165:     TRISAbits.TRISA3 = 0;
  2414  053C  1185               	bcf	5,3	;volatile
  2415  053D                     l2171:
  2416                           
  2417                           ;main_master_p1.c: 166:     TRISAbits.TRISA4 = 0;
  2418  053D  1205               	bcf	5,4	;volatile
  2419  053E                     l2173:
  2420                           
  2421                           ;main_master_p1.c: 167:     TRISAbits.TRISA5 = 1;
  2422  053E  1685               	bsf	5,5	;volatile
  2423  053F                     l2175:
  2424                           
  2425                           ;main_master_p1.c: 168:     PORTAbits.RA5 = 0;
  2426  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0541  1285               	bcf	5,5	;volatile
  2429  0542                     l2177:
  2430                           
  2431                           ;main_master_p1.c: 170:     TRISB = 0;
  2432  0542  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0543  1303               	bcf	3,6	;RP1=0, select bank1
  2434  0544  0186               	clrf	6	;volatile
  2435  0545                     l2179:
  2436                           
  2437                           ;main_master_p1.c: 172:     TRISEbits.TRISE0 = 0;
  2438  0545  1009               	bcf	9,0	;volatile
  2439  0546                     l2181:
  2440                           
  2441                           ;main_master_p1.c: 174:     Lcd_Init();
  2442  0546  120A  118A  2440  120A  118A  	fcall	_Lcd_Init
  2443  054B                     l2183:
  2444                           
  2445                           ;main_master_p1.c: 175:     USART_set(9600);
  2446  054B  3000               	movlw	0
  2447  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2448  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2449  054E  00B1               	movwf	USART_set@baudrate+3
  2450  054F  3000               	movlw	0
  2451  0550  00B0               	movwf	USART_set@baudrate+2
  2452  0551  3025               	movlw	37
  2453  0552  00AF               	movwf	USART_set@baudrate+1
  2454  0553  3080               	movlw	128
  2455  0554  00AE               	movwf	USART_set@baudrate
  2456  0555  120A  118A  2310  120A  118A  	fcall	_USART_set
  2457  055A                     l2185:
  2458                           
  2459                           ;main_master_p1.c: 178:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
  2460  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2461  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2462  055C  01A0               	clrf	spiInit@sDataSample
  2463  055D  01A1               	clrf	spiInit@sClockIdle
  2464  055E  01A2               	clrf	spiInit@sTransmitEdge
  2465  055F  3024               	movlw	36
  2466  0560  120A  118A  26CB  120A  118A  	fcall	_spiInit
  2467  0565                     l2187:
  2468                           
  2469                           ;main_master_p1.c: 181:     INTCONbits.GIE = 1;
  2470  0565  178B               	bsf	11,7	;volatile
  2471  0566                     l2189:
  2472                           
  2473                           ;main_master_p1.c: 182:     INTCONbits.PEIE = 1;
  2474  0566  170B               	bsf	11,6	;volatile
  2475  0567                     l2191:
  2476                           
  2477                           ;main_master_p1.c: 183:     PIR1bits.SSPIF = 0;
  2478  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0569  118C               	bcf	12,3	;volatile
  2481  056A                     l2193:
  2482                           
  2483                           ;main_master_p1.c: 184:     PIE1bits.SSPIE = 1;
  2484  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2485  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2486  056C  158C               	bsf	12,3	;volatile
  2487  056D                     l102:
  2488  056D  0008               	return
  2489  056E                     __end_of_setup:
  2490                           
  2491                           	psect	text7
  2492  06CB                     __ptext7:	
  2493 ;; *************** function _spiInit *****************
  2494 ;; Defined at:
  2495 ;;		line 12 in file "SPI.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  sType           1    wreg     enum E1292
  2498 ;;  sDataSample     1    0[BANK0 ] enum E1300
  2499 ;;  sClockIdle      1    1[BANK0 ] enum E1304
  2500 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  sType           1    3[BANK0 ] enum E1292
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         0       3       0       0       0
  2513 ;;      Locals:         0       1       0       0       0
  2514 ;;      Temps:          0       0       0       0       0
  2515 ;;      Totals:         0       4       0       0       0
  2516 ;;Total ram usage:        4 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 3
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_setup
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526  06CB                     _spiInit:	
  2527                           ;psect for function _spiInit
  2528                           
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2532                           ;spiInit@sType stored from wreg
  2533  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2534  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2535  06CD  00A3               	movwf	spiInit@sType
  2536  06CE                     l2101:
  2537                           
  2538                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISCbits.TRISC5 =
      +                           0;
  2539  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  2540  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  2541  06D0  1287               	bcf	7,5	;volatile
  2542                           
  2543                           ;SPI.c: 15:     if(sType & 0b00000100)
  2544  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  2545  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  2546  06D3  1D23               	btfss	spiInit@sType,2
  2547  06D4  2ED6               	goto	u1291
  2548  06D5  2ED7               	goto	u1290
  2549  06D6                     u1291:
  2550  06D6  2EDD               	goto	l2107
  2551  06D7                     u1290:
  2552  06D7                     l2103:
  2553                           
  2554                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2555  06D7  0822               	movf	spiInit@sTransmitEdge,w
  2556  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  2557  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  2558  06DA  0094               	movwf	20	;volatile
  2559  06DB                     l2105:
  2560                           
  2561                           ;SPI.c: 18:         TRISCbits.TRISC3 = 1;
  2562  06DB  1587               	bsf	7,3	;volatile
  2563                           
  2564                           ;SPI.c: 19:     }
  2565  06DC  2EE3               	goto	l203
  2566  06DD                     l2107:
  2567                           
  2568                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2569  06DD  0820               	movf	spiInit@sDataSample,w
  2570  06DE  0422               	iorwf	spiInit@sTransmitEdge,w
  2571  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  2572  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  2573  06E1  0094               	movwf	20	;volatile
  2574  06E2                     l2109:
  2575                           
  2576                           ;SPI.c: 23:         TRISCbits.TRISC3 = 0;
  2577  06E2  1187               	bcf	7,3	;volatile
  2578  06E3                     l203:	
  2579                           ;SPI.c: 24:     }
  2580                           
  2581                           
  2582                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2583  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  2584  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  2585  06E5  0823               	movf	spiInit@sType,w
  2586  06E6  0421               	iorwf	spiInit@sClockIdle,w
  2587  06E7  0094               	movwf	20	;volatile
  2588  06E8                     l204:
  2589  06E8  0008               	return
  2590  06E9                     __end_of_spiInit:
  2591                           
  2592                           	psect	text8
  2593  056E                     __ptext8:	
  2594 ;; *************** function _int_osc_MHz *****************
  2595 ;; Defined at:
  2596 ;;		line 13 in file "osc.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  freq            1    wreg     unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  freq            1    2[BANK0 ] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         0       0       0       0       0
  2611 ;;      Locals:         0       1       0       0       0
  2612 ;;      Temps:          0       2       0       0       0
  2613 ;;      Totals:         0       3       0       0       0
  2614 ;;Total ram usage:        3 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 3
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_setup
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624  056E                     _int_osc_MHz:	
  2625                           ;psect for function _int_osc_MHz
  2626                           
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  2630                           ;int_osc_MHz@freq stored from wreg
  2631  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2632  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0570  00A2               	movwf	int_osc_MHz@freq
  2634  0571                     l1503:
  2635                           
  2636                           ;osc.c: 14:     switch(freq){
  2637  0571  2D93               	goto	l1517
  2638  0572                     l1505:
  2639                           
  2640                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  2641  0572  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0573  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0574  080F               	movf	15,w	;volatile
  2644  0575  398F               	andlw	-113
  2645  0576  3840               	iorlw	64
  2646  0577  008F               	movwf	15	;volatile
  2647                           
  2648                           ;osc.c: 17:             break;
  2649  0578  2DA9               	goto	l164
  2650  0579                     l1507:
  2651                           
  2652                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  2653  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2654  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2655  057B  080F               	movf	15,w	;volatile
  2656  057C  398F               	andlw	-113
  2657  057D  3850               	iorlw	80
  2658  057E  008F               	movwf	15	;volatile
  2659                           
  2660                           ;osc.c: 20:             break;
  2661  057F  2DA9               	goto	l164
  2662  0580                     l1509:
  2663                           
  2664                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  2665  0580  1683               	bsf	3,5	;RP0=1, select bank1
  2666  0581  1303               	bcf	3,6	;RP1=0, select bank1
  2667  0582  080F               	movf	15,w	;volatile
  2668  0583  398F               	andlw	-113
  2669  0584  3860               	iorlw	96
  2670  0585  008F               	movwf	15	;volatile
  2671                           
  2672                           ;osc.c: 23:             break;
  2673  0586  2DA9               	goto	l164
  2674  0587                     l1511:
  2675                           
  2676                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  2677  0587  3070               	movlw	112
  2678  0588  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0589  1303               	bcf	3,6	;RP1=0, select bank1
  2680  058A  048F               	iorwf	15,f	;volatile
  2681                           
  2682                           ;osc.c: 26:             break;
  2683  058B  2DA9               	goto	l164
  2684  058C                     l1513:
  2685                           
  2686                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  2687  058C  1683               	bsf	3,5	;RP0=1, select bank1
  2688  058D  1303               	bcf	3,6	;RP1=0, select bank1
  2689  058E  080F               	movf	15,w	;volatile
  2690  058F  398F               	andlw	-113
  2691  0590  3860               	iorlw	96
  2692  0591  008F               	movwf	15	;volatile
  2693                           
  2694                           ;osc.c: 29:             break;
  2695  0592  2DA9               	goto	l164
  2696  0593                     l1517:
  2697  0593  0822               	movf	int_osc_MHz@freq,w
  2698  0594  00A0               	movwf	??_int_osc_MHz
  2699  0595  01A1               	clrf	??_int_osc_MHz+1
  2700                           
  2701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 1, Range of values is 0 to 0
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte            4     3 (average)
  2707                           ; direct_byte           11     8 (fixed)
  2708                           ; jumptable            260     6 (fixed)
  2709                           ;	Chosen strategy is simple_byte
  2710  0596  0821               	movf	??_int_osc_MHz+1,w
  2711  0597  3A00               	xorlw	0	; case 0
  2712  0598  1903               	skipnz
  2713  0599  2D9B               	goto	l2483
  2714  059A  2D8C               	goto	l1513
  2715  059B                     l2483:
  2716                           
  2717                           ; Switch size 1, requested type "simple"
  2718                           ; Number of cases is 4, Range of values is 1 to 8
  2719                           ; switch strategies available:
  2720                           ; Name         Instructions Cycles
  2721                           ; simple_byte           13     7 (average)
  2722                           ; direct_byte           35    11 (fixed)
  2723                           ; jumptable            263     9 (fixed)
  2724                           ;	Chosen strategy is simple_byte
  2725  059B  0820               	movf	??_int_osc_MHz,w
  2726  059C  3A01               	xorlw	1	; case 1
  2727  059D  1903               	skipnz
  2728  059E  2D72               	goto	l1505
  2729  059F  3A03               	xorlw	3	; case 2
  2730  05A0  1903               	skipnz
  2731  05A1  2D79               	goto	l1507
  2732  05A2  3A06               	xorlw	6	; case 4
  2733  05A3  1903               	skipnz
  2734  05A4  2D80               	goto	l1509
  2735  05A5  3A0C               	xorlw	12	; case 8
  2736  05A6  1903               	skipnz
  2737  05A7  2D87               	goto	l1511
  2738  05A8  2D8C               	goto	l1513
  2739  05A9                     l164:
  2740                           
  2741                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  2742  05A9  140F               	bsf	15,0	;volatile
  2743  05AA                     l169:
  2744  05AA  0008               	return
  2745  05AB                     __end_of_int_osc_MHz:
  2746                           
  2747                           	psect	text9
  2748  0310                     __ptext9:	
  2749 ;; *************** function _USART_set *****************
  2750 ;; Defined at:
  2751 ;;		line 12 in file "USART.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  baudrate        4   14[BANK0 ] const unsigned long 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         0       4       0       0       0
  2766 ;;      Locals:         0       0       0       0       0
  2767 ;;      Temps:          0      12       0       0       0
  2768 ;;      Totals:         0      16       0       0       0
  2769 ;;Total ram usage:       16 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 4
  2772 ;; This function calls:
  2773 ;;		___lldiv
  2774 ;; This function is called by:
  2775 ;;		_setup
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779  0310                     _USART_set:	
  2780                           ;psect for function _USART_set
  2781                           
  2782  0310                     l1551:	
  2783                           ;incstack = 0
  2784                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  2785                           
  2786                           
  2787                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          5:     TXSTAbits.BRGH = 1;
  2788  0310  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0311  1303               	bcf	3,6	;RP1=0, select bank1
  2790  0312  1518               	bsf	24,2	;volatile
  2791                           
  2792                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  2793  0313  1683               	bsf	3,5	;RP0=1, select bank3
  2794  0314  1703               	bsf	3,6	;RP1=1, select bank3
  2795  0315  1587               	bsf	7,3	;volatile
  2796  0316                     l1553:
  2797                           
  2798                           ;USART.c: 17:     SPBRGH = 0;
  2799  0316  1683               	bsf	3,5	;RP0=1, select bank1
  2800  0317  1303               	bcf	3,6	;RP1=0, select bank1
  2801  0318  019A               	clrf	26	;volatile
  2802  0319                     l1555:
  2803                           
  2804                           ;USART.c: 18:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  2805  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2806  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2807  031B  082E               	movf	USART_set@baudrate,w
  2808  031C  00B2               	movwf	??_USART_set
  2809  031D  082F               	movf	USART_set@baudrate+1,w
  2810  031E  00B3               	movwf	??_USART_set+1
  2811  031F  0830               	movf	USART_set@baudrate+2,w
  2812  0320  00B4               	movwf	??_USART_set+2
  2813  0321  0831               	movf	USART_set@baudrate+3,w
  2814  0322  00B5               	movwf	??_USART_set+3
  2815  0323  3002               	movlw	2
  2816  0324                     u745:
  2817  0324  1003               	clrc
  2818  0325  0DB2               	rlf	??_USART_set,f
  2819  0326  0DB3               	rlf	??_USART_set+1,f
  2820  0327  0DB4               	rlf	??_USART_set+2,f
  2821  0328  0DB5               	rlf	??_USART_set+3,f
  2822  0329                     u740:
  2823  0329  3EFF               	addlw	-1
  2824  032A  1D03               	skipz
  2825  032B  2B24               	goto	u745
  2826  032C  0835               	movf	??_USART_set+3,w
  2827  032D  00A3               	movwf	___lldiv@divisor+3
  2828  032E  0834               	movf	??_USART_set+2,w
  2829  032F  00A2               	movwf	___lldiv@divisor+2
  2830  0330  0833               	movf	??_USART_set+1,w
  2831  0331  00A1               	movwf	___lldiv@divisor+1
  2832  0332  0832               	movf	??_USART_set,w
  2833  0333  00A0               	movwf	___lldiv@divisor
  2834  0334  082E               	movf	USART_set@baudrate,w
  2835  0335  00B6               	movwf	??_USART_set+4
  2836  0336  082F               	movf	USART_set@baudrate+1,w
  2837  0337  00B7               	movwf	??_USART_set+5
  2838  0338  0830               	movf	USART_set@baudrate+2,w
  2839  0339  00B8               	movwf	??_USART_set+6
  2840  033A  0831               	movf	USART_set@baudrate+3,w
  2841  033B  00B9               	movwf	??_USART_set+7
  2842  033C  3002               	movlw	2
  2843  033D                     u755:
  2844  033D  1003               	clrc
  2845  033E  0DB6               	rlf	??_USART_set+4,f
  2846  033F  0DB7               	rlf	??_USART_set+5,f
  2847  0340  0DB8               	rlf	??_USART_set+6,f
  2848  0341  0DB9               	rlf	??_USART_set+7,f
  2849  0342                     u750:
  2850  0342  3EFF               	addlw	-1
  2851  0343  1D03               	skipz
  2852  0344  2B3D               	goto	u755
  2853  0345  3040               	movlw	64
  2854  0346  00BA               	movwf	??_USART_set+8
  2855  0347  3042               	movlw	66
  2856  0348  00BB               	movwf	??_USART_set+9
  2857  0349  300F               	movlw	15
  2858  034A  00BC               	movwf	??_USART_set+10
  2859  034B  3000               	movlw	0
  2860  034C  00BD               	movwf	??_USART_set+11
  2861  034D  0836               	movf	??_USART_set+4,w
  2862  034E  02BA               	subwf	??_USART_set+8,f
  2863  034F  0837               	movf	??_USART_set+5,w
  2864  0350  1C03               	skipc
  2865  0351  0F37               	incfsz	??_USART_set+5,w
  2866  0352  2B54               	goto	u761
  2867  0353  2B55               	goto	u762
  2868  0354                     u761:
  2869  0354  02BB               	subwf	??_USART_set+9,f
  2870  0355                     u762:
  2871  0355  0838               	movf	??_USART_set+6,w
  2872  0356  1C03               	skipc
  2873  0357  0F38               	incfsz	??_USART_set+6,w
  2874  0358  2B5A               	goto	u763
  2875  0359  2B5B               	goto	u764
  2876  035A                     u763:
  2877  035A  02BC               	subwf	??_USART_set+10,f
  2878  035B                     u764:
  2879  035B  0839               	movf	??_USART_set+7,w
  2880  035C  1C03               	skipc
  2881  035D  0F39               	incfsz	??_USART_set+7,w
  2882  035E  2B60               	goto	u765
  2883  035F  2B61               	goto	u766
  2884  0360                     u765:
  2885  0360  02BD               	subwf	??_USART_set+11,f
  2886  0361                     u766:
  2887  0361  083D               	movf	??_USART_set+11,w
  2888  0362  00A7               	movwf	___lldiv@dividend+3
  2889  0363  083C               	movf	??_USART_set+10,w
  2890  0364  00A6               	movwf	___lldiv@dividend+2
  2891  0365  083B               	movf	??_USART_set+9,w
  2892  0366  00A5               	movwf	___lldiv@dividend+1
  2893  0367  083A               	movf	??_USART_set+8,w
  2894  0368  00A4               	movwf	___lldiv@dividend
  2895  0369  120A  118A  2380  120A  118A  	fcall	___lldiv
  2896  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2897  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0370  0820               	movf	?___lldiv,w
  2899  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2900  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2901  0373  0099               	movwf	25	;volatile
  2902  0374                     l1557:
  2903                           
  2904                           ;USART.c: 19:     TXSTAbits.SYNC = 0;
  2905  0374  1218               	bcf	24,4	;volatile
  2906  0375                     l1559:
  2907                           
  2908                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  2909  0375  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0376  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0377  1798               	bsf	24,7	;volatile
  2912  0378                     l1561:
  2913                           
  2914                           ;USART.c: 22:     PIE1bits.RCIE = 1;
  2915  0378  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0379  1303               	bcf	3,6	;RP1=0, select bank1
  2917  037A  168C               	bsf	12,5	;volatile
  2918  037B                     l1563:
  2919                           
  2920                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  2921  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2922  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2923  037D  1318               	bcf	24,6	;volatile
  2924  037E                     l1565:
  2925                           
  2926                           ;USART.c: 27:     RCSTAbits.CREN = 1;
  2927  037E  1618               	bsf	24,4	;volatile
  2928  037F                     l186:
  2929  037F  0008               	return
  2930  0380                     __end_of_USART_set:
  2931                           
  2932                           	psect	text10
  2933  0380                     __ptext10:	
  2934 ;; *************** function ___lldiv *****************
  2935 ;; Defined at:
  2936 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  divisor         4    0[BANK0 ] unsigned long 
  2939 ;;  dividend        4    4[BANK0 ] unsigned long 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  quotient        4    9[BANK0 ] unsigned long 
  2942 ;;  counter         1   13[BANK0 ] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  4    0[BANK0 ] unsigned long 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       8       0       0       0
  2953 ;;      Locals:         0       5       0       0       0
  2954 ;;      Temps:          0       1       0       0       0
  2955 ;;      Totals:         0      14       0       0       0
  2956 ;;Total ram usage:       14 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 3
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_USART_set
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966  0380                     ___lldiv:	
  2967                           ;psect for function ___lldiv
  2968                           
  2969  0380                     l1479:	
  2970                           ;incstack = 0
  2971                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2972                           
  2973  0380  3000               	movlw	0
  2974  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0383  00AC               	movwf	___lldiv@quotient+3
  2977  0384  3000               	movlw	0
  2978  0385  00AB               	movwf	___lldiv@quotient+2
  2979  0386  3000               	movlw	0
  2980  0387  00AA               	movwf	___lldiv@quotient+1
  2981  0388  3000               	movlw	0
  2982  0389  00A9               	movwf	___lldiv@quotient
  2983  038A  0823               	movf	___lldiv@divisor+3,w
  2984  038B  0422               	iorwf	___lldiv@divisor+2,w
  2985  038C  0421               	iorwf	___lldiv@divisor+1,w
  2986  038D  0420               	iorwf	___lldiv@divisor,w
  2987  038E  1903               	skipnz
  2988  038F  2B91               	goto	u671
  2989  0390  2B92               	goto	u670
  2990  0391                     u671:
  2991  0391  2BDF               	goto	l1499
  2992  0392                     u670:
  2993  0392                     l1481:
  2994  0392  01AD               	clrf	___lldiv@counter
  2995  0393  0AAD               	incf	___lldiv@counter,f
  2996  0394  2BA2               	goto	l1485
  2997  0395                     l1483:
  2998  0395  3001               	movlw	1
  2999  0396  00A8               	movwf	??___lldiv
  3000  0397                     u685:
  3001  0397  1003               	clrc
  3002  0398  0DA0               	rlf	___lldiv@divisor,f
  3003  0399  0DA1               	rlf	___lldiv@divisor+1,f
  3004  039A  0DA2               	rlf	___lldiv@divisor+2,f
  3005  039B  0DA3               	rlf	___lldiv@divisor+3,f
  3006  039C  0BA8               	decfsz	??___lldiv,f
  3007  039D  2B97               	goto	u685
  3008  039E  3001               	movlw	1
  3009  039F  00A8               	movwf	??___lldiv
  3010  03A0  0828               	movf	??___lldiv,w
  3011  03A1  07AD               	addwf	___lldiv@counter,f
  3012  03A2                     l1485:
  3013  03A2  1FA3               	btfss	___lldiv@divisor+3,7
  3014  03A3  2BA5               	goto	u691
  3015  03A4  2BA6               	goto	u690
  3016  03A5                     u691:
  3017  03A5  2B95               	goto	l1483
  3018  03A6                     u690:
  3019  03A6                     l1487:
  3020  03A6  3001               	movlw	1
  3021  03A7  00A8               	movwf	??___lldiv
  3022  03A8                     u705:
  3023  03A8  1003               	clrc
  3024  03A9  0DA9               	rlf	___lldiv@quotient,f
  3025  03AA  0DAA               	rlf	___lldiv@quotient+1,f
  3026  03AB  0DAB               	rlf	___lldiv@quotient+2,f
  3027  03AC  0DAC               	rlf	___lldiv@quotient+3,f
  3028  03AD  0BA8               	decfsz	??___lldiv,f
  3029  03AE  2BA8               	goto	u705
  3030  03AF                     l1489:
  3031  03AF  0823               	movf	___lldiv@divisor+3,w
  3032  03B0  0227               	subwf	___lldiv@dividend+3,w
  3033  03B1  1D03               	skipz
  3034  03B2  2BBD               	goto	u715
  3035  03B3  0822               	movf	___lldiv@divisor+2,w
  3036  03B4  0226               	subwf	___lldiv@dividend+2,w
  3037  03B5  1D03               	skipz
  3038  03B6  2BBD               	goto	u715
  3039  03B7  0821               	movf	___lldiv@divisor+1,w
  3040  03B8  0225               	subwf	___lldiv@dividend+1,w
  3041  03B9  1D03               	skipz
  3042  03BA  2BBD               	goto	u715
  3043  03BB  0820               	movf	___lldiv@divisor,w
  3044  03BC  0224               	subwf	___lldiv@dividend,w
  3045  03BD                     u715:
  3046  03BD  1C03               	skipc
  3047  03BE  2BC0               	goto	u711
  3048  03BF  2BC1               	goto	u710
  3049  03C0                     u711:
  3050  03C0  2BD0               	goto	l1495
  3051  03C1                     u710:
  3052  03C1                     l1491:
  3053  03C1  0820               	movf	___lldiv@divisor,w
  3054  03C2  02A4               	subwf	___lldiv@dividend,f
  3055  03C3  0821               	movf	___lldiv@divisor+1,w
  3056  03C4  1C03               	skipc
  3057  03C5  0F21               	incfsz	___lldiv@divisor+1,w
  3058  03C6  02A5               	subwf	___lldiv@dividend+1,f
  3059  03C7  0822               	movf	___lldiv@divisor+2,w
  3060  03C8  1C03               	skipc
  3061  03C9  0F22               	incfsz	___lldiv@divisor+2,w
  3062  03CA  02A6               	subwf	___lldiv@dividend+2,f
  3063  03CB  0823               	movf	___lldiv@divisor+3,w
  3064  03CC  1C03               	skipc
  3065  03CD  0F23               	incfsz	___lldiv@divisor+3,w
  3066  03CE  02A7               	subwf	___lldiv@dividend+3,f
  3067  03CF                     l1493:
  3068  03CF  1429               	bsf	___lldiv@quotient,0
  3069  03D0                     l1495:
  3070  03D0  3001               	movlw	1
  3071  03D1                     u725:
  3072  03D1  1003               	clrc
  3073  03D2  0CA3               	rrf	___lldiv@divisor+3,f
  3074  03D3  0CA2               	rrf	___lldiv@divisor+2,f
  3075  03D4  0CA1               	rrf	___lldiv@divisor+1,f
  3076  03D5  0CA0               	rrf	___lldiv@divisor,f
  3077  03D6  3EFF               	addlw	-1
  3078  03D7  1D03               	skipz
  3079  03D8  2BD1               	goto	u725
  3080  03D9                     l1497:
  3081  03D9  3001               	movlw	1
  3082  03DA  02AD               	subwf	___lldiv@counter,f
  3083  03DB  1D03               	btfss	3,2
  3084  03DC  2BDE               	goto	u731
  3085  03DD  2BDF               	goto	u730
  3086  03DE                     u731:
  3087  03DE  2BA6               	goto	l1487
  3088  03DF                     u730:
  3089  03DF                     l1499:
  3090  03DF  082C               	movf	___lldiv@quotient+3,w
  3091  03E0  00A3               	movwf	?___lldiv+3
  3092  03E1  082B               	movf	___lldiv@quotient+2,w
  3093  03E2  00A2               	movwf	?___lldiv+2
  3094  03E3  082A               	movf	___lldiv@quotient+1,w
  3095  03E4  00A1               	movwf	?___lldiv+1
  3096  03E5  0829               	movf	___lldiv@quotient,w
  3097  03E6  00A0               	movwf	?___lldiv
  3098  03E7                     l394:
  3099  03E7  0008               	return
  3100  03E8                     __end_of___lldiv:
  3101                           
  3102                           	psect	text11
  3103  0440                     __ptext11:	
  3104 ;; *************** function _Lcd_Init *****************
  3105 ;; Defined at:
  3106 ;;		line 68 in file "LCD.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0
  3122 ;;      Temps:          0       2       0       0       0
  3123 ;;      Totals:         0       2       0       0       0
  3124 ;;Total ram usage:        2 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 5
  3127 ;; This function calls:
  3128 ;;		_Lcd_Cmd
  3129 ;;		_Lcd_Port
  3130 ;; This function is called by:
  3131 ;;		_setup
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135  0440                     _Lcd_Init:	
  3136                           ;psect for function _Lcd_Init
  3137                           
  3138  0440                     l2075:	
  3139                           ;incstack = 0
  3140                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3141                           
  3142  0440  3000               	movlw	0
  3143  0441  120A  118A  26AB  120A  118A  	fcall	_Lcd_Port
  3144  0446                     l2077:
  3145  0446  3007               	movlw	7
  3146  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0449  00A4               	movwf	??_Lcd_Init+1
  3149  044A  307C               	movlw	124
  3150  044B  00A3               	movwf	??_Lcd_Init
  3151  044C                     u1617:
  3152  044C  0BA3               	decfsz	??_Lcd_Init,f
  3153  044D  2C4C               	goto	u1617
  3154  044E  0BA4               	decfsz	??_Lcd_Init+1,f
  3155  044F  2C4C               	goto	u1617
  3156  0450  0000               	nop
  3157  0451                     l2079:
  3158  0451  3003               	movlw	3
  3159  0452  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3160  0457  30F9               	movlw	249
  3161  0458  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0459  1303               	bcf	3,6	;RP1=0, select bank0
  3163  045A  00A3               	movwf	??_Lcd_Init
  3164  045B                     u1627:
  3165  045B  2C5C               	nop2
  3166  045C  0BA3               	decfsz	??_Lcd_Init,f
  3167  045D  2C5B               	goto	u1627
  3168  045E  2C5F               	nop2
  3169  045F                     l2081:
  3170  045F  3003               	movlw	3
  3171  0460  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3172  0465                     l2083:
  3173  0465  2C66               	nop2	;2 cycle nop
  3174  0466                     l2085:
  3175  0466  3003               	movlw	3
  3176  0467  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3177  046C                     l2087:
  3178  046C  3002               	movlw	2
  3179  046D  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3180  0472                     l2089:
  3181  0472  3002               	movlw	2
  3182  0473  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3183  0478                     l2091:
  3184  0478  3008               	movlw	8
  3185  0479  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3186  047E                     l2093:
  3187  047E  3000               	movlw	0
  3188  047F  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3189  0484                     l2095:
  3190  0484  300C               	movlw	12
  3191  0485  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3192  048A                     l2097:
  3193  048A  3000               	movlw	0
  3194  048B  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3195  0490                     l2099:
  3196  0490  3006               	movlw	6
  3197  0491  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3198  0496                     l142:
  3199  0496  0008               	return
  3200  0497                     __end_of_Lcd_Init:
  3201                           
  3202                           	psect	text12
  3203  0686                     __ptext12:	
  3204 ;; *************** function _Lcd_Write_String *****************
  3205 ;; Defined at:
  3206 ;;		line 101 in file "LCD.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  a               1    wreg     PTR unsigned char 
  3209 ;;		 -> srow(20), frow(20), 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  a               1    8[BANK0 ] PTR unsigned char 
  3212 ;;		 -> srow(20), frow(20), 
  3213 ;;  i               2    6[BANK0 ] int 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3223 ;;      Params:         0       0       0       0       0
  3224 ;;      Locals:         0       3       0       0       0
  3225 ;;      Temps:          0       1       0       0       0
  3226 ;;      Totals:         0       4       0       0       0
  3227 ;;Total ram usage:        4 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 5
  3230 ;; This function calls:
  3231 ;;		_Lcd_Write_Char
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237  0686                     _Lcd_Write_String:	
  3238                           ;psect for function _Lcd_Write_String
  3239                           
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3243                           ;Lcd_Write_String@a stored from wreg
  3244  0686  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0687  1303               	bcf	3,6	;RP1=0, select bank0
  3246  0688  00A8               	movwf	Lcd_Write_String@a
  3247  0689                     l2337:
  3248  0689  01A6               	clrf	Lcd_Write_String@i
  3249  068A  01A7               	clrf	Lcd_Write_String@i+1
  3250  068B  2E9F               	goto	l2343
  3251  068C                     l2339:
  3252  068C  0826               	movf	Lcd_Write_String@i,w
  3253  068D  0728               	addwf	Lcd_Write_String@a,w
  3254  068E  00A5               	movwf	??_Lcd_Write_String
  3255  068F  0825               	movf	??_Lcd_Write_String,w
  3256  0690  0084               	movwf	4
  3257  0691  0800               	movf	0,w
  3258  0692  120A  118A  25AB  120A  118A  	fcall	_Lcd_Write_Char
  3259  0697                     l2341:
  3260  0697  3001               	movlw	1
  3261  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0699  1303               	bcf	3,6	;RP1=0, select bank0
  3263  069A  07A6               	addwf	Lcd_Write_String@i,f
  3264  069B  1803               	skipnc
  3265  069C  0AA7               	incf	Lcd_Write_String@i+1,f
  3266  069D  3000               	movlw	0
  3267  069E  07A7               	addwf	Lcd_Write_String@i+1,f
  3268  069F                     l2343:
  3269  069F  0826               	movf	Lcd_Write_String@i,w
  3270  06A0  0728               	addwf	Lcd_Write_String@a,w
  3271  06A1  00A5               	movwf	??_Lcd_Write_String
  3272  06A2  0825               	movf	??_Lcd_Write_String,w
  3273  06A3  0084               	movwf	4
  3274  06A4  1383               	bcf	3,7	;select IRP bank0
  3275  06A5  0800               	movf	0,w
  3276  06A6  1D03               	btfss	3,2
  3277  06A7  2EA9               	goto	u1591
  3278  06A8  2EAA               	goto	u1590
  3279  06A9                     u1591:
  3280  06A9  2E8C               	goto	l2339
  3281  06AA                     u1590:
  3282  06AA                     l151:
  3283  06AA  0008               	return
  3284  06AB                     __end_of_Lcd_Write_String:
  3285                           
  3286                           	psect	text13
  3287  05AB                     __ptext13:	
  3288 ;; *************** function _Lcd_Write_Char *****************
  3289 ;; Defined at:
  3290 ;;		line 86 in file "LCD.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  a               1    wreg     unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  a               1    4[BANK0 ] unsigned char 
  3295 ;;  y               1    3[BANK0 ] unsigned char 
  3296 ;;  temp            1    2[BANK0 ] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       0       0       0       0
  3307 ;;      Locals:         0       3       0       0       0
  3308 ;;      Temps:          0       1       0       0       0
  3309 ;;      Totals:         0       4       0       0       0
  3310 ;;Total ram usage:        4 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 4
  3313 ;; This function calls:
  3314 ;;		_Lcd_Port
  3315 ;; This function is called by:
  3316 ;;		_Lcd_Write_String
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320  05AB                     _Lcd_Write_Char:	
  3321                           ;psect for function _Lcd_Write_Char
  3322                           
  3323                           
  3324                           ;incstack = 0
  3325                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3326                           ;Lcd_Write_Char@a stored from wreg
  3327  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3328  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  3329  05AD  00A4               	movwf	Lcd_Write_Char@a
  3330  05AE                     l2111:
  3331  05AE  0824               	movf	Lcd_Write_Char@a,w
  3332  05AF  390F               	andlw	15
  3333  05B0  00A1               	movwf	??_Lcd_Write_Char
  3334  05B1  0821               	movf	??_Lcd_Write_Char,w
  3335  05B2  00A2               	movwf	Lcd_Write_Char@temp
  3336  05B3  0824               	movf	Lcd_Write_Char@a,w
  3337  05B4  39F0               	andlw	240
  3338  05B5  00A1               	movwf	??_Lcd_Write_Char
  3339  05B6  0821               	movf	??_Lcd_Write_Char,w
  3340  05B7  00A3               	movwf	Lcd_Write_Char@y
  3341  05B8                     l2113:
  3342  05B8  1405               	bsf	5,0	;volatile
  3343  05B9                     l2115:
  3344  05B9  0823               	movf	Lcd_Write_Char@y,w
  3345  05BA  00A1               	movwf	??_Lcd_Write_Char
  3346  05BB  3004               	movlw	4
  3347  05BC                     u1305:
  3348  05BC  1003               	clrc
  3349  05BD  0CA1               	rrf	??_Lcd_Write_Char,f
  3350  05BE  3EFF               	addlw	-1
  3351  05BF  1D03               	skipz
  3352  05C0  2DBC               	goto	u1305
  3353  05C1  0821               	movf	??_Lcd_Write_Char,w
  3354  05C2  120A  118A  26AB  120A  118A  	fcall	_Lcd_Port
  3355  05C7                     l2117:
  3356  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3357  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  3358  05C9  1485               	bsf	5,1	;volatile
  3359  05CA                     l2119:
  3360  05CA  3002               	movlw	2
  3361  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3362  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3363  05CD  00A1               	movwf	??_Lcd_Write_Char
  3364  05CE                     u1637:
  3365  05CE  0BA1               	decfsz	??_Lcd_Write_Char,f
  3366  05CF  2DCE               	goto	u1637
  3367  05D0  0000               	nop
  3368  05D1                     l2121:
  3369  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3370  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3371  05D3  1085               	bcf	5,1	;volatile
  3372  05D4                     l2123:
  3373  05D4  0822               	movf	Lcd_Write_Char@temp,w
  3374  05D5  120A  118A  26AB  120A  118A  	fcall	_Lcd_Port
  3375  05DA                     l2125:
  3376  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3377  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3378  05DC  1485               	bsf	5,1	;volatile
  3379  05DD                     l2127:
  3380  05DD  3002               	movlw	2
  3381  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3382  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3383  05E0  00A1               	movwf	??_Lcd_Write_Char
  3384  05E1                     u1647:
  3385  05E1  0BA1               	decfsz	??_Lcd_Write_Char,f
  3386  05E2  2DE1               	goto	u1647
  3387  05E3  0000               	nop
  3388  05E4                     l2129:
  3389  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3390  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  3391  05E6  1085               	bcf	5,1	;volatile
  3392  05E7                     l145:
  3393  05E7  0008               	return
  3394  05E8                     __end_of_Lcd_Write_Char:
  3395                           
  3396                           	psect	text14
  3397  03E8                     __ptext14:	
  3398 ;; *************** function _Lcd_Set_Cursor *****************
  3399 ;; Defined at:
  3400 ;;		line 50 in file "LCD.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  a               1    wreg     unsigned char 
  3403 ;;  b               1    3[BANK0 ] unsigned char 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  a               1    6[BANK0 ] unsigned char 
  3406 ;;  temp            1    9[BANK0 ] unsigned char 
  3407 ;;  y               1    8[BANK0 ] unsigned char 
  3408 ;;  z               1    7[BANK0 ] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         0       1       0       0       0
  3419 ;;      Locals:         0       4       0       0       0
  3420 ;;      Temps:          0       2       0       0       0
  3421 ;;      Totals:         0       7       0       0       0
  3422 ;;Total ram usage:        7 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 5
  3425 ;; This function calls:
  3426 ;;		_Lcd_Cmd
  3427 ;; This function is called by:
  3428 ;;		_main
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432  03E8                     _Lcd_Set_Cursor:	
  3433                           ;psect for function _Lcd_Set_Cursor
  3434                           
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3438                           ;Lcd_Set_Cursor@a stored from wreg
  3439  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3440  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3441  03EA  00A6               	movwf	Lcd_Set_Cursor@a
  3442  03EB                     l2317:
  3443  03EB  0326               	decf	Lcd_Set_Cursor@a,w
  3444  03EC  1D03               	btfss	3,2
  3445  03ED  2BEF               	goto	u1551
  3446  03EE  2BF0               	goto	u1550
  3447  03EF                     u1551:
  3448  03EF  2C15               	goto	l2327
  3449  03F0                     u1550:
  3450  03F0                     l2319:
  3451  03F0  0823               	movf	Lcd_Set_Cursor@b,w
  3452  03F1  3E7F               	addlw	127
  3453  03F2  00A4               	movwf	??_Lcd_Set_Cursor
  3454  03F3  0824               	movf	??_Lcd_Set_Cursor,w
  3455  03F4  00A9               	movwf	Lcd_Set_Cursor@temp
  3456  03F5  0829               	movf	Lcd_Set_Cursor@temp,w
  3457  03F6  00A4               	movwf	??_Lcd_Set_Cursor
  3458  03F7  3004               	movlw	4
  3459  03F8                     u1565:
  3460  03F8  1003               	clrc
  3461  03F9  0CA4               	rrf	??_Lcd_Set_Cursor,f
  3462  03FA  3EFF               	addlw	-1
  3463  03FB  1D03               	skipz
  3464  03FC  2BF8               	goto	u1565
  3465  03FD  0824               	movf	??_Lcd_Set_Cursor,w
  3466  03FE  00A5               	movwf	??_Lcd_Set_Cursor+1
  3467  03FF  0825               	movf	??_Lcd_Set_Cursor+1,w
  3468  0400  00A7               	movwf	Lcd_Set_Cursor@z
  3469  0401                     l2321:
  3470  0401  0829               	movf	Lcd_Set_Cursor@temp,w
  3471  0402  390F               	andlw	15
  3472  0403  00A4               	movwf	??_Lcd_Set_Cursor
  3473  0404  0824               	movf	??_Lcd_Set_Cursor,w
  3474  0405  00A8               	movwf	Lcd_Set_Cursor@y
  3475  0406                     l2323:
  3476  0406  0827               	movf	Lcd_Set_Cursor@z,w
  3477  0407  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3478  040C                     l2325:
  3479  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3480  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3481  040E  0828               	movf	Lcd_Set_Cursor@y,w
  3482  040F  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3483  0414  2C3F               	goto	l139
  3484  0415                     l2327:
  3485  0415  3002               	movlw	2
  3486  0416  0626               	xorwf	Lcd_Set_Cursor@a,w
  3487  0417  1D03               	btfss	3,2
  3488  0418  2C1A               	goto	u1571
  3489  0419  2C1B               	goto	u1570
  3490  041A                     u1571:
  3491  041A  2C3F               	goto	l139
  3492  041B                     u1570:
  3493  041B                     l2329:
  3494  041B  0823               	movf	Lcd_Set_Cursor@b,w
  3495  041C  3EBF               	addlw	191
  3496  041D  00A4               	movwf	??_Lcd_Set_Cursor
  3497  041E  0824               	movf	??_Lcd_Set_Cursor,w
  3498  041F  00A9               	movwf	Lcd_Set_Cursor@temp
  3499  0420  0829               	movf	Lcd_Set_Cursor@temp,w
  3500  0421  00A4               	movwf	??_Lcd_Set_Cursor
  3501  0422  3004               	movlw	4
  3502  0423                     u1585:
  3503  0423  1003               	clrc
  3504  0424  0CA4               	rrf	??_Lcd_Set_Cursor,f
  3505  0425  3EFF               	addlw	-1
  3506  0426  1D03               	skipz
  3507  0427  2C23               	goto	u1585
  3508  0428  0824               	movf	??_Lcd_Set_Cursor,w
  3509  0429  00A5               	movwf	??_Lcd_Set_Cursor+1
  3510  042A  0825               	movf	??_Lcd_Set_Cursor+1,w
  3511  042B  00A7               	movwf	Lcd_Set_Cursor@z
  3512  042C                     l2331:
  3513  042C  0829               	movf	Lcd_Set_Cursor@temp,w
  3514  042D  390F               	andlw	15
  3515  042E  00A4               	movwf	??_Lcd_Set_Cursor
  3516  042F  0824               	movf	??_Lcd_Set_Cursor,w
  3517  0430  00A8               	movwf	Lcd_Set_Cursor@y
  3518  0431                     l2333:
  3519  0431  0827               	movf	Lcd_Set_Cursor@z,w
  3520  0432  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3521  0437                     l2335:
  3522  0437  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0438  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0439  0828               	movf	Lcd_Set_Cursor@y,w
  3525  043A  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3526  043F                     l139:
  3527  043F  0008               	return
  3528  0440                     __end_of_Lcd_Set_Cursor:
  3529                           
  3530                           	psect	text15
  3531  0716                     __ptext15:	
  3532 ;; *************** function _Lcd_Clear *****************
  3533 ;; Defined at:
  3534 ;;		line 45 in file "LCD.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 5
  3555 ;; This function calls:
  3556 ;;		_Lcd_Cmd
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562  0716                     _Lcd_Clear:	
  3563                           ;psect for function _Lcd_Clear
  3564                           
  3565  0716                     l2197:	
  3566                           ;incstack = 0
  3567                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3568                           
  3569  0716  3000               	movlw	0
  3570  0717  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3571  071C  3001               	movlw	1
  3572  071D  120A  118A  26E9  120A  118A  	fcall	_Lcd_Cmd
  3573  0722                     l133:
  3574  0722  0008               	return
  3575  0723                     __end_of_Lcd_Clear:
  3576                           
  3577                           	psect	text16
  3578  06E9                     __ptext16:	
  3579 ;; *************** function _Lcd_Cmd *****************
  3580 ;; Defined at:
  3581 ;;		line 36 in file "LCD.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  a               1    wreg     unsigned char 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  a               1    2[BANK0 ] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         0       0       0       0       0
  3596 ;;      Locals:         0       1       0       0       0
  3597 ;;      Temps:          0       1       0       0       0
  3598 ;;      Totals:         0       2       0       0       0
  3599 ;;Total ram usage:        2 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 4
  3602 ;; This function calls:
  3603 ;;		_Lcd_Port
  3604 ;; This function is called by:
  3605 ;;		_Lcd_Clear
  3606 ;;		_Lcd_Set_Cursor
  3607 ;;		_Lcd_Init
  3608 ;;		_Lcd_Shift_Right
  3609 ;;		_Lcd_Shift_Left
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613  06E9                     _Lcd_Cmd:	
  3614                           ;psect for function _Lcd_Cmd
  3615                           
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3619                           ;Lcd_Cmd@a stored from wreg
  3620  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3621  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3622  06EB  00A2               	movwf	Lcd_Cmd@a
  3623  06EC                     l2065:
  3624  06EC  1005               	bcf	5,0	;volatile
  3625  06ED                     l2067:
  3626  06ED  0822               	movf	Lcd_Cmd@a,w
  3627  06EE  120A  118A  26AB  120A  118A  	fcall	_Lcd_Port
  3628  06F3                     l2069:
  3629  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3630  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  3631  06F5  1485               	bsf	5,1	;volatile
  3632  06F6                     l2071:
  3633  06F6  30C7               	movlw	199
  3634  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3635  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3636  06F9  00A1               	movwf	??_Lcd_Cmd
  3637  06FA                     u1657:
  3638  06FA  2EFB               	nop2
  3639  06FB  0BA1               	decfsz	??_Lcd_Cmd,f
  3640  06FC  2EFA               	goto	u1657
  3641  06FD  2EFE               	nop2
  3642  06FE                     l2073:
  3643  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3644  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3645  0700  1085               	bcf	5,1	;volatile
  3646  0701                     l130:
  3647  0701  0008               	return
  3648  0702                     __end_of_Lcd_Cmd:
  3649                           
  3650                           	psect	text17
  3651  06AB                     __ptext17:	
  3652 ;; *************** function _Lcd_Port *****************
  3653 ;; Defined at:
  3654 ;;		line 13 in file "LCD.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  a               1    wreg     unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  a               1    0[BANK0 ] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         0       0       0       0       0
  3669 ;;      Locals:         0       1       0       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         0       1       0       0       0
  3672 ;;Total ram usage:        1 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 3
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_Lcd_Cmd
  3679 ;;		_Lcd_Init
  3680 ;;		_Lcd_Write_Char
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684  06AB                     _Lcd_Port:	
  3685                           ;psect for function _Lcd_Port
  3686                           
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _Lcd_Port: [wreg]
  3690                           ;Lcd_Port@a stored from wreg
  3691  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3692  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3693  06AD  00A0               	movwf	Lcd_Port@a
  3694  06AE                     l2055:
  3695  06AE  1C20               	btfss	Lcd_Port@a,0
  3696  06AF  2EB1               	goto	u1251
  3697  06B0  2EB2               	goto	u1250
  3698  06B1                     u1251:
  3699  06B1  2EB4               	goto	l119
  3700  06B2                     u1250:
  3701  06B2                     l2057:
  3702  06B2  1505               	bsf	5,2	;volatile
  3703  06B3  2EB5               	goto	l120
  3704  06B4                     l119:
  3705  06B4  1105               	bcf	5,2	;volatile
  3706  06B5                     l120:
  3707  06B5  1CA0               	btfss	Lcd_Port@a,1
  3708  06B6  2EB8               	goto	u1261
  3709  06B7  2EB9               	goto	u1260
  3710  06B8                     u1261:
  3711  06B8  2EBB               	goto	l121
  3712  06B9                     u1260:
  3713  06B9                     l2059:
  3714  06B9  1585               	bsf	5,3	;volatile
  3715  06BA  2EBC               	goto	l122
  3716  06BB                     l121:
  3717  06BB  1185               	bcf	5,3	;volatile
  3718  06BC                     l122:
  3719  06BC  1D20               	btfss	Lcd_Port@a,2
  3720  06BD  2EBF               	goto	u1271
  3721  06BE  2EC0               	goto	u1270
  3722  06BF                     u1271:
  3723  06BF  2EC2               	goto	l123
  3724  06C0                     u1270:
  3725  06C0                     l2061:
  3726  06C0  1605               	bsf	5,4	;volatile
  3727  06C1  2EC3               	goto	l124
  3728  06C2                     l123:
  3729  06C2  1205               	bcf	5,4	;volatile
  3730  06C3                     l124:
  3731  06C3  1DA0               	btfss	Lcd_Port@a,3
  3732  06C4  2EC6               	goto	u1281
  3733  06C5  2EC7               	goto	u1280
  3734  06C6                     u1281:
  3735  06C6  2EC9               	goto	l125
  3736  06C7                     u1280:
  3737  06C7                     l2063:
  3738  06C7  1409               	bsf	9,0	;volatile
  3739  06C8  2ECA               	goto	l127
  3740  06C9                     l125:
  3741  06C9  1009               	bcf	9,0	;volatile
  3742  06CA                     l127:
  3743  06CA  0008               	return
  3744  06CB                     __end_of_Lcd_Port:
  3745                           
  3746                           	psect	text18
  3747  022B                     __ptext18:	
  3748 ;; *************** function _master *****************
  3749 ;; Defined at:
  3750 ;;		line 72 in file "main_master_p1.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3764 ;;      Params:         0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0
  3766 ;;      Temps:          5       0       0       0       0
  3767 ;;      Totals:         5       0       0       0       0
  3768 ;;Total ram usage:        5 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 2
  3771 ;; This function calls:
  3772 ;;		_USART_read
  3773 ;;		_read_red
  3774 ;;		_spiRead
  3775 ;;		_spiWrite
  3776 ;; This function is called by:
  3777 ;;		Interrupt level 1
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781  022B                     _master:	
  3782                           ;psect for function _master
  3783                           
  3784  022B                     i1l1893:
  3785                           
  3786                           ;main_master_p1.c: 74:     if(PIR1bits.RCIF){
  3787  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3788  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3789  022D  1E8C               	btfss	12,5	;volatile
  3790  022E  2A30               	goto	u122_21
  3791  022F  2A31               	goto	u122_20
  3792  0230                     u122_21:
  3793  0230  2A3E               	goto	i1l1899
  3794  0231                     u122_20:
  3795  0231                     i1l1895:
  3796                           
  3797                           ;main_master_p1.c: 75:         val = USART_read();
  3798  0231  120A  118A  2747  120A  118A  	fcall	_USART_read
  3799  0236  00F2               	movwf	??_master
  3800  0237  0872               	movf	??_master,w
  3801  0238  00F9               	movwf	_val
  3802  0239                     i1l1897:
  3803                           
  3804                           ;main_master_p1.c: 76:         read_red();
  3805  0239  120A  118A  2497  120A  118A  	fcall	_read_red
  3806  023E                     i1l1899:
  3807                           
  3808                           ;main_master_p1.c: 78:     if (PIR1bits.SSPIF){
  3809  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3810  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0240  1D8C               	btfss	12,3	;volatile
  3812  0241  2A43               	goto	u123_21
  3813  0242  2A44               	goto	u123_20
  3814  0243                     u123_21:
  3815  0243  2A96               	goto	i1l79
  3816  0244                     u123_20:
  3817  0244                     i1l1901:
  3818                           
  3819                           ;main_master_p1.c: 79:         req = spiRead();
  3820  0244  120A  118A  2723  120A  118A  	fcall	_spiRead
  3821  0249  00F2               	movwf	??_master
  3822  024A  01F3               	clrf	??_master+1
  3823  024B  0872               	movf	??_master,w
  3824  024C  00F7               	movwf	_req
  3825  024D  0873               	movf	??_master+1,w
  3826  024E  00F8               	movwf	_req+1
  3827                           
  3828                           ;main_master_p1.c: 80:         switch (req){
  3829  024F  2A7D               	goto	i1l1915
  3830  0250                     i1l1903:
  3831                           
  3832                           ;main_master_p1.c: 82:                 spiWrite(temp);
  3833  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0252  085E               	movf	_temp,w
  3836  0253  120A  118A  2741  120A  118A  	fcall	_spiWrite
  3837                           
  3838                           ;main_master_p1.c: 83:                 break;
  3839  0258  2A93               	goto	i1l73
  3840  0259                     i1l1905:
  3841                           
  3842                           ;main_master_p1.c: 85:                 spiWrite(mov);
  3843  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3844  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3845  025B  0844               	movf	_mov,w
  3846  025C  120A  118A  2741  120A  118A  	fcall	_spiWrite
  3847                           
  3848                           ;main_master_p1.c: 86:                 break;
  3849  0261  2A93               	goto	i1l73
  3850  0262                     i1l1907:
  3851                           
  3852                           ;main_master_p1.c: 88:                 spiWrite(mins);
  3853  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0264  085A               	movf	_mins,w
  3856  0265  120A  118A  2741  120A  118A  	fcall	_spiWrite
  3857                           
  3858                           ;main_master_p1.c: 89:                 break;
  3859  026A  2A93               	goto	i1l73
  3860  026B                     i1l1909:
  3861                           
  3862                           ;main_master_p1.c: 91:                 spiWrite(hrs);
  3863  026B  1283               	bcf	3,5	;RP0=0, select bank0
  3864  026C  1303               	bcf	3,6	;RP1=0, select bank0
  3865  026D  085C               	movf	_hrs,w
  3866  026E  120A  118A  2741  120A  118A  	fcall	_spiWrite
  3867                           
  3868                           ;main_master_p1.c: 92:                 break;
  3869  0273  2A93               	goto	i1l73
  3870  0274                     i1l1911:
  3871                           
  3872                           ;main_master_p1.c: 94:                 spiWrite(lux);
  3873  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0276  0842               	movf	_lux,w
  3876  0277  120A  118A  2741  120A  118A  	fcall	_spiWrite
  3877                           
  3878                           ;main_master_p1.c: 95:                 break;
  3879  027C  2A93               	goto	i1l73
  3880  027D                     i1l1915:
  3881                           
  3882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3883                           ; Switch size 1, requested type "simple"
  3884                           ; Number of cases is 1, Range of values is 0 to 0
  3885                           ; switch strategies available:
  3886                           ; Name         Instructions Cycles
  3887                           ; simple_byte            4     3 (average)
  3888                           ; direct_byte           11     8 (fixed)
  3889                           ; jumptable            260     6 (fixed)
  3890                           ;	Chosen strategy is simple_byte
  3891  027D  0878               	movf	_req+1,w
  3892  027E  3A00               	xorlw	0	; case 0
  3893  027F  1903               	skipnz
  3894  0280  2A82               	goto	i1l2485
  3895  0281  2A93               	goto	i1l73
  3896  0282                     i1l2485:
  3897                           
  3898                           ; Switch size 1, requested type "simple"
  3899                           ; Number of cases is 5, Range of values is 0 to 4
  3900                           ; switch strategies available:
  3901                           ; Name         Instructions Cycles
  3902                           ; simple_byte           16     9 (average)
  3903                           ; direct_byte           23     8 (fixed)
  3904                           ; jumptable            260     6 (fixed)
  3905                           ;	Chosen strategy is simple_byte
  3906  0282  0877               	movf	_req,w
  3907  0283  3A00               	xorlw	0	; case 0
  3908  0284  1903               	skipnz
  3909  0285  2A50               	goto	i1l1903
  3910  0286  3A01               	xorlw	1	; case 1
  3911  0287  1903               	skipnz
  3912  0288  2A59               	goto	i1l1905
  3913  0289  3A03               	xorlw	3	; case 2
  3914  028A  1903               	skipnz
  3915  028B  2A62               	goto	i1l1907
  3916  028C  3A01               	xorlw	1	; case 3
  3917  028D  1903               	skipnz
  3918  028E  2A6B               	goto	i1l1909
  3919  028F  3A07               	xorlw	7	; case 4
  3920  0290  1903               	skipnz
  3921  0291  2A74               	goto	i1l1911
  3922  0292  2A93               	goto	i1l73
  3923  0293                     i1l73:
  3924                           
  3925                           ;main_master_p1.c: 100:         PIR1bits.SSPIF = 0;
  3926  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3927  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3928  0295  118C               	bcf	12,3	;volatile
  3929  0296                     i1l79:
  3930  0296  0876               	movf	??_master+4,w
  3931  0297  008A               	movwf	10
  3932  0298  0875               	movf	??_master+3,w
  3933  0299  0084               	movwf	4
  3934  029A  0E74               	swapf	??_master+2,w
  3935  029B  0083               	movwf	3
  3936  029C  0EFE               	swapf	btemp,f
  3937  029D  0E7E               	swapf	btemp,w
  3938  029E  0009               	retfie
  3939  029F                     __end_of_master:
  3940                           
  3941                           	psect	intentry
  3942  0004                     __pintentry:	
  3943                           ;incstack = 0
  3944                           ; Regs used in _master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3945                           
  3946  0004                     interrupt_function:
  3947  007E                     saved_w	set	btemp
  3948  0004  00FE               	movwf	btemp
  3949  0005  0E03               	swapf	3,w
  3950  0006  00F4               	movwf	??_master+2
  3951  0007  0804               	movf	4,w
  3952  0008  00F5               	movwf	??_master+3
  3953  0009  080A               	movf	10,w
  3954  000A  00F6               	movwf	??_master+4
  3955  000B  120A  118A  2A2B   	ljmp	_master
  3956                           
  3957                           	psect	text19
  3958  0741                     __ptext19:	
  3959 ;; *************** function _spiWrite *****************
  3960 ;; Defined at:
  3961 ;;		line 34 in file "SPI.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  dat             1    wreg     unsigned char 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  dat             1    0[COMMON] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       0       0       0       0
  3976 ;;      Locals:         1       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0
  3978 ;;      Totals:         1       0       0       0       0
  3979 ;;Total ram usage:        1 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_master
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988  0741                     _spiWrite:	
  3989                           ;psect for function _spiWrite
  3990                           
  3991                           
  3992                           ;incstack = 0
  3993                           ; Regs used in _spiWrite: [wreg]
  3994                           ;spiWrite@dat stored from wreg
  3995  0741  00F0               	movwf	spiWrite@dat
  3996  0742                     i1l1703:
  3997                           
  3998                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  3999  0742  0870               	movf	spiWrite@dat,w
  4000  0743  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0744  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0745  0093               	movwf	19	;volatile
  4003  0746                     i1l213:
  4004  0746  0008               	return
  4005  0747                     __end_of_spiWrite:
  4006                           
  4007                           	psect	text20
  4008  0723                     __ptext20:	
  4009 ;; *************** function _spiRead *****************
  4010 ;; Defined at:
  4011 ;;		line 47 in file "SPI.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      unsigned char 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0
  4028 ;;      Totals:         0       0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; Hardware stack levels required when called: 1
  4032 ;; This function calls:
  4033 ;;		_spiReceiveWait
  4034 ;; This function is called by:
  4035 ;;		_master
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039  0723                     _spiRead:	
  4040                           ;psect for function _spiRead
  4041                           
  4042  0723                     i1l1697:	
  4043                           ;incstack = 0
  4044                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  4045                           
  4046                           
  4047                           ;SPI.c: 49:     spiReceiveWait();
  4048  0723  120A  118A  2734  120A  118A  	fcall	_spiReceiveWait
  4049  0728                     i1l1699:
  4050                           
  4051                           ;SPI.c: 50:     return(SSPBUF);
  4052  0728  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0729  1303               	bcf	3,6	;RP1=0, select bank0
  4054  072A  0813               	movf	19,w	;volatile
  4055  072B                     i1l221:
  4056  072B  0008               	return
  4057  072C                     __end_of_spiRead:
  4058                           
  4059                           	psect	text21
  4060  0734                     __ptext21:	
  4061 ;; *************** function _spiReceiveWait *****************
  4062 ;; Defined at:
  4063 ;;		line 29 in file "SPI.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		None
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4077 ;;      Params:         0       0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0
  4080 ;;      Totals:         0       0       0       0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_spiRead
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090  0734                     _spiReceiveWait:	
  4091                           ;psect for function _spiReceiveWait
  4092                           
  4093  0734                     i1l1597:	
  4094                           ;incstack = 0
  4095                           ; Regs used in _spiReceiveWait: []
  4096                           
  4097  0734                     i1l207:	
  4098                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  4099                           
  4100  0734  1683               	bsf	3,5	;RP0=1, select bank1
  4101  0735  1303               	bcf	3,6	;RP1=0, select bank1
  4102  0736  1C14               	btfss	20,0	;volatile
  4103  0737  2F39               	goto	u79_21
  4104  0738  2F3A               	goto	u79_20
  4105  0739                     u79_21:
  4106  0739  2F34               	goto	i1l207
  4107  073A                     u79_20:
  4108  073A                     i1l210:
  4109  073A  0008               	return
  4110  073B                     __end_of_spiReceiveWait:
  4111                           
  4112                           	psect	text22
  4113  0497                     __ptext22:	
  4114 ;; *************** function _read_red *****************
  4115 ;; Defined at:
  4116 ;;		line 131 in file "main_master_p1.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4130 ;;      Params:         0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0
  4132 ;;      Temps:          2       0       0       0       0
  4133 ;;      Totals:         2       0       0       0       0
  4134 ;;Total ram usage:        2 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_master
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143  0497                     _read_red:	
  4144                           ;psect for function _read_red
  4145                           
  4146  0497                     i1l1677:	
  4147                           ;incstack = 0
  4148                           ; Regs used in _read_red: [wreg-fsr0h+status,2+status,0]
  4149                           
  4150                           
  4151                           ;main_master_p1.c: 132:     switch(val & 224){
  4152  0497  2CCF               	goto	i1l1691
  4153  0498                     i1l1679:
  4154                           
  4155                           ;main_master_p1.c: 134:             mov = val & 31;
  4156  0498  0879               	movf	_val,w
  4157  0499  391F               	andlw	31
  4158  049A  00F0               	movwf	??_read_red
  4159  049B  01F1               	clrf	??_read_red+1
  4160  049C  0870               	movf	??_read_red,w
  4161  049D  1283               	bcf	3,5	;RP0=0, select bank0
  4162  049E  1303               	bcf	3,6	;RP1=0, select bank0
  4163  049F  00C4               	movwf	_mov
  4164  04A0  0871               	movf	??_read_red+1,w
  4165  04A1  00C5               	movwf	_mov+1
  4166                           
  4167                           ;main_master_p1.c: 135:             break;
  4168  04A2  2CE6               	goto	i1l99
  4169  04A3                     i1l1681:
  4170                           
  4171                           ;main_master_p1.c: 137:             temp = val & 31;
  4172  04A3  0879               	movf	_val,w
  4173  04A4  391F               	andlw	31
  4174  04A5  00F0               	movwf	??_read_red
  4175  04A6  01F1               	clrf	??_read_red+1
  4176  04A7  0870               	movf	??_read_red,w
  4177  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  4178  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  4179  04AA  00DE               	movwf	_temp
  4180  04AB  0871               	movf	??_read_red+1,w
  4181  04AC  00DF               	movwf	_temp+1
  4182                           
  4183                           ;main_master_p1.c: 138:             break;
  4184  04AD  2CE6               	goto	i1l99
  4185  04AE                     i1l1683:
  4186                           
  4187                           ;main_master_p1.c: 140:             lux = val & 31;
  4188  04AE  0879               	movf	_val,w
  4189  04AF  391F               	andlw	31
  4190  04B0  00F0               	movwf	??_read_red
  4191  04B1  01F1               	clrf	??_read_red+1
  4192  04B2  0870               	movf	??_read_red,w
  4193  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  4194  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  4195  04B5  00C2               	movwf	_lux
  4196  04B6  0871               	movf	??_read_red+1,w
  4197  04B7  00C3               	movwf	_lux+1
  4198                           
  4199                           ;main_master_p1.c: 141:             break;
  4200  04B8  2CE6               	goto	i1l99
  4201  04B9                     i1l1685:
  4202                           
  4203                           ;main_master_p1.c: 143:             hrs = val & 31;
  4204  04B9  0879               	movf	_val,w
  4205  04BA  391F               	andlw	31
  4206  04BB  00F0               	movwf	??_read_red
  4207  04BC  01F1               	clrf	??_read_red+1
  4208  04BD  0870               	movf	??_read_red,w
  4209  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  4210  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  4211  04C0  00DC               	movwf	_hrs
  4212  04C1  0871               	movf	??_read_red+1,w
  4213  04C2  00DD               	movwf	_hrs+1
  4214                           
  4215                           ;main_master_p1.c: 144:             break;
  4216  04C3  2CE6               	goto	i1l99
  4217  04C4                     i1l1687:
  4218                           
  4219                           ;main_master_p1.c: 146:             mins = val & 31;
  4220  04C4  0879               	movf	_val,w
  4221  04C5  391F               	andlw	31
  4222  04C6  00F0               	movwf	??_read_red
  4223  04C7  01F1               	clrf	??_read_red+1
  4224  04C8  0870               	movf	??_read_red,w
  4225  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  4226  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  4227  04CB  00DA               	movwf	_mins
  4228  04CC  0871               	movf	??_read_red+1,w
  4229  04CD  00DB               	movwf	_mins+1
  4230                           
  4231                           ;main_master_p1.c: 147:             break;
  4232  04CE  2CE6               	goto	i1l99
  4233  04CF                     i1l1691:
  4234  04CF  0879               	movf	_val,w
  4235  04D0  39E0               	andlw	224
  4236  04D1  00F0               	movwf	??_read_red
  4237  04D2  01F1               	clrf	??_read_red+1
  4238                           
  4239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4240                           ; Switch size 1, requested type "simple"
  4241                           ; Number of cases is 1, Range of values is 0 to 0
  4242                           ; switch strategies available:
  4243                           ; Name         Instructions Cycles
  4244                           ; simple_byte            4     3 (average)
  4245                           ; direct_byte           11     8 (fixed)
  4246                           ; jumptable            260     6 (fixed)
  4247                           ;	Chosen strategy is simple_byte
  4248  04D3  0871               	movf	??_read_red+1,w
  4249  04D4  3A00               	xorlw	0	; case 0
  4250  04D5  1903               	skipnz
  4251  04D6  2CD8               	goto	i1l2487
  4252  04D7  2CC4               	goto	i1l1687
  4253  04D8                     i1l2487:
  4254                           
  4255                           ; Switch size 1, requested type "simple"
  4256                           ; Number of cases is 4, Range of values is 128 to 224
  4257                           ; switch strategies available:
  4258                           ; Name         Instructions Cycles
  4259                           ; simple_byte           13     7 (average)
  4260                           ; jumptable            263     9 (fixed)
  4261                           ;	Chosen strategy is simple_byte
  4262  04D8  0870               	movf	??_read_red,w
  4263  04D9  3A80               	xorlw	128	; case 128
  4264  04DA  1903               	skipnz
  4265  04DB  2C98               	goto	i1l1679
  4266  04DC  3A20               	xorlw	32	; case 160
  4267  04DD  1903               	skipnz
  4268  04DE  2CA3               	goto	i1l1681
  4269  04DF  3A60               	xorlw	96	; case 192
  4270  04E0  1903               	skipnz
  4271  04E1  2CAE               	goto	i1l1683
  4272  04E2  3A20               	xorlw	32	; case 224
  4273  04E3  1903               	skipnz
  4274  04E4  2CB9               	goto	i1l1685
  4275  04E5  2CC4               	goto	i1l1687
  4276  04E6                     i1l99:
  4277  04E6  0008               	return
  4278  04E7                     __end_of_read_red:
  4279                           
  4280                           	psect	text23
  4281  0747                     __ptext23:	
  4282 ;; *************** function _USART_read *****************
  4283 ;; Defined at:
  4284 ;;		line 30 in file "USART.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      unsigned char 
  4291 ;; Registers used:
  4292 ;;		wreg
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4298 ;;      Params:         0       0       0       0       0
  4299 ;;      Locals:         0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0
  4301 ;;      Totals:         0       0       0       0       0
  4302 ;;Total ram usage:        0 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_master
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311  0747                     _USART_read:	
  4312                           ;psect for function _USART_read
  4313                           
  4314  0747                     i1l1673:	
  4315                           ;incstack = 0
  4316                           ; Regs used in _USART_read: [wreg]
  4317                           
  4318                           
  4319                           ;USART.c: 32:     return RCREG;
  4320  0747  1283               	bcf	3,5	;RP0=0, select bank0
  4321  0748  1303               	bcf	3,6	;RP1=0, select bank0
  4322  0749  081A               	movf	26,w	;volatile
  4323  074A                     i1l189:
  4324  074A  0008               	return
  4325  074B                     __end_of_USART_read:
  4326  007E                     btemp	set	126	;btemp
  4327  007E                     wtemp0	set	126
  4328                           
  4329                           	psect	idloc
  4330                           
  4331                           ;Config register IDLOC0 @ 0x2000
  4332                           ;	unspecified, using default values
  4333  2000                     	org	8192
  4334  2000  3FFF               	dw	16383
  4335                           
  4336                           ;Config register IDLOC1 @ 0x2001
  4337                           ;	unspecified, using default values
  4338  2001                     	org	8193
  4339  2001  3FFF               	dw	16383
  4340                           
  4341                           ;Config register IDLOC2 @ 0x2002
  4342                           ;	unspecified, using default values
  4343  2002                     	org	8194
  4344  2002  3FFF               	dw	16383
  4345                           
  4346                           ;Config register IDLOC3 @ 0x2003
  4347                           ;	unspecified, using default values
  4348  2003                     	org	8195
  4349  2003  3FFF               	dw	16383
  4350                           
  4351                           	psect	config
  4352                           
  4353                           ;Config register CONFIG1 @ 0x2007
  4354                           ;	Oscillator Selection bits
  4355                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4356                           ;	Watchdog Timer Enable bit
  4357                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4358                           ;	Power-up Timer Enable bit
  4359                           ;	PWRTE = OFF, PWRT disabled
  4360                           ;	RE3/MCLR pin function select bit
  4361                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4362                           ;	Code Protection bit
  4363                           ;	CP = OFF, Program memory code protection is disabled
  4364                           ;	Data Code Protection bit
  4365                           ;	CPD = OFF, Data memory code protection is disabled
  4366                           ;	Brown Out Reset Selection bits
  4367                           ;	BOREN = OFF, BOR disabled
  4368                           ;	Internal External Switchover bit
  4369                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4370                           ;	Fail-Safe Clock Monitor Enabled bit
  4371                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4372                           ;	Low Voltage Programming Enable bit
  4373                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4374                           ;	In-Circuit Debugger Mode bit
  4375                           ;	DEBUG = 0x1, unprogrammed default
  4376  2007                     	org	8199
  4377  2007  20D4               	dw	8404
  4378                           
  4379                           ;Config register CONFIG2 @ 0x2008
  4380                           ;	Brown-out Reset Selection bit
  4381                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  4382                           ;	Flash Program Memory Self Write Enable bits
  4383                           ;	WRT = OFF, Write protection off
  4384  2008                     	org	8200
  4385  2008  3EFF               	dw	16127

Data Sizes:
    Strings     43
    Constant    10
    Data        8
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     34      64
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[20]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK1[20]), frow(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK1[20]), frow(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _master in COMMON

    _master->_read_red

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_USART_set
    _USART_set->___lldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _master in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _master in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _master in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _master in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5143
                                             33 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    2616
                                             14 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1191
                           _Lcd_Init
                          _USART_set
                        _int_osc_MHz
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     434
                                             14 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     456
                                              5 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     725
                                              3 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     155
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _master                                               5     5      0      22
                                              2 COMMON     5     5      0
                         _USART_read
                           _read_red
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _read_red                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USART_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _USART_set
       ___lldiv
     _int_osc_MHz
     _spiInit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _master (ROOT)
   _USART_read
   _read_red
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5E      12        0.0%
ABS                  0      0      5E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Sep 29 23:30:28 2022

                       pc 0002               _SSPSTATbits 0094                        fsr 0004  
     ___wmul@multiplicand 0022                       l102 056D                       l120 06B5  
                     l121 06BB                       l122 06BC                       l130 0701  
                     l123 06C2                       l203 06E3                       l124 06C3  
                     l204 06E8                       l125 06C9                       l133 0722  
                     l142 0496                       l127 06CA                       l119 06B4  
                     l151 06AA                       l145 05E7                       l139 043F  
                     l164 05A9                       l319 0075                       l360 0685  
                     l169 05AA                       l337 014F                       l186 037F  
                     l354 022A                       l630 052C                       l358 066D  
                     l640 0623                       l394 03E7                       l811 0715  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RA3 002B                       _RA4 002C                       _RE0 0048  
                     u710 03C1                       u711 03C0                       u705 03A8  
                     u730 03DF                       u731 03DE                       u715 03BD  
                     u740 0329                       u900 0514                       u725 03D1  
                     u901 0513                       u670 0392                       u750 0342  
                     u671 0391                       u920 0528                       u761 0354  
                     u745 0324                       u921 0527                       u905 0510  
                     u690 03A6                       u762 0355                       u930 05F0  
                     u691 03A5                       u763 035A                       u755 033D  
                     u915 051C                       u931 05EF                       u764 035B  
                     u860 04F1                       u685 0397                       u765 0360  
                     u861 04F0                       u766 0361                       u950 0602  
                     u951 0601                       u880 0503                       u960 060C  
                     u881 0502                       u961 060B                       u945 05F4  
                     u875 04F5                       u980 061F                       u981 061E  
                     u965 0608                       u895 0504                       u975 0613  
                     _hrs 005C                       _req 0077                       _val 0079  
                     _mov 0044                       _lux 0042                       fsr0 0004  
                     indf 0000                      l2101 06CE                      l2111 05AE  
                    l2103 06D7                      l2121 05D1                      l2113 05B8  
                    l2105 06DB                      l2201 005F                      l2123 05D4  
                    l2115 05B9                      l2107 06DD                      l2131 0705  
                    l2203 0065                      l2061 06C0                      l2125 05DA  
                    l2117 05C7                      l2109 06E2                      l2133 0706  
                    l2301 020B                      l2221 00B6                      l2213 007A  
                    l2205 006C                      l2063 06C7                      l2055 06AE  
                    l2071 06F6                      l2127 05DD                      l2119 05CA  
                    l1511 0587                      l1503 0571                      l2151 067B  
                    l2143 065F                      l2135 070C                      l2231 00FC  
                    l2223 00C9                      l2215 008D                      l2207 0071  
                    l2303 0214                      l2057 06B2                      l2073 06FE  
                    l2065 06EC                      l2321 0401                      l2129 05E4  
                    l2081 045F                      l1513 058C                      l1505 0572  
                    l2161 0536                      l2153 0681                      l2145 0663  
                    l2137 0712                      l2241 0115                      l2233 0104  
                    l2305 0226                      l2225 00CD                      l2217 009D  
                    l2209 0076                      l2059 06B9                      l2067 06ED  
                    l2331 042C                      l2323 0406                      l2091 0478  
                    l2083 0465                      l2075 0440                      l1507 0579  
                    l2171 053D                      l2163 0537                      l2147 0667  
                    l2139 0714                      l2251 0133                      l2235 0108  
                    l2219 00A1                      l2069 06F3                      l2333 0431  
                    l2325 040C                      l2317 03EB                      l2341 0697  
                    l2093 047E                      l2085 0466                      l2077 0446  
                    l1509 0580                      l1517 0593                      l2181 0546  
                    l2173 053E                      l2165 053A                      l2157 052D  
                    l2149 0674                      l2261 0166                      l2253 013D  
                    l2237 010C                      l2229 00DD                      l2335 0437  
                    l2319 03F0                      l2327 0415                      l2343 069F  
                    l2095 0484                      l2087 046C                      l2079 0451  
                    l1551 0310                      l2191 0567                      l2183 054B  
                    l2175 053F                      l2167 053B                      l2159 0533  
                    l1631 04F4                      l2271 017F                      l2263 016A  
                    l2255 0143                      l2247 0117                      l2239 0110  
                    l2351 02C1                      l2329 041B                      l2337 0689  
                    l2097 048A                      l2089 0472                      l1481 0392  
                    l1561 0378                      l1553 0316                      l2193 056A  
                    l2185 055A                      l2177 0542                      l2169 053C  
                    l1641 051A                      l1633 04FB                      l1625 04E7  
                    l2281 01A3                      l2273 0185                      l2265 016E  
                    l2257 0149                      l2361 0304                      l2353 02D5  
                    l2345 029F                      l2339 068C                      l2099 0490  
                    l1491 03C1                      l1483 0395                      l1563 037B  
                    l1555 0319                      l2187 0565                      l2179 0545  
                    l1643 051B                      l1635 04FF                      l1627 04EB  
                    l1651 05E8                      l2291 01C7                      l2283 01AA  
                    l2275 018C                      l2267 0174                      l2259 015A  
                    l2363 0309                      l2355 02E5                      l2347 02A4  
                    l2197 0716                      l1493 03CF                      l1485 03A2  
                    l1565 037E                      l1557 0374                      l2189 0566  
                    l1645 0522                      l1637 0503                      l1629 04F1  
                    l1661 0602                      l1653 05F0                      l2285 01AE  
                    l2277 0190                      l2293 01CB                      l2269 017B  
                    l2357 02EF                      l2349 02A9                      l1495 03D0  
                    l1487 03A6                      l1479 0380                      l1559 0375  
                    l1639 0514                      l1647 0528                      l1663 060C  
                    l1655 05F3                      l2295 01D0                      l2287 01BA  
                    l2279 019D                      l2199 005A                      l2359 02F5  
                    l1497 03D9                      l1489 03AF                      l1665 0612  
                    l1657 05FA                      l2297 0200                      l2289 01C0  
                    l2481 00F1                      l1499 03DF                      l2483 059B  
                    l1667 0619                      l1659 05FE                      l2299 0207  
                    l1669 061F                      l2479 0088                      STR_1 0634  
                    STR_2 064B                      u1310 070C                      u1311 070B  
                    u1320 0712                      u1400 010C                      u1305 05BC  
                    u1321 0711                      u1401 010B                      u1250 06B2  
                    u1330 0667                      u1410 0132                      u1251 06B1  
                    u1331 0666                      u1411 0131                      u1260 06B9  
                    u1500 01A3                      u1420 013D                      u1261 06B8  
                    u1501 01A2                      u1421 013C                      u1270 06C0  
                    u1510 01BA                      u1430 0143                      u1271 06BF  
                    u1511 01B9                      u1431 0142                      u1415 012E  
                    u1280 06C7                      u1360 0681                      u1520 01C0  
                    u1440 0149                      u1600 0304                      u1281 06C6  
                    u1361 0680                      u1345 066E                      u1521 01BF  
                    u1441 0148                      u1601 0303                      u1290 06D7  
                    u1530 0214                      u1450 015A                      u1370 0065  
                    u1291 06D6                      u1355 0675                      u1531 0213  
                    u1451 0159                      u1371 0064                      u1540 0226  
                    u1460 016E                      u1380 009D                      u1541 0225  
                    u1461 016D                      u1381 009C                      u1605 0300  
                    u1550 03F0                      u1470 0174                      u1390 00DD  
                    u1551 03EF                      u1471 0173                      u1455 0156  
                    u1391 00DC                      u1480 0185                      u1617 044C  
                    u1481 0184                      u1570 041B                      u1490 019C  
                    u1571 041A                      u1627 045B                      u1491 019B  
                    u1565 03F8                      u1637 05CE                      u1590 06AA  
                    u1647 05E1                      u1591 06A9                      u1657 06FA  
                    u1585 0423                      i1l73 0293                      i1l79 0296  
                    i1l99 04E6         ?_Lcd_Write_String 0070                      _main 029F  
                    _frow 0046                      _mins 005A                      _temp 005E  
                    btemp 007E                      _srow 00A0                      start 000E  
      ??_Lcd_Write_String 0025           __end_of_Lcd_Cmd 0702                     ?_main 0070  
                   _ANSEL 0188           __end_of___lldiv 03E8           __end_of___lwdiv 052D  
                   i1l210 073A                     i1l221 072B                     i1l213 0746  
                   i1l207 0734           __end_of___lwmod 0624                     i1l189 074A  
                   _RCREG 001A                     _SPBRG 0099                     _PORTB 0006  
                   _TRISB 0086                     u79_20 073A                     u79_21 0739  
         int_osc_MHz@freq 0022           __end_of_dpowers 0634           __end_of_isdigit 0716  
                   _setup 052D              ?_int_osc_MHz 0070                     pclath 000A  
         __end_of_spiInit 06E9           __end_of_spiRead 072C                     status 0003  
                   wtemp0 007E           __end_of_sprintf 022B          __end_of_Lcd_Init 0497  
        __end_of_Lcd_Port 06CB               ?_USART_read 0070           __initialization 0011  
            __end_of_main 0310                    ??_main 0041                    ?_setup 0070  
                  _ANSELH 0189                    i1l1703 0742                    i1l1901 0244  
                  i1l1911 0274                    i1l1903 0250                    u122_20 0231  
                  i1l1673 0747                    i1l1681 04A3                    i1l1905 0259  
                  u122_21 0230                    i1l1683 04AE                    i1l1691 04CF  
                  i1l1907 0262                    i1l1915 027D                    i1l1685 04B9  
                  i1l1677 0497                    i1l1597 0734                    i1l2485 0282  
                  i1l1909 026B                    i1l2487 04D8                    i1l1687 04C4  
                  i1l1679 0498                    u123_20 0244                    i1l1697 0723  
                  u123_21 0243                    i1l1699 0728                    i1l1893 022B  
                  i1l1895 0231                    i1l1897 0239                    i1l1899 023E  
               ??_Lcd_Cmd 0021                    _SPBRGH 009A                    _SSPCON 0014  
                  _SSPBUF 0013                    ___wmul 065F                 ??___lldiv 0028  
               ??___lwdiv 0024                 ??___lwmod 002C                    _master 022B  
        __end_of_read_red 04E7         __end_of_USART_set 0380              __pdataCOMMON 0077  
               ??_isdigit 0020                    saved_w 007E          __end_of_spiWrite 0747  
               ??_spiInit 0023                 ??_spiRead 0070                 ??_sprintf 0035  
         Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0023           Lcd_Set_Cursor@y 0028  
         Lcd_Set_Cursor@z 0027   __end_of__initialization 0053         __end_of_Lcd_Clear 0723  
          __pcstackCOMMON 0070              __pidataBANK0 073B             __end_of_setup 056E  
          _Lcd_Set_Cursor 03E8                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
            sprintf@width 003D                   ??_setup 003E                __pbssBANK0 0042  
              __pbssBANK1 00A0                __pmaintext 029F                   ?___wmul 0020  
              __pintentry 0004                   ?_master 0070    __end_of_Lcd_Set_Cursor 0440  
              ??_Lcd_Init 0023                ??_Lcd_Port 0020                   _SSPSTAT 0094  
              __stringtab 0624            _Lcd_Write_Char 05AB                   _Lcd_Cmd 06E9  
               ?_read_red 0070              ??_USART_read 0070                 ?_spiWrite 0070  
                 ___lldiv 0380                   ___lwdiv 04E7                   ___lwmod 05E8  
         ?_Lcd_Set_Cursor 0023                   __ptext1 0057                   __ptext2 0702  
                 __ptext3 065F                   __ptext4 05E8                   __ptext5 04E7  
                 __ptext6 052D                   __ptext7 06CB                   __ptext8 056E  
                 __ptext9 0310                   _dpowers 062A                   _isdigit 0702  
                 _spiInit 06CB                   _spiRead 0723                   _sprintf 0057  
                 clrloop0 072D        __end_of_USART_read 074B    __end_of_Lcd_Write_Char 05E8  
    end_of_initialization 0053                ??_read_red 0070           ___lldiv@divisor 0020  
         ___lldiv@counter 002D                 _RCSTAbits 0018                ??_spiWrite 0070  
               Lcd_Port@a 0020                 _PORTAbits 0005                 _TRISAbits 0085  
               _TRISCbits 0087                 _TRISEbits 0089                 _USART_set 0310  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0028  
       Lcd_Write_String@i 0026                 _TXSTAbits 0098                 _Lcd_Clear 0716  
          _spiReceiveWait 0734            __end_of___wmul 0686          _Lcd_Write_String 0686  
           __pidataCOMMON 074B               _BAUDCTLbits 0187            __end_of_master 029F  
     start_initialization 0011                ?_USART_set 002E         USART_set@baudrate 002E  
  __end_of_spiReceiveWait 073B                ?_Lcd_Clear 0070                  ??___wmul 0024  
             __pdataBANK0 005A           Lcd_Write_Char@a 0024                  ??_master 0072  
         Lcd_Write_Char@y 0023               __pbssCOMMON 0079                 ___latbits 0002  
           __pcstackBANK0 0020              _isdigit$1117 0020             ??_int_osc_MHz 0020  
                ?_Lcd_Cmd 0070               sprintf@flag 003C               sprintf@prec 0039  
        ___lwdiv@dividend 0022           ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0024  
                ?___lldiv 0020                  ?___lwdiv 0020                  ?___lwmod 0028  
               __pstrings 0624                  ?_isdigit 0070               ??_USART_set 0032  
                ?_spiInit 0020                  ?_spiRead 0070          ___lwdiv@quotient 0025  
                ?_sprintf 002E      spiInit@sTransmitEdge 0022         interrupt_function 0004  
          ___wmul@product 0024                 clear_ram0 072C                  _PIE1bits 008C  
     __end_of_int_osc_MHz 05AB        spiInit@sDataSample 0020                  Lcd_Cmd@a 0022  
                _PIR1bits 000C               ??_Lcd_Clear 0023               __stringbase 0629  
       ___wmul@multiplier 0020          ??_Lcd_Write_Char 0021                  _Lcd_Init 0440  
                _Lcd_Port 06AB  __end_of_Lcd_Write_String 06AB        __end_of__stringtab 062A  
              sprintf@val 003A           ___lwdiv@divisor 0020           ___lwdiv@counter 0027  
                __ptext10 0380                  __ptext11 0440                  __ptext20 0723  
                __ptext12 0686                  __ptext21 0734                  __ptext13 05AB  
                __ptext22 0497                  __ptext14 03E8                  __ptext23 0747  
                __ptext15 0716                  __ptext16 06E9                  __ptext17 06AB  
                __ptext18 022B                  __ptext19 0741               _int_osc_MHz 056E  
                _read_red 0497                  _spiWrite 0741              spiInit@sType 0023  
       spiInit@sClockIdle 0021                _INTCONbits 000B                  isdigit@c 0021  
      Lcd_Write_Char@temp 0022                  intlevel1 0000                 sprintf@ap 0038  
               sprintf@sp 003F          ___lwmod@dividend 002A          ___lldiv@dividend 0024  
        ??_spiReceiveWait 0070                 stringcode 0624                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0029                  sprintf@c 0040                  sprintf@f 002E  
        ___lldiv@quotient 0029           ___lwmod@divisor 0028           ___lwmod@counter 002D  
                stringdir 0624                  stringtab 0624                _USART_read 0747  
