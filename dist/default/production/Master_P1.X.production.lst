

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Sep 14 12:44:26 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459                           
   460                           	psect	strings
   461  03AA                     __pstrings:
   462  03AA                     stringtab:
   463  03AA                     __stringtab:
   464  03AA                     stringcode:	
   465                           ;	String table - string pointers are 1 byte each
   466                           
   467  03AA                     stringdir:
   468  03AA  3003               	movlw	high stringdir
   469  03AB  008A               	movwf	10
   470  03AC  0804               	movf	4,w
   471  03AD  0A84               	incf	4,f
   472  03AE  0782               	addwf	2,f
   473  03AF                     __stringbase:
   474  03AF  3400               	retlw	0
   475  03B0                     __end_of__stringtab:
   476  03B0                     _dpowers:
   477  03B0  3401               	retlw	1
   478  03B1  3400               	retlw	0
   479  03B2  340A               	retlw	10
   480  03B3  3400               	retlw	0
   481  03B4  3464               	retlw	100
   482  03B5  3400               	retlw	0
   483  03B6  34E8               	retlw	232
   484  03B7  3403               	retlw	3
   485  03B8  3410               	retlw	16
   486  03B9  3427               	retlw	39
   487  03BA                     __end_of_dpowers:
   488  001A                     _RCREG	set	26
   489  0018                     _RCSTAbits	set	24
   490  000B                     _INTCONbits	set	11
   491  000C                     _PIR1bits	set	12
   492  0029                     _RA1	set	41
   493  0028                     _RA0	set	40
   494  002D                     _RA5	set	45
   495  002C                     _RA4	set	44
   496  002B                     _RA3	set	43
   497  002A                     _RA2	set	42
   498  008C                     _PIE1bits	set	140
   499  0099                     _SPBRG	set	153
   500  009A                     _SPBRGH	set	154
   501  0098                     _TXSTAbits	set	152
   502  008F                     _OSCCONbits	set	143
   503  0086                     _TRISB	set	134
   504  0085                     _TRISA	set	133
   505  0187                     _BAUDCTLbits	set	391
   506  0189                     _ANSELH	set	393
   507  0188                     _ANSEL	set	392
   508  03BA                     STR_1:
   509  03BA  3425               	retlw	37	;'%'
   510  03BB  3464               	retlw	100	;'d'
   511  03BC  3425               	retlw	37	;'%'
   512  03BD  3464               	retlw	100	;'d'
   513  03BE  343A               	retlw	58	;':'
   514  03BF  3425               	retlw	37	;'%'
   515  03C0  3464               	retlw	100	;'d'
   516  03C1  3425               	retlw	37	;'%'
   517  03C2  3464               	retlw	100	;'d'
   518  03C3  3420               	retlw	32	;' '
   519  03C4  3420               	retlw	32	;' '
   520  03C5  3420               	retlw	32	;' '
   521  03C6  3420               	retlw	32	;' '
   522  03C7  344C               	retlw	76	;'L'
   523  03C8  3475               	retlw	117	;'u'
   524  03C9  347A               	retlw	122	;'z'
   525  03CA  343A               	retlw	58	;':'
   526  03CB  3420               	retlw	32	;' '
   527  03CC  3425               	retlw	37	;'%'
   528  03CD  3464               	retlw	100	;'d'
   529  03CE  3400               	retlw	0
   530  03CF                     STR_2:
   531  03CF  344D               	retlw	77	;'M'
   532  03D0  346F               	retlw	111	;'o'
   533  03D1  3476               	retlw	118	;'v'
   534  03D2  343A               	retlw	58	;':'
   535  03D3  3420               	retlw	32	;' '
   536  03D4  3425               	retlw	37	;'%'
   537  03D5  3464               	retlw	100	;'d'
   538  03D6  3420               	retlw	32	;' '
   539  03D7  3420               	retlw	32	;' '
   540  03D8  3454               	retlw	84	;'T'
   541  03D9  3465               	retlw	101	;'e'
   542  03DA  346D               	retlw	109	;'m'
   543  03DB  3470               	retlw	112	;'p'
   544  03DC  343A               	retlw	58	;':'
   545  03DD  3420               	retlw	32	;' '
   546  03DE  3425               	retlw	37	;'%'
   547  03DF  3464               	retlw	100	;'d'
   548  03E0  3400               	retlw	0
   549                           
   550                           	psect	cinit
   551  000F                     start_initialization:	
   552                           ; #config settings
   553                           
   554  000F                     __initialization:
   555                           
   556                           ; Clear objects allocated to COMMON
   557  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   558                           
   559                           ; Clear objects allocated to BANK0
   560  0010  1383               	bcf	3,7	;select IRP bank0
   561  0011  3020               	movlw	low __pbssBANK0
   562  0012  0084               	movwf	4
   563  0013  304A               	movlw	low (__pbssBANK0+42)
   564  0014  120A  118A  24DB  120A  118A  	fcall	clear_ram0
   565  0019                     end_of_initialization:	
   566                           ;End of C runtime variable initialization code
   567                           
   568  0019                     __end_of__initialization:
   569  0019  0183               	clrf	3
   570  001A  120A  118A  29DF   	ljmp	_main	;jump to C main() function
   571                           
   572                           	psect	bssCOMMON
   573  007A                     __pbssCOMMON:
   574  007A                     _val:
   575  007A                     	ds	1
   576                           
   577                           	psect	bssBANK0
   578  0020                     __pbssBANK0:
   579  0020                     _mov:
   580  0020                     	ds	2
   581  0022                     _srow:
   582  0022                     	ds	20
   583  0036                     _frow:
   584  0036                     	ds	20
   585                           
   586                           	psect	clrtext
   587  04DB                     clear_ram0:	
   588                           ;	Called with FSR containing the base address, and
   589                           ;	W with the last address+1
   590                           
   591  04DB  0064               	clrwdt	;clear the watchdog before getting into this loop
   592  04DC                     clrloop0:
   593  04DC  0180               	clrf	0	;clear RAM location pointed to by FSR
   594  04DD  0A84               	incf	4,f	;increment pointer
   595  04DE  0604               	xorwf	4,w	;XOR with final address
   596  04DF  1903               	btfsc	3,2	;have we reached the end yet?
   597  04E0  3400               	retlw	0	;all done for this memory range, return
   598  04E1  0604               	xorwf	4,w	;XOR again to restore value
   599  04E2  2CDC               	goto	clrloop0	;do the next byte
   600                           
   601                           	psect	cstackCOMMON
   602  0070                     __pcstackCOMMON:
   603  0070                     ?_USART_read:
   604  0070                     ??_USART_read:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_setup:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_Lcd_Clear:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_read_red:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_Lcd_Write_String:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_int_osc_MHz:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_Lcd_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_master:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??_master:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_main:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_Lcd_Port:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_Lcd_Cmd:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_Lcd_Write_Char:	
   641                           ; 1 bytes @ 0x0
   642                           
   643                           
   644                           ; 1 bytes @ 0x0
   645  0070                     	ds	3
   646  0073                     ??_read_red:
   647  0073                     ??_int_osc_MHz:	
   648                           ; 1 bytes @ 0x3
   649                           
   650  0073                     ??_Lcd_Port:	
   651                           ; 1 bytes @ 0x3
   652                           
   653  0073                     ??___lldiv:	
   654                           ; 1 bytes @ 0x3
   655                           
   656  0073                     ?___lwdiv:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     Lcd_Port@a:	
   660                           ; 2 bytes @ 0x3
   661                           
   662  0073                     ___lwdiv@divisor:	
   663                           ; 1 bytes @ 0x3
   664                           
   665                           
   666                           ; 2 bytes @ 0x3
   667  0073                     	ds	1
   668  0074                     ??_Lcd_Cmd:
   669  0074                     ??_Lcd_Write_Char:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ___lldiv@quotient:	
   673                           ; 1 bytes @ 0x4
   674                           
   675                           
   676                           ; 4 bytes @ 0x4
   677  0074                     	ds	1
   678  0075                     Lcd_Cmd@a:
   679  0075                     Lcd_Write_Char@temp:	
   680                           ; 1 bytes @ 0x5
   681                           
   682  0075                     int_osc_MHz@freq:	
   683                           ; 1 bytes @ 0x5
   684                           
   685  0075                     ___lwdiv@dividend:	
   686                           ; 1 bytes @ 0x5
   687                           
   688                           
   689                           ; 2 bytes @ 0x5
   690  0075                     	ds	1
   691  0076                     ??_Lcd_Clear:
   692  0076                     ?_Lcd_Set_Cursor:	
   693                           ; 1 bytes @ 0x6
   694                           
   695  0076                     ??_Lcd_Init:	
   696                           ; 1 bytes @ 0x6
   697                           
   698  0076                     Lcd_Set_Cursor@b:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     Lcd_Write_Char@y:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706  0076                     	ds	1
   707  0077                     ??_Lcd_Set_Cursor:
   708  0077                     ??___lwdiv:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     Lcd_Write_Char@a:	
   712                           ; 1 bytes @ 0x7
   713                           
   714                           
   715                           ; 1 bytes @ 0x7
   716  0077                     	ds	1
   717  0078                     ??_Lcd_Write_String:
   718  0078                     ??___lwmod:	
   719                           ; 1 bytes @ 0x8
   720                           
   721  0078                     ___lldiv@counter:	
   722                           ; 1 bytes @ 0x8
   723                           
   724                           
   725                           ; 1 bytes @ 0x8
   726  0078                     	ds	1
   727  0079                     ??_setup:
   728  0079                     ___lwmod@counter:	
   729                           ; 1 bytes @ 0x9
   730                           
   731                           
   732                           ; 1 bytes @ 0x9
   733  0079                     	ds	1
   734                           
   735                           	psect	cstackBANK0
   736  004A                     __pcstackBANK0:
   737  004A                     ?___lldiv:
   738  004A                     Lcd_Set_Cursor@a:	
   739                           ; 4 bytes @ 0x0
   740                           
   741  004A                     ___lwdiv@counter:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  004A                     Lcd_Write_String@i:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  004A                     ___lldiv@divisor:	
   748                           ; 2 bytes @ 0x0
   749                           
   750                           
   751                           ; 4 bytes @ 0x0
   752  004A                     	ds	1
   753  004B                     Lcd_Set_Cursor@z:
   754  004B                     ___lwdiv@quotient:	
   755                           ; 1 bytes @ 0x1
   756                           
   757                           
   758                           ; 2 bytes @ 0x1
   759  004B                     	ds	1
   760  004C                     Lcd_Set_Cursor@y:
   761  004C                     Lcd_Write_String@a:	
   762                           ; 1 bytes @ 0x2
   763                           
   764                           
   765                           ; 1 bytes @ 0x2
   766  004C                     	ds	1
   767  004D                     ?___lwmod:
   768  004D                     Lcd_Set_Cursor@temp:	
   769                           ; 2 bytes @ 0x3
   770                           
   771  004D                     ___lwmod@divisor:	
   772                           ; 1 bytes @ 0x3
   773                           
   774                           
   775                           ; 2 bytes @ 0x3
   776  004D                     	ds	1
   777  004E                     ___lldiv@dividend:
   778                           
   779                           ; 4 bytes @ 0x4
   780  004E                     	ds	1
   781  004F                     ___lwmod@dividend:
   782                           
   783                           ; 2 bytes @ 0x5
   784  004F                     	ds	2
   785  0051                     ?_sprintf:
   786  0051                     sprintf@f:	
   787                           ; 2 bytes @ 0x7
   788                           
   789                           
   790                           ; 1 bytes @ 0x7
   791  0051                     	ds	1
   792  0052                     ?_USART_set:
   793  0052                     USART_set@baudrate:	
   794                           ; 1 bytes @ 0x8
   795                           
   796                           
   797                           ; 4 bytes @ 0x8
   798  0052                     	ds	4
   799  0056                     ??_USART_set:
   800                           
   801                           ; 1 bytes @ 0xC
   802  0056                     	ds	6
   803  005C                     ??_sprintf:
   804                           
   805                           ; 1 bytes @ 0x12
   806  005C                     	ds	3
   807  005F                     sprintf@ap:
   808                           
   809                           ; 1 bytes @ 0x15
   810  005F                     	ds	1
   811  0060                     sprintf@flag:
   812                           
   813                           ; 1 bytes @ 0x16
   814  0060                     	ds	1
   815  0061                     sprintf@prec:
   816                           
   817                           ; 1 bytes @ 0x17
   818  0061                     	ds	1
   819  0062                     sprintf@val:
   820                           
   821                           ; 2 bytes @ 0x18
   822  0062                     	ds	2
   823  0064                     sprintf@sp:
   824                           
   825                           ; 1 bytes @ 0x1A
   826  0064                     	ds	1
   827  0065                     sprintf@c:
   828                           
   829                           ; 1 bytes @ 0x1B
   830  0065                     	ds	1
   831  0066                     ??_main:
   832                           
   833                           ; 1 bytes @ 0x1C
   834  0066                     	ds	1
   835                           
   836                           	psect	maintext
   837  01DF                     __pmaintext:	
   838 ;;
   839 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   840 ;;
   841 ;; *************** function _main *****************
   842 ;; Defined at:
   843 ;;		line 82 in file "main_master_p1.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : B00/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          0       1       0       0       0
   860 ;;      Totals:         0       1       0       0       0
   861 ;;Total ram usage:        1 bytes
   862 ;; Hardware stack levels required when called: 6
   863 ;; This function calls:
   864 ;;		_Lcd_Clear
   865 ;;		_Lcd_Set_Cursor
   866 ;;		_Lcd_Write_String
   867 ;;		_read_red
   868 ;;		_setup
   869 ;;		_sprintf
   870 ;; This function is called by:
   871 ;;		Startup code after reset
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875  01DF                     _main:	
   876                           ;psect for function _main
   877                           
   878  01DF                     l1703:	
   879                           ;incstack = 0
   880                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   881                           
   882                           
   883                           ;main_master_p1.c: 83:     setup();
   884  01DF  120A  118A  2418  120A  118A  	fcall	_setup
   885  01E4                     l1705:
   886                           
   887                           ;main_master_p1.c: 84:     Lcd_Clear();
   888  01E4  120A  118A  24CE  120A  118A  	fcall	_Lcd_Clear
   889  01E9                     l1707:
   890                           
   891                           ;main_master_p1.c: 86:         read_red();
   892  01E9  120A  118A  2484  120A  118A  	fcall	_read_red
   893  01EE                     l1709:
   894                           
   895                           ;main_master_p1.c: 87:         sprintf(frow, "%d%d:%d%d    Luz: %d", 2,3,4,2,95);
   896  01EE  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   897  01EF  1283               	bcf	3,5	;RP0=0, select bank0
   898  01F0  1303               	bcf	3,6	;RP1=0, select bank0
   899  01F1  00E6               	movwf	??_main
   900  01F2  0866               	movf	??_main,w
   901  01F3  00D1               	movwf	sprintf@f
   902  01F4  3002               	movlw	2
   903  01F5  00D2               	movwf	?_sprintf+1
   904  01F6  3000               	movlw	0
   905  01F7  00D3               	movwf	?_sprintf+2
   906  01F8  3003               	movlw	3
   907  01F9  00D4               	movwf	?_sprintf+3
   908  01FA  3000               	movlw	0
   909  01FB  00D5               	movwf	?_sprintf+4
   910  01FC  3004               	movlw	4
   911  01FD  00D6               	movwf	?_sprintf+5
   912  01FE  3000               	movlw	0
   913  01FF  00D7               	movwf	?_sprintf+6
   914  0200  3002               	movlw	2
   915  0201  00D8               	movwf	?_sprintf+7
   916  0202  3000               	movlw	0
   917  0203  00D9               	movwf	?_sprintf+8
   918  0204  305F               	movlw	95
   919  0205  00DA               	movwf	?_sprintf+9
   920  0206  3000               	movlw	0
   921  0207  00DB               	movwf	?_sprintf+10
   922  0208  3036               	movlw	(low (_frow| 0))& (0+255)
   923  0209  120A  118A  201D  120A  118A  	fcall	_sprintf
   924  020E                     l1711:
   925                           
   926                           ;main_master_p1.c: 88:         sprintf(srow, "Mov: %d  Temp: %d",mov,20);
   927  020E  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   928  020F  1283               	bcf	3,5	;RP0=0, select bank0
   929  0210  1303               	bcf	3,6	;RP1=0, select bank0
   930  0211  00E6               	movwf	??_main
   931  0212  0866               	movf	??_main,w
   932  0213  00D1               	movwf	sprintf@f
   933  0214  0821               	movf	_mov+1,w
   934  0215  00D3               	movwf	?_sprintf+2
   935  0216  0820               	movf	_mov,w
   936  0217  00D2               	movwf	?_sprintf+1
   937  0218  3014               	movlw	20
   938  0219  00D4               	movwf	?_sprintf+3
   939  021A  3000               	movlw	0
   940  021B  00D5               	movwf	?_sprintf+4
   941  021C  3022               	movlw	(low (_srow| 0))& (0+255)
   942  021D  120A  118A  201D  120A  118A  	fcall	_sprintf
   943                           
   944                           ;main_master_p1.c: 89:         Lcd_Set_Cursor(1,1);
   945  0222  01F6               	clrf	Lcd_Set_Cursor@b
   946  0223  0AF6               	incf	Lcd_Set_Cursor@b,f
   947  0224  3001               	movlw	1
   948  0225  120A  118A  2242  120A  118A  	fcall	_Lcd_Set_Cursor
   949  022A                     l1713:
   950                           
   951                           ;main_master_p1.c: 90:         Lcd_Write_String(frow);
   952  022A  3036               	movlw	(low (_frow| 0))& (0+255)
   953  022B  120A  118A  243D  120A  118A  	fcall	_Lcd_Write_String
   954  0230                     l1715:
   955                           
   956                           ;main_master_p1.c: 91:         Lcd_Set_Cursor(2,1);
   957  0230  01F6               	clrf	Lcd_Set_Cursor@b
   958  0231  0AF6               	incf	Lcd_Set_Cursor@b,f
   959  0232  3002               	movlw	2
   960  0233  120A  118A  2242  120A  118A  	fcall	_Lcd_Set_Cursor
   961                           
   962                           ;main_master_p1.c: 92:         Lcd_Write_String(srow);
   963  0238  3022               	movlw	(low (_srow| 0))& (0+255)
   964  0239  120A  118A  243D  120A  118A  	fcall	_Lcd_Write_String
   965  023E  29E9               	goto	l1707
   966  023F  120A  118A  280C   	ljmp	start
   967  0242                     __end_of_main:
   968                           
   969                           	psect	text1
   970  001D                     __ptext1:	
   971 ;; *************** function _sprintf *****************
   972 ;; Defined at:
   973 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  sp              1    wreg     PTR unsigned char 
   976 ;;		 -> srow(20), frow(20), 
   977 ;;  f               1    7[BANK0 ] PTR const unsigned char 
   978 ;;		 -> STR_2(18), STR_1(21), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  sp              1   26[BANK0 ] PTR unsigned char 
   981 ;;		 -> srow(20), frow(20), 
   982 ;;  tmpval          4    0        struct .
   983 ;;  val             2   24[BANK0 ] unsigned int 
   984 ;;  cp              2    0        PTR const unsigned char 
   985 ;;  len             2    0        unsigned int 
   986 ;;  c               1   27[BANK0 ] unsigned char 
   987 ;;  prec            1   23[BANK0 ] char 
   988 ;;  flag            1   22[BANK0 ] unsigned char 
   989 ;;  ap              1   21[BANK0 ] PTR void [1]
   990 ;;		 -> ?_sprintf(2), 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  2    7[BANK0 ] int 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0      11       0       0       0
  1001 ;;      Locals:         0       7       0       0       0
  1002 ;;      Temps:          0       3       0       0       0
  1003 ;;      Totals:         0      21       0       0       0
  1004 ;;Total ram usage:       21 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 3
  1007 ;; This function calls:
  1008 ;;		___lwdiv
  1009 ;;		___lwmod
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015  001D                     _sprintf:	
  1016                           ;psect for function _sprintf
  1017                           
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1021                           ;sprintf@sp stored from wreg
  1022  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1023  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1024  001F  00E4               	movwf	sprintf@sp
  1025  0020                     l1641:
  1026                           
  1027                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1028  0020  3052               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1029  0021  00DC               	movwf	??_sprintf
  1030  0022  085C               	movf	??_sprintf,w
  1031  0023  00DF               	movwf	sprintf@ap
  1032                           
  1033                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1034  0024  28F0               	goto	l1693
  1035  0025                     l1643:
  1036                           
  1037                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1038  0025  3025               	movlw	37
  1039  0026  0665               	xorwf	sprintf@c,w
  1040  0027  1903               	btfsc	3,2
  1041  0028  282A               	goto	u1051
  1042  0029  282B               	goto	u1050
  1043  002A                     u1051:
  1044  002A  2837               	goto	l1649
  1045  002B                     u1050:
  1046  002B                     l1645:
  1047                           
  1048                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1049  002B  0865               	movf	sprintf@c,w
  1050  002C  00DC               	movwf	??_sprintf
  1051  002D  0864               	movf	sprintf@sp,w
  1052  002E  0084               	movwf	4
  1053  002F  085C               	movf	??_sprintf,w
  1054  0030  1383               	bcf	3,7	;select IRP bank0
  1055  0031  0080               	movwf	0
  1056  0032                     l1647:
  1057  0032  3001               	movlw	1
  1058  0033  00DC               	movwf	??_sprintf
  1059  0034  085C               	movf	??_sprintf,w
  1060  0035  07E4               	addwf	sprintf@sp,f
  1061                           
  1062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1063  0036  28F0               	goto	l1693
  1064  0037                     l1649:
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1067  0037  01E0               	clrf	sprintf@flag
  1068  0038                     l1653:	
  1069                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1070                           
  1071  0038  3001               	movlw	1
  1072  0039  07D1               	addwf	sprintf@f,f
  1073  003A  30FF               	movlw	-1
  1074  003B  0751               	addwf	sprintf@f,w
  1075  003C  0084               	movwf	4
  1076  003D  120A  118A  23AA  120A  118A  	fcall	stringdir
  1077  0042  00E5               	movwf	sprintf@c
  1078  0043  00DC               	movwf	??_sprintf
  1079  0044  01DD               	clrf	??_sprintf+1
  1080                           
  1081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1082                           ; Switch size 1, requested type "simple"
  1083                           ; Number of cases is 1, Range of values is 0 to 0
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte            4     3 (average)
  1087                           ; direct_byte           11     8 (fixed)
  1088                           ; jumptable            260     6 (fixed)
  1089                           ;	Chosen strategy is simple_byte
  1090  0045  085D               	movf	??_sprintf+1,w
  1091  0046  3A00               	xorlw	0	; case 0
  1092  0047  1903               	skipnz
  1093  0048  284A               	goto	l1777
  1094  0049  28F0               	goto	l1693
  1095  004A                     l1777:
  1096                           
  1097                           ; Switch size 1, requested type "simple"
  1098                           ; Number of cases is 3, Range of values is 0 to 105
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte           10     6 (average)
  1102                           ; jumptable            260     6 (fixed)
  1103                           ;	Chosen strategy is simple_byte
  1104  004A  085C               	movf	??_sprintf,w
  1105  004B  3A00               	xorlw	0	; case 0
  1106  004C  1903               	skipnz
  1107  004D  2902               	goto	l1695
  1108  004E  3A64               	xorlw	100	; case 100
  1109  004F  1903               	skipnz
  1110  0050  2855               	goto	l1655
  1111  0051  3A0D               	xorlw	13	; case 105
  1112  0052  1903               	skipnz
  1113  0053  2855               	goto	l1655
  1114  0054  28F0               	goto	l1693
  1115  0055                     l1655:
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1118  0055  085F               	movf	sprintf@ap,w
  1119  0056  0084               	movwf	4
  1120  0057  1383               	bcf	3,7	;select IRP bank0
  1121  0058  0800               	movf	0,w
  1122  0059  00E2               	movwf	sprintf@val
  1123  005A  0A84               	incf	4,f
  1124  005B  0800               	movf	0,w
  1125  005C  00E3               	movwf	sprintf@val+1
  1126  005D                     l1657:
  1127  005D  3002               	movlw	2
  1128  005E  00DC               	movwf	??_sprintf
  1129  005F  085C               	movf	??_sprintf,w
  1130  0060  07DF               	addwf	sprintf@ap,f
  1131  0061                     l1659:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1134  0061  1FE3               	btfss	sprintf@val+1,7
  1135  0062  2864               	goto	u1061
  1136  0063  2865               	goto	u1060
  1137  0064                     u1061:
  1138  0064  286E               	goto	l1665
  1139  0065                     u1060:
  1140  0065                     l1661:
  1141                           
  1142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1143  0065  3003               	movlw	3
  1144  0066  00DC               	movwf	??_sprintf
  1145  0067  085C               	movf	??_sprintf,w
  1146  0068  04E0               	iorwf	sprintf@flag,f
  1147  0069                     l1663:
  1148                           
  1149                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1150  0069  09E2               	comf	sprintf@val,f
  1151  006A  09E3               	comf	sprintf@val+1,f
  1152  006B  0AE2               	incf	sprintf@val,f
  1153  006C  1903               	skipnz
  1154  006D  0AE3               	incf	sprintf@val+1,f
  1155  006E                     l1665:
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1158  006E  01E5               	clrf	sprintf@c
  1159  006F  0AE5               	incf	sprintf@c,f
  1160  0070                     l1671:
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1163  0070  0865               	movf	sprintf@c,w
  1164  0071  00DC               	movwf	??_sprintf
  1165  0072  075C               	addwf	??_sprintf,w
  1166  0073  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1167  0074  0084               	movwf	4
  1168  0075  120A  118A  23AA  120A  118A  	fcall	stringdir
  1169  007A  00DD               	movwf	??_sprintf+1
  1170  007B  120A  118A  23AA  120A  118A  	fcall	stringdir
  1171  0080  00DE               	movwf	??_sprintf+2
  1172  0081  085E               	movf	??_sprintf+2,w
  1173  0082  0263               	subwf	sprintf@val+1,w
  1174  0083  1D03               	skipz
  1175  0084  2887               	goto	u1075
  1176  0085  085D               	movf	??_sprintf+1,w
  1177  0086  0262               	subwf	sprintf@val,w
  1178  0087                     u1075:
  1179  0087  1803               	skipnc
  1180  0088  288A               	goto	u1071
  1181  0089  288B               	goto	u1070
  1182  008A                     u1071:
  1183  008A  288C               	goto	l1675
  1184  008B                     u1070:
  1185  008B  2896               	goto	l1677
  1186  008C                     l1675:
  1187  008C  3001               	movlw	1
  1188  008D  00DC               	movwf	??_sprintf
  1189  008E  085C               	movf	??_sprintf,w
  1190  008F  07E5               	addwf	sprintf@c,f
  1191  0090  3005               	movlw	5
  1192  0091  0665               	xorwf	sprintf@c,w
  1193  0092  1D03               	btfss	3,2
  1194  0093  2895               	goto	u1081
  1195  0094  2896               	goto	u1080
  1196  0095                     u1081:
  1197  0095  2870               	goto	l1671
  1198  0096                     u1080:
  1199  0096                     l1677:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1202  0096  0860               	movf	sprintf@flag,w
  1203  0097  3903               	andlw	3
  1204  0098  1903               	btfsc	3,2
  1205  0099  289B               	goto	u1091
  1206  009A  289C               	goto	u1090
  1207  009B                     u1091:
  1208  009B  28A7               	goto	l1683
  1209  009C                     u1090:
  1210  009C                     l1679:
  1211                           
  1212                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1213  009C  302D               	movlw	45
  1214  009D  00DC               	movwf	??_sprintf
  1215  009E  0864               	movf	sprintf@sp,w
  1216  009F  0084               	movwf	4
  1217  00A0  085C               	movf	??_sprintf,w
  1218  00A1  1383               	bcf	3,7	;select IRP bank0
  1219  00A2  0080               	movwf	0
  1220  00A3                     l1681:
  1221  00A3  3001               	movlw	1
  1222  00A4  00DC               	movwf	??_sprintf
  1223  00A5  085C               	movf	??_sprintf,w
  1224  00A6  07E4               	addwf	sprintf@sp,f
  1225  00A7                     l1683:
  1226                           
  1227                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1228  00A7  0865               	movf	sprintf@c,w
  1229  00A8  00DC               	movwf	??_sprintf
  1230  00A9  085C               	movf	??_sprintf,w
  1231  00AA  00E1               	movwf	sprintf@prec
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1234  00AB  28E7               	goto	l1691
  1235  00AC                     l1685:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1238  00AC  300A               	movlw	10
  1239  00AD  00CD               	movwf	___lwmod@divisor
  1240  00AE  3000               	movlw	0
  1241  00AF  00CE               	movwf	___lwmod@divisor+1
  1242  00B0  0861               	movf	sprintf@prec,w
  1243  00B1  00DC               	movwf	??_sprintf
  1244  00B2  075C               	addwf	??_sprintf,w
  1245  00B3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1246  00B4  0084               	movwf	4
  1247  00B5  120A  118A  23AA  120A  118A  	fcall	stringdir
  1248  00BA  00F3               	movwf	___lwdiv@divisor
  1249  00BB  120A  118A  23AA  120A  118A  	fcall	stringdir
  1250  00C0  00F4               	movwf	___lwdiv@divisor+1
  1251  00C1  0863               	movf	sprintf@val+1,w
  1252  00C2  00F6               	movwf	___lwdiv@dividend+1
  1253  00C3  0862               	movf	sprintf@val,w
  1254  00C4  00F5               	movwf	___lwdiv@dividend
  1255  00C5  120A  118A  22ED  120A  118A  	fcall	___lwdiv
  1256  00CA  0874               	movf	?___lwdiv+1,w
  1257  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1258  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1259  00CD  00D0               	movwf	___lwmod@dividend+1
  1260  00CE  0873               	movf	?___lwdiv,w
  1261  00CF  00CF               	movwf	___lwmod@dividend
  1262  00D0  120A  118A  2333  120A  118A  	fcall	___lwmod
  1263  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1264  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1265  00D7  084D               	movf	?___lwmod,w
  1266  00D8  3E30               	addlw	48
  1267  00D9  00DD               	movwf	??_sprintf+1
  1268  00DA  085D               	movf	??_sprintf+1,w
  1269  00DB  00E5               	movwf	sprintf@c
  1270  00DC                     l1687:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1273  00DC  0865               	movf	sprintf@c,w
  1274  00DD  00DC               	movwf	??_sprintf
  1275  00DE  0864               	movf	sprintf@sp,w
  1276  00DF  0084               	movwf	4
  1277  00E0  085C               	movf	??_sprintf,w
  1278  00E1  1383               	bcf	3,7	;select IRP bank0
  1279  00E2  0080               	movwf	0
  1280  00E3                     l1689:
  1281  00E3  3001               	movlw	1
  1282  00E4  00DC               	movwf	??_sprintf
  1283  00E5  085C               	movf	??_sprintf,w
  1284  00E6  07E4               	addwf	sprintf@sp,f
  1285  00E7                     l1691:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1288  00E7  30FF               	movlw	255
  1289  00E8  00DC               	movwf	??_sprintf
  1290  00E9  085C               	movf	??_sprintf,w
  1291  00EA  07E1               	addwf	sprintf@prec,f
  1292  00EB  0A61               	incf	sprintf@prec,w
  1293  00EC  1D03               	btfss	3,2
  1294  00ED  28EF               	goto	u1101
  1295  00EE  28F0               	goto	u1100
  1296  00EF                     u1101:
  1297  00EF  28AC               	goto	l1685
  1298  00F0                     u1100:
  1299  00F0                     l1693:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1302  00F0  3001               	movlw	1
  1303  00F1  07D1               	addwf	sprintf@f,f
  1304  00F2  30FF               	movlw	-1
  1305  00F3  0751               	addwf	sprintf@f,w
  1306  00F4  0084               	movwf	4
  1307  00F5  120A  118A  23AA  120A  118A  	fcall	stringdir
  1308  00FA  00DC               	movwf	??_sprintf
  1309  00FB  085C               	movf	??_sprintf,w
  1310  00FC  00E5               	movwf	sprintf@c
  1311  00FD  0865               	movf	sprintf@c,w
  1312  00FE  1D03               	btfss	3,2
  1313  00FF  2901               	goto	u1111
  1314  0100  2902               	goto	u1110
  1315  0101                     u1111:
  1316  0101  2825               	goto	l1643
  1317  0102                     u1110:
  1318  0102                     l1695:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1321  0102  0864               	movf	sprintf@sp,w
  1322  0103  0084               	movwf	4
  1323  0104  1383               	bcf	3,7	;select IRP bank0
  1324  0105  0180               	clrf	0
  1325  0106                     l261:
  1326  0106  0008               	return
  1327  0107                     __end_of_sprintf:
  1328                           
  1329                           	psect	text2
  1330  0333                     __ptext2:	
  1331 ;; *************** function ___lwmod *****************
  1332 ;; Defined at:
  1333 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  divisor         2    3[BANK0 ] unsigned int 
  1336 ;;  dividend        2    5[BANK0 ] unsigned int 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  counter         1    9[COMMON] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  2    3[BANK0 ] unsigned int 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       4       0       0       0
  1349 ;;      Locals:         1       0       0       0       0
  1350 ;;      Temps:          1       0       0       0       0
  1351 ;;      Totals:         2       4       0       0       0
  1352 ;;Total ram usage:        6 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 2
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_sprintf
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362  0333                     ___lwmod:	
  1363                           ;psect for function ___lwmod
  1364                           
  1365  0333                     l1599:	
  1366                           ;incstack = 0
  1367                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1368                           
  1369  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0335  084D               	movf	___lwmod@divisor,w
  1372  0336  044E               	iorwf	___lwmod@divisor+1,w
  1373  0337  1903               	btfsc	3,2
  1374  0338  2B3A               	goto	u991
  1375  0339  2B3B               	goto	u990
  1376  033A                     u991:
  1377  033A  2B6A               	goto	l1617
  1378  033B                     u990:
  1379  033B                     l1601:
  1380  033B  01F9               	clrf	___lwmod@counter
  1381  033C  0AF9               	incf	___lwmod@counter,f
  1382  033D  2B49               	goto	l1607
  1383  033E                     l1603:
  1384  033E  3001               	movlw	1
  1385  033F                     u1005:
  1386  033F  1003               	clrc
  1387  0340  0DCD               	rlf	___lwmod@divisor,f
  1388  0341  0DCE               	rlf	___lwmod@divisor+1,f
  1389  0342  3EFF               	addlw	-1
  1390  0343  1D03               	skipz
  1391  0344  2B3F               	goto	u1005
  1392  0345                     l1605:
  1393  0345  3001               	movlw	1
  1394  0346  00F8               	movwf	??___lwmod
  1395  0347  0878               	movf	??___lwmod,w
  1396  0348  07F9               	addwf	___lwmod@counter,f
  1397  0349                     l1607:
  1398  0349  1FCE               	btfss	___lwmod@divisor+1,7
  1399  034A  2B4C               	goto	u1011
  1400  034B  2B4D               	goto	u1010
  1401  034C                     u1011:
  1402  034C  2B3E               	goto	l1603
  1403  034D                     u1010:
  1404  034D                     l1609:
  1405  034D  084E               	movf	___lwmod@divisor+1,w
  1406  034E  0250               	subwf	___lwmod@dividend+1,w
  1407  034F  1D03               	skipz
  1408  0350  2B53               	goto	u1025
  1409  0351  084D               	movf	___lwmod@divisor,w
  1410  0352  024F               	subwf	___lwmod@dividend,w
  1411  0353                     u1025:
  1412  0353  1C03               	skipc
  1413  0354  2B56               	goto	u1021
  1414  0355  2B57               	goto	u1020
  1415  0356                     u1021:
  1416  0356  2B5D               	goto	l1613
  1417  0357                     u1020:
  1418  0357                     l1611:
  1419  0357  084D               	movf	___lwmod@divisor,w
  1420  0358  02CF               	subwf	___lwmod@dividend,f
  1421  0359  084E               	movf	___lwmod@divisor+1,w
  1422  035A  1C03               	skipc
  1423  035B  03D0               	decf	___lwmod@dividend+1,f
  1424  035C  02D0               	subwf	___lwmod@dividend+1,f
  1425  035D                     l1613:
  1426  035D  3001               	movlw	1
  1427  035E                     u1035:
  1428  035E  1003               	clrc
  1429  035F  0CCE               	rrf	___lwmod@divisor+1,f
  1430  0360  0CCD               	rrf	___lwmod@divisor,f
  1431  0361  3EFF               	addlw	-1
  1432  0362  1D03               	skipz
  1433  0363  2B5E               	goto	u1035
  1434  0364                     l1615:
  1435  0364  3001               	movlw	1
  1436  0365  02F9               	subwf	___lwmod@counter,f
  1437  0366  1D03               	btfss	3,2
  1438  0367  2B69               	goto	u1041
  1439  0368  2B6A               	goto	u1040
  1440  0369                     u1041:
  1441  0369  2B4D               	goto	l1609
  1442  036A                     u1040:
  1443  036A                     l1617:
  1444  036A  0850               	movf	___lwmod@dividend+1,w
  1445  036B  00CE               	movwf	?___lwmod+1
  1446  036C  084F               	movf	___lwmod@dividend,w
  1447  036D  00CD               	movwf	?___lwmod
  1448  036E                     l547:
  1449  036E  0008               	return
  1450  036F                     __end_of___lwmod:
  1451                           
  1452                           	psect	text3
  1453  02ED                     __ptext3:	
  1454 ;; *************** function ___lwdiv *****************
  1455 ;; Defined at:
  1456 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  divisor         2    3[COMMON] unsigned int 
  1459 ;;  dividend        2    5[COMMON] unsigned int 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  quotient        2    1[BANK0 ] unsigned int 
  1462 ;;  counter         1    0[BANK0 ] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  2    3[COMMON] unsigned int 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         4       0       0       0       0
  1473 ;;      Locals:         0       3       0       0       0
  1474 ;;      Temps:          1       0       0       0       0
  1475 ;;      Totals:         5       3       0       0       0
  1476 ;;Total ram usage:        8 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 2
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_sprintf
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486  02ED                     ___lwdiv:	
  1487                           ;psect for function ___lwdiv
  1488                           
  1489  02ED                     l1573:	
  1490                           ;incstack = 0
  1491                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1492                           
  1493  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1494  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1495  02EF  01CB               	clrf	___lwdiv@quotient
  1496  02F0  01CC               	clrf	___lwdiv@quotient+1
  1497  02F1                     l1575:
  1498  02F1  0873               	movf	___lwdiv@divisor,w
  1499  02F2  0474               	iorwf	___lwdiv@divisor+1,w
  1500  02F3  1903               	btfsc	3,2
  1501  02F4  2AF6               	goto	u921
  1502  02F5  2AF7               	goto	u920
  1503  02F6                     u921:
  1504  02F6  2B2E               	goto	l1595
  1505  02F7                     u920:
  1506  02F7                     l1577:
  1507  02F7  01CA               	clrf	___lwdiv@counter
  1508  02F8  0ACA               	incf	___lwdiv@counter,f
  1509  02F9  2B05               	goto	l1583
  1510  02FA                     l1579:
  1511  02FA  3001               	movlw	1
  1512  02FB                     u935:
  1513  02FB  1003               	clrc
  1514  02FC  0DF3               	rlf	___lwdiv@divisor,f
  1515  02FD  0DF4               	rlf	___lwdiv@divisor+1,f
  1516  02FE  3EFF               	addlw	-1
  1517  02FF  1D03               	skipz
  1518  0300  2AFB               	goto	u935
  1519  0301                     l1581:
  1520  0301  3001               	movlw	1
  1521  0302  00F7               	movwf	??___lwdiv
  1522  0303  0877               	movf	??___lwdiv,w
  1523  0304  07CA               	addwf	___lwdiv@counter,f
  1524  0305                     l1583:
  1525  0305  1FF4               	btfss	___lwdiv@divisor+1,7
  1526  0306  2B08               	goto	u941
  1527  0307  2B09               	goto	u940
  1528  0308                     u941:
  1529  0308  2AFA               	goto	l1579
  1530  0309                     u940:
  1531  0309                     l1585:
  1532  0309  3001               	movlw	1
  1533  030A                     u955:
  1534  030A  1003               	clrc
  1535  030B  0DCB               	rlf	___lwdiv@quotient,f
  1536  030C  0DCC               	rlf	___lwdiv@quotient+1,f
  1537  030D  3EFF               	addlw	-1
  1538  030E  1D03               	skipz
  1539  030F  2B0A               	goto	u955
  1540  0310  0874               	movf	___lwdiv@divisor+1,w
  1541  0311  0276               	subwf	___lwdiv@dividend+1,w
  1542  0312  1D03               	skipz
  1543  0313  2B16               	goto	u965
  1544  0314  0873               	movf	___lwdiv@divisor,w
  1545  0315  0275               	subwf	___lwdiv@dividend,w
  1546  0316                     u965:
  1547  0316  1C03               	skipc
  1548  0317  2B19               	goto	u961
  1549  0318  2B1A               	goto	u960
  1550  0319                     u961:
  1551  0319  2B21               	goto	l1591
  1552  031A                     u960:
  1553  031A                     l1587:
  1554  031A  0873               	movf	___lwdiv@divisor,w
  1555  031B  02F5               	subwf	___lwdiv@dividend,f
  1556  031C  0874               	movf	___lwdiv@divisor+1,w
  1557  031D  1C03               	skipc
  1558  031E  03F6               	decf	___lwdiv@dividend+1,f
  1559  031F  02F6               	subwf	___lwdiv@dividend+1,f
  1560  0320                     l1589:
  1561  0320  144B               	bsf	___lwdiv@quotient,0
  1562  0321                     l1591:
  1563  0321  3001               	movlw	1
  1564  0322                     u975:
  1565  0322  1003               	clrc
  1566  0323  0CF4               	rrf	___lwdiv@divisor+1,f
  1567  0324  0CF3               	rrf	___lwdiv@divisor,f
  1568  0325  3EFF               	addlw	-1
  1569  0326  1D03               	skipz
  1570  0327  2B22               	goto	u975
  1571  0328                     l1593:
  1572  0328  3001               	movlw	1
  1573  0329  02CA               	subwf	___lwdiv@counter,f
  1574  032A  1D03               	btfss	3,2
  1575  032B  2B2D               	goto	u981
  1576  032C  2B2E               	goto	u980
  1577  032D                     u981:
  1578  032D  2B09               	goto	l1585
  1579  032E                     u980:
  1580  032E                     l1595:
  1581  032E  084C               	movf	___lwdiv@quotient+1,w
  1582  032F  00F4               	movwf	?___lwdiv+1
  1583  0330  084B               	movf	___lwdiv@quotient,w
  1584  0331  00F3               	movwf	?___lwdiv
  1585  0332                     l537:
  1586  0332  0008               	return
  1587  0333                     __end_of___lwdiv:
  1588                           
  1589                           	psect	text4
  1590  0418                     __ptext4:	
  1591 ;; *************** function _setup *****************
  1592 ;; Defined at:
  1593 ;;		line 114 in file "main_master_p1.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 5
  1614 ;; This function calls:
  1615 ;;		_Lcd_Init
  1616 ;;		_USART_set
  1617 ;;		_int_osc_MHz
  1618 ;; This function is called by:
  1619 ;;		_main
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623  0418                     _setup:	
  1624                           ;psect for function _setup
  1625                           
  1626  0418                     l1621:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1629                           
  1630                           
  1631                           ;main_master_p1.c: 115:     int_osc_MHz(1);
  1632  0418  3001               	movlw	1
  1633  0419  120A  118A  236F  120A  118A  	fcall	_int_osc_MHz
  1634  041E                     l1623:
  1635                           
  1636                           ;main_master_p1.c: 118:     ANSEL = 0;
  1637  041E  1683               	bsf	3,5	;RP0=1, select bank3
  1638  041F  1703               	bsf	3,6	;RP1=1, select bank3
  1639  0420  0188               	clrf	8	;volatile
  1640  0421                     l1625:
  1641                           
  1642                           ;main_master_p1.c: 119:     ANSELH = 0;
  1643  0421  0189               	clrf	9	;volatile
  1644  0422                     l1627:
  1645                           
  1646                           ;main_master_p1.c: 121:     TRISA = 0;
  1647  0422  1683               	bsf	3,5	;RP0=1, select bank1
  1648  0423  1303               	bcf	3,6	;RP1=0, select bank1
  1649  0424  0185               	clrf	5	;volatile
  1650  0425                     l1629:
  1651                           
  1652                           ;main_master_p1.c: 122:     TRISB = 0;
  1653  0425  0186               	clrf	6	;volatile
  1654  0426                     l1631:
  1655                           
  1656                           ;main_master_p1.c: 124:     Lcd_Init();
  1657  0426  120A  118A  229A  120A  118A  	fcall	_Lcd_Init
  1658  042B                     l1633:
  1659                           
  1660                           ;main_master_p1.c: 125:     USART_set(9600);
  1661  042B  3000               	movlw	0
  1662  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1663  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1664  042E  00D5               	movwf	USART_set@baudrate+3
  1665  042F  3000               	movlw	0
  1666  0430  00D4               	movwf	USART_set@baudrate+2
  1667  0431  3025               	movlw	37
  1668  0432  00D3               	movwf	USART_set@baudrate+1
  1669  0433  3080               	movlw	128
  1670  0434  00D2               	movwf	USART_set@baudrate
  1671  0435  120A  118A  2107  120A  118A  	fcall	_USART_set
  1672  043A                     l1635:
  1673                           
  1674                           ;main_master_p1.c: 128:     INTCONbits.GIE = 1;
  1675  043A  178B               	bsf	11,7	;volatile
  1676  043B                     l1637:
  1677                           
  1678                           ;main_master_p1.c: 129:     INTCONbits.PEIE = 1;
  1679  043B  170B               	bsf	11,6	;volatile
  1680  043C                     l64:
  1681  043C  0008               	return
  1682  043D                     __end_of_setup:
  1683                           
  1684                           	psect	text5
  1685  036F                     __ptext5:	
  1686 ;; *************** function _int_osc_MHz *****************
  1687 ;; Defined at:
  1688 ;;		line 13 in file "osc.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  freq            1    wreg     unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  freq            1    5[COMMON] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         1       0       0       0       0
  1704 ;;      Temps:          2       0       0       0       0
  1705 ;;      Totals:         3       0       0       0       0
  1706 ;;Total ram usage:        3 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 2
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_setup
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716  036F                     _int_osc_MHz:	
  1717                           ;psect for function _int_osc_MHz
  1718                           
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  1722                           ;int_osc_MHz@freq stored from wreg
  1723  036F  00F5               	movwf	int_osc_MHz@freq
  1724  0370                     l1201:
  1725                           
  1726                           ;osc.c: 14:     switch(freq){
  1727  0370  2B92               	goto	l1215
  1728  0371                     l1203:
  1729                           
  1730                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  1731  0371  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0372  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0373  080F               	movf	15,w	;volatile
  1734  0374  398F               	andlw	-113
  1735  0375  3840               	iorlw	64
  1736  0376  008F               	movwf	15	;volatile
  1737                           
  1738                           ;osc.c: 17:             break;
  1739  0377  2BA8               	goto	l126
  1740  0378                     l1205:
  1741                           
  1742                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  1743  0378  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0379  1303               	bcf	3,6	;RP1=0, select bank1
  1745  037A  080F               	movf	15,w	;volatile
  1746  037B  398F               	andlw	-113
  1747  037C  3850               	iorlw	80
  1748  037D  008F               	movwf	15	;volatile
  1749                           
  1750                           ;osc.c: 20:             break;
  1751  037E  2BA8               	goto	l126
  1752  037F                     l1207:
  1753                           
  1754                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  1755  037F  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0380  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0381  080F               	movf	15,w	;volatile
  1758  0382  398F               	andlw	-113
  1759  0383  3860               	iorlw	96
  1760  0384  008F               	movwf	15	;volatile
  1761                           
  1762                           ;osc.c: 23:             break;
  1763  0385  2BA8               	goto	l126
  1764  0386                     l1209:
  1765                           
  1766                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  1767  0386  3070               	movlw	112
  1768  0387  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0388  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0389  048F               	iorwf	15,f	;volatile
  1771                           
  1772                           ;osc.c: 26:             break;
  1773  038A  2BA8               	goto	l126
  1774  038B                     l1211:
  1775                           
  1776                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  1777  038B  1683               	bsf	3,5	;RP0=1, select bank1
  1778  038C  1303               	bcf	3,6	;RP1=0, select bank1
  1779  038D  080F               	movf	15,w	;volatile
  1780  038E  398F               	andlw	-113
  1781  038F  3860               	iorlw	96
  1782  0390  008F               	movwf	15	;volatile
  1783                           
  1784                           ;osc.c: 29:             break;
  1785  0391  2BA8               	goto	l126
  1786  0392                     l1215:
  1787  0392  0875               	movf	int_osc_MHz@freq,w
  1788  0393  00F3               	movwf	??_int_osc_MHz
  1789  0394  01F4               	clrf	??_int_osc_MHz+1
  1790                           
  1791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 1, Range of values is 0 to 0
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte            4     3 (average)
  1797                           ; direct_byte           11     8 (fixed)
  1798                           ; jumptable            260     6 (fixed)
  1799                           ;	Chosen strategy is simple_byte
  1800  0395  0874               	movf	??_int_osc_MHz+1,w
  1801  0396  3A00               	xorlw	0	; case 0
  1802  0397  1903               	skipnz
  1803  0398  2B9A               	goto	l1779
  1804  0399  2B8B               	goto	l1211
  1805  039A                     l1779:
  1806                           
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 4, Range of values is 1 to 8
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte           13     7 (average)
  1812                           ; direct_byte           35    11 (fixed)
  1813                           ; jumptable            263     9 (fixed)
  1814                           ;	Chosen strategy is simple_byte
  1815  039A  0873               	movf	??_int_osc_MHz,w
  1816  039B  3A01               	xorlw	1	; case 1
  1817  039C  1903               	skipnz
  1818  039D  2B71               	goto	l1203
  1819  039E  3A03               	xorlw	3	; case 2
  1820  039F  1903               	skipnz
  1821  03A0  2B78               	goto	l1205
  1822  03A1  3A06               	xorlw	6	; case 4
  1823  03A2  1903               	skipnz
  1824  03A3  2B7F               	goto	l1207
  1825  03A4  3A0C               	xorlw	12	; case 8
  1826  03A5  1903               	skipnz
  1827  03A6  2B86               	goto	l1209
  1828  03A7  2B8B               	goto	l1211
  1829  03A8                     l126:
  1830                           
  1831                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  1832  03A8  140F               	bsf	15,0	;volatile
  1833  03A9                     l131:
  1834  03A9  0008               	return
  1835  03AA                     __end_of_int_osc_MHz:
  1836                           
  1837                           	psect	text6
  1838  0107                     __ptext6:	
  1839 ;; *************** function _USART_set *****************
  1840 ;; Defined at:
  1841 ;;		line 12 in file "USART.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  baudrate        4    8[BANK0 ] const unsigned long 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       4       0       0       0
  1856 ;;      Locals:         0       0       0       0       0
  1857 ;;      Temps:          0      12       0       0       0
  1858 ;;      Totals:         0      16       0       0       0
  1859 ;;Total ram usage:       16 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 3
  1862 ;; This function calls:
  1863 ;;		___lldiv
  1864 ;; This function is called by:
  1865 ;;		_setup
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869  0107                     _USART_set:	
  1870                           ;psect for function _USART_set
  1871                           
  1872  0107                     l1557:	
  1873                           ;incstack = 0
  1874                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  1875                           
  1876                           
  1877                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          5:     TXSTAbits.BRGH = 1;
  1878  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1879  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1880  0109  1518               	bsf	24,2	;volatile
  1881                           
  1882                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  1883  010A  1683               	bsf	3,5	;RP0=1, select bank3
  1884  010B  1703               	bsf	3,6	;RP1=1, select bank3
  1885  010C  1587               	bsf	7,3	;volatile
  1886  010D                     l1559:
  1887                           
  1888                           ;USART.c: 17:     SPBRGH = 0;
  1889  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1890  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1891  010F  019A               	clrf	26	;volatile
  1892  0110                     l1561:
  1893                           
  1894                           ;USART.c: 18:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  1895  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0112  0852               	movf	USART_set@baudrate,w
  1898  0113  00D6               	movwf	??_USART_set
  1899  0114  0853               	movf	USART_set@baudrate+1,w
  1900  0115  00D7               	movwf	??_USART_set+1
  1901  0116  0854               	movf	USART_set@baudrate+2,w
  1902  0117  00D8               	movwf	??_USART_set+2
  1903  0118  0855               	movf	USART_set@baudrate+3,w
  1904  0119  00D9               	movwf	??_USART_set+3
  1905  011A  3002               	movlw	2
  1906  011B                     u895:
  1907  011B  1003               	clrc
  1908  011C  0DD6               	rlf	??_USART_set,f
  1909  011D  0DD7               	rlf	??_USART_set+1,f
  1910  011E  0DD8               	rlf	??_USART_set+2,f
  1911  011F  0DD9               	rlf	??_USART_set+3,f
  1912  0120                     u890:
  1913  0120  3EFF               	addlw	-1
  1914  0121  1D03               	skipz
  1915  0122  291B               	goto	u895
  1916  0123  0859               	movf	??_USART_set+3,w
  1917  0124  00CD               	movwf	___lldiv@divisor+3
  1918  0125  0858               	movf	??_USART_set+2,w
  1919  0126  00CC               	movwf	___lldiv@divisor+2
  1920  0127  0857               	movf	??_USART_set+1,w
  1921  0128  00CB               	movwf	___lldiv@divisor+1
  1922  0129  0856               	movf	??_USART_set,w
  1923  012A  00CA               	movwf	___lldiv@divisor
  1924  012B  0852               	movf	USART_set@baudrate,w
  1925  012C  00DA               	movwf	??_USART_set+4
  1926  012D  0853               	movf	USART_set@baudrate+1,w
  1927  012E  00DB               	movwf	??_USART_set+5
  1928  012F  0854               	movf	USART_set@baudrate+2,w
  1929  0130  00DC               	movwf	??_USART_set+6
  1930  0131  0855               	movf	USART_set@baudrate+3,w
  1931  0132  00DD               	movwf	??_USART_set+7
  1932  0133  3002               	movlw	2
  1933  0134                     u905:
  1934  0134  1003               	clrc
  1935  0135  0DDA               	rlf	??_USART_set+4,f
  1936  0136  0DDB               	rlf	??_USART_set+5,f
  1937  0137  0DDC               	rlf	??_USART_set+6,f
  1938  0138  0DDD               	rlf	??_USART_set+7,f
  1939  0139                     u900:
  1940  0139  3EFF               	addlw	-1
  1941  013A  1D03               	skipz
  1942  013B  2934               	goto	u905
  1943  013C  3040               	movlw	64
  1944  013D  00DE               	movwf	??_USART_set+8
  1945  013E  3042               	movlw	66
  1946  013F  00DF               	movwf	??_USART_set+9
  1947  0140  300F               	movlw	15
  1948  0141  00E0               	movwf	??_USART_set+10
  1949  0142  3000               	movlw	0
  1950  0143  00E1               	movwf	??_USART_set+11
  1951  0144  085A               	movf	??_USART_set+4,w
  1952  0145  02DE               	subwf	??_USART_set+8,f
  1953  0146  085B               	movf	??_USART_set+5,w
  1954  0147  1C03               	skipc
  1955  0148  0F5B               	incfsz	??_USART_set+5,w
  1956  0149  294B               	goto	u911
  1957  014A  294C               	goto	u912
  1958  014B                     u911:
  1959  014B  02DF               	subwf	??_USART_set+9,f
  1960  014C                     u912:
  1961  014C  085C               	movf	??_USART_set+6,w
  1962  014D  1C03               	skipc
  1963  014E  0F5C               	incfsz	??_USART_set+6,w
  1964  014F  2951               	goto	u913
  1965  0150  2952               	goto	u914
  1966  0151                     u913:
  1967  0151  02E0               	subwf	??_USART_set+10,f
  1968  0152                     u914:
  1969  0152  085D               	movf	??_USART_set+7,w
  1970  0153  1C03               	skipc
  1971  0154  0F5D               	incfsz	??_USART_set+7,w
  1972  0155  2957               	goto	u915
  1973  0156  2958               	goto	u916
  1974  0157                     u915:
  1975  0157  02E1               	subwf	??_USART_set+11,f
  1976  0158                     u916:
  1977  0158  0861               	movf	??_USART_set+11,w
  1978  0159  00D1               	movwf	___lldiv@dividend+3
  1979  015A  0860               	movf	??_USART_set+10,w
  1980  015B  00D0               	movwf	___lldiv@dividend+2
  1981  015C  085F               	movf	??_USART_set+9,w
  1982  015D  00CF               	movwf	___lldiv@dividend+1
  1983  015E  085E               	movf	??_USART_set+8,w
  1984  015F  00CE               	movwf	___lldiv@dividend
  1985  0160  120A  118A  2177  120A  118A  	fcall	___lldiv
  1986  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0167  084A               	movf	?___lldiv,w
  1989  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1990  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1991  016A  0099               	movwf	25	;volatile
  1992  016B                     l1563:
  1993                           
  1994                           ;USART.c: 19:     TXSTAbits.SYNC = 0;
  1995  016B  1218               	bcf	24,4	;volatile
  1996  016C                     l1565:
  1997                           
  1998                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  1999  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2000  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2001  016E  1798               	bsf	24,7	;volatile
  2002  016F                     l1567:
  2003                           
  2004                           ;USART.c: 22:     PIE1bits.RCIE = 1;
  2005  016F  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0170  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0171  168C               	bsf	12,5	;volatile
  2008  0172                     l1569:
  2009                           
  2010                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  2011  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0174  1318               	bcf	24,6	;volatile
  2014  0175                     l1571:
  2015                           
  2016                           ;USART.c: 27:     RCSTAbits.CREN = 1;
  2017  0175  1618               	bsf	24,4	;volatile
  2018  0176                     l148:
  2019  0176  0008               	return
  2020  0177                     __end_of_USART_set:
  2021                           
  2022                           	psect	text7
  2023  0177                     __ptext7:	
  2024 ;; *************** function ___lldiv *****************
  2025 ;; Defined at:
  2026 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  divisor         4    0[BANK0 ] unsigned long 
  2029 ;;  dividend        4    4[BANK0 ] unsigned long 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  quotient        4    4[COMMON] unsigned long 
  2032 ;;  counter         1    8[COMMON] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  4    0[BANK0 ] unsigned long 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       8       0       0       0
  2043 ;;      Locals:         5       0       0       0       0
  2044 ;;      Temps:          1       0       0       0       0
  2045 ;;      Totals:         6       8       0       0       0
  2046 ;;Total ram usage:       14 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 2
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_USART_set
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056  0177                     ___lldiv:	
  2057                           ;psect for function ___lldiv
  2058                           
  2059  0177                     l1533:	
  2060                           ;incstack = 0
  2061                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2062                           
  2063  0177  3000               	movlw	0
  2064  0178  00F7               	movwf	___lldiv@quotient+3
  2065  0179  3000               	movlw	0
  2066  017A  00F6               	movwf	___lldiv@quotient+2
  2067  017B  3000               	movlw	0
  2068  017C  00F5               	movwf	___lldiv@quotient+1
  2069  017D  3000               	movlw	0
  2070  017E  00F4               	movwf	___lldiv@quotient
  2071  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0180  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0181  084D               	movf	___lldiv@divisor+3,w
  2074  0182  044C               	iorwf	___lldiv@divisor+2,w
  2075  0183  044B               	iorwf	___lldiv@divisor+1,w
  2076  0184  044A               	iorwf	___lldiv@divisor,w
  2077  0185  1903               	skipnz
  2078  0186  2988               	goto	u821
  2079  0187  2989               	goto	u820
  2080  0188                     u821:
  2081  0188  29D6               	goto	l1553
  2082  0189                     u820:
  2083  0189                     l1535:
  2084  0189  01F8               	clrf	___lldiv@counter
  2085  018A  0AF8               	incf	___lldiv@counter,f
  2086  018B  2999               	goto	l1539
  2087  018C                     l1537:
  2088  018C  3001               	movlw	1
  2089  018D  00F3               	movwf	??___lldiv
  2090  018E                     u835:
  2091  018E  1003               	clrc
  2092  018F  0DCA               	rlf	___lldiv@divisor,f
  2093  0190  0DCB               	rlf	___lldiv@divisor+1,f
  2094  0191  0DCC               	rlf	___lldiv@divisor+2,f
  2095  0192  0DCD               	rlf	___lldiv@divisor+3,f
  2096  0193  0BF3               	decfsz	??___lldiv,f
  2097  0194  298E               	goto	u835
  2098  0195  3001               	movlw	1
  2099  0196  00F3               	movwf	??___lldiv
  2100  0197  0873               	movf	??___lldiv,w
  2101  0198  07F8               	addwf	___lldiv@counter,f
  2102  0199                     l1539:
  2103  0199  1FCD               	btfss	___lldiv@divisor+3,7
  2104  019A  299C               	goto	u841
  2105  019B  299D               	goto	u840
  2106  019C                     u841:
  2107  019C  298C               	goto	l1537
  2108  019D                     u840:
  2109  019D                     l1541:
  2110  019D  3001               	movlw	1
  2111  019E  00F3               	movwf	??___lldiv
  2112  019F                     u855:
  2113  019F  1003               	clrc
  2114  01A0  0DF4               	rlf	___lldiv@quotient,f
  2115  01A1  0DF5               	rlf	___lldiv@quotient+1,f
  2116  01A2  0DF6               	rlf	___lldiv@quotient+2,f
  2117  01A3  0DF7               	rlf	___lldiv@quotient+3,f
  2118  01A4  0BF3               	decfsz	??___lldiv,f
  2119  01A5  299F               	goto	u855
  2120  01A6                     l1543:
  2121  01A6  084D               	movf	___lldiv@divisor+3,w
  2122  01A7  0251               	subwf	___lldiv@dividend+3,w
  2123  01A8  1D03               	skipz
  2124  01A9  29B4               	goto	u865
  2125  01AA  084C               	movf	___lldiv@divisor+2,w
  2126  01AB  0250               	subwf	___lldiv@dividend+2,w
  2127  01AC  1D03               	skipz
  2128  01AD  29B4               	goto	u865
  2129  01AE  084B               	movf	___lldiv@divisor+1,w
  2130  01AF  024F               	subwf	___lldiv@dividend+1,w
  2131  01B0  1D03               	skipz
  2132  01B1  29B4               	goto	u865
  2133  01B2  084A               	movf	___lldiv@divisor,w
  2134  01B3  024E               	subwf	___lldiv@dividend,w
  2135  01B4                     u865:
  2136  01B4  1C03               	skipc
  2137  01B5  29B7               	goto	u861
  2138  01B6  29B8               	goto	u860
  2139  01B7                     u861:
  2140  01B7  29C7               	goto	l1549
  2141  01B8                     u860:
  2142  01B8                     l1545:
  2143  01B8  084A               	movf	___lldiv@divisor,w
  2144  01B9  02CE               	subwf	___lldiv@dividend,f
  2145  01BA  084B               	movf	___lldiv@divisor+1,w
  2146  01BB  1C03               	skipc
  2147  01BC  0F4B               	incfsz	___lldiv@divisor+1,w
  2148  01BD  02CF               	subwf	___lldiv@dividend+1,f
  2149  01BE  084C               	movf	___lldiv@divisor+2,w
  2150  01BF  1C03               	skipc
  2151  01C0  0F4C               	incfsz	___lldiv@divisor+2,w
  2152  01C1  02D0               	subwf	___lldiv@dividend+2,f
  2153  01C2  084D               	movf	___lldiv@divisor+3,w
  2154  01C3  1C03               	skipc
  2155  01C4  0F4D               	incfsz	___lldiv@divisor+3,w
  2156  01C5  02D1               	subwf	___lldiv@dividend+3,f
  2157  01C6                     l1547:
  2158  01C6  1474               	bsf	___lldiv@quotient,0
  2159  01C7                     l1549:
  2160  01C7  3001               	movlw	1
  2161  01C8                     u875:
  2162  01C8  1003               	clrc
  2163  01C9  0CCD               	rrf	___lldiv@divisor+3,f
  2164  01CA  0CCC               	rrf	___lldiv@divisor+2,f
  2165  01CB  0CCB               	rrf	___lldiv@divisor+1,f
  2166  01CC  0CCA               	rrf	___lldiv@divisor,f
  2167  01CD  3EFF               	addlw	-1
  2168  01CE  1D03               	skipz
  2169  01CF  29C8               	goto	u875
  2170  01D0                     l1551:
  2171  01D0  3001               	movlw	1
  2172  01D1  02F8               	subwf	___lldiv@counter,f
  2173  01D2  1D03               	btfss	3,2
  2174  01D3  29D5               	goto	u881
  2175  01D4  29D6               	goto	u880
  2176  01D5                     u881:
  2177  01D5  299D               	goto	l1541
  2178  01D6                     u880:
  2179  01D6                     l1553:
  2180  01D6  0877               	movf	___lldiv@quotient+3,w
  2181  01D7  00CD               	movwf	?___lldiv+3
  2182  01D8  0876               	movf	___lldiv@quotient+2,w
  2183  01D9  00CC               	movwf	?___lldiv+2
  2184  01DA  0875               	movf	___lldiv@quotient+1,w
  2185  01DB  00CB               	movwf	?___lldiv+1
  2186  01DC  0874               	movf	___lldiv@quotient,w
  2187  01DD  00CA               	movwf	?___lldiv
  2188  01DE                     l301:
  2189  01DE  0008               	return
  2190  01DF                     __end_of___lldiv:
  2191                           
  2192                           	psect	text8
  2193  029A                     __ptext8:	
  2194 ;; *************** function _Lcd_Init *****************
  2195 ;; Defined at:
  2196 ;;		line 68 in file "LCD.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0
  2212 ;;      Temps:          2       0       0       0       0
  2213 ;;      Totals:         2       0       0       0       0
  2214 ;;Total ram usage:        2 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 4
  2217 ;; This function calls:
  2218 ;;		_Lcd_Cmd
  2219 ;;		_Lcd_Port
  2220 ;; This function is called by:
  2221 ;;		_setup
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225  029A                     _Lcd_Init:	
  2226                           ;psect for function _Lcd_Init
  2227                           
  2228  029A                     l1221:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2231                           
  2232                           
  2233                           ;LCD.c: 69:     Lcd_Port(0x00);
  2234  029A  3000               	movlw	0
  2235  029B  120A  118A  2462  120A  118A  	fcall	_Lcd_Port
  2236  02A0                     l1223:
  2237                           
  2238                           ;LCD.c: 70:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2239  02A0  3007               	movlw	7
  2240  02A1  00F7               	movwf	??_Lcd_Init+1
  2241  02A2  307D               	movlw	125
  2242  02A3  00F6               	movwf	??_Lcd_Init
  2243  02A4                     u1127:
  2244  02A4  0BF6               	decfsz	??_Lcd_Init,f
  2245  02A5  2AA4               	goto	u1127
  2246  02A6  0BF7               	decfsz	??_Lcd_Init+1,f
  2247  02A7  2AA4               	goto	u1127
  2248  02A8                     l1225:
  2249                           
  2250                           ;LCD.c: 71:     Lcd_Cmd(0x03);
  2251  02A8  3003               	movlw	3
  2252  02A9  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2253                           
  2254                           ;LCD.c: 72:     _delay((unsigned long)((5)*(1000000/4000.0)));
  2255  02AE  30F9               	movlw	249
  2256  02AF  00F6               	movwf	??_Lcd_Init
  2257  02B0                     u1137:
  2258  02B0  2AB1               	nop2
  2259  02B1  0BF6               	decfsz	??_Lcd_Init,f
  2260  02B2  2AB0               	goto	u1137
  2261  02B3  2AB4               	nop2
  2262  02B4  2AB5               	nop2
  2263  02B5                     l1227:
  2264                           
  2265                           ;LCD.c: 73:     Lcd_Cmd(0x03);
  2266  02B5  3003               	movlw	3
  2267  02B6  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2268  02BB                     l1229:
  2269                           
  2270                           ;LCD.c: 74:     _delay((unsigned long)((11)*(1000000/4000000.0)));
  2271  02BB  2ABC               	nop2	;2 cycle nop
  2272  02BC                     l1231:
  2273                           
  2274                           ;LCD.c: 75:     Lcd_Cmd(0x03);
  2275  02BC  3003               	movlw	3
  2276  02BD  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2277  02C2                     l1233:
  2278                           
  2279                           ;LCD.c: 77:     Lcd_Cmd(0x02);
  2280  02C2  3002               	movlw	2
  2281  02C3  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2282  02C8                     l1235:
  2283                           
  2284                           ;LCD.c: 78:     Lcd_Cmd(0x02);
  2285  02C8  3002               	movlw	2
  2286  02C9  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2287  02CE                     l1237:
  2288                           
  2289                           ;LCD.c: 79:     Lcd_Cmd(0x08);
  2290  02CE  3008               	movlw	8
  2291  02CF  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2292  02D4                     l1239:
  2293                           
  2294                           ;LCD.c: 80:     Lcd_Cmd(0x00);
  2295  02D4  3000               	movlw	0
  2296  02D5  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2297  02DA                     l1241:
  2298                           
  2299                           ;LCD.c: 81:     Lcd_Cmd(0x0C);
  2300  02DA  300C               	movlw	12
  2301  02DB  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2302  02E0                     l1243:
  2303                           
  2304                           ;LCD.c: 82:     Lcd_Cmd(0x00);
  2305  02E0  3000               	movlw	0
  2306  02E1  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2307  02E6                     l1245:
  2308                           
  2309                           ;LCD.c: 83:     Lcd_Cmd(0x06);
  2310  02E6  3006               	movlw	6
  2311  02E7  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2312  02EC                     l104:
  2313  02EC  0008               	return
  2314  02ED                     __end_of_Lcd_Init:
  2315                           
  2316                           	psect	text9
  2317  0484                     __ptext9:	
  2318 ;; *************** function _read_red *****************
  2319 ;; Defined at:
  2320 ;;		line 100 in file "main_master_p1.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0
  2336 ;;      Temps:          3       0       0       0       0
  2337 ;;      Totals:         3       0       0       0       0
  2338 ;;Total ram usage:        3 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 2
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348  0484                     _read_red:	
  2349                           ;psect for function _read_red
  2350                           
  2351  0484                     l1353:	
  2352                           ;incstack = 0
  2353                           ; Regs used in _read_red: [wreg-fsr0h+status,2+status,0]
  2354                           
  2355                           
  2356                           ;main_master_p1.c: 101:     switch ((val>>1)){
  2357  0484  2C90               	goto	l1359
  2358  0485                     l1355:
  2359                           
  2360                           ;main_master_p1.c: 103:             mov = val & 0x01;
  2361  0485  087A               	movf	_val,w
  2362  0486  3901               	andlw	1
  2363  0487  00F3               	movwf	??_read_red
  2364  0488  01F4               	clrf	??_read_red+1
  2365  0489  0873               	movf	??_read_red,w
  2366  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2367  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2368  048C  00A0               	movwf	_mov
  2369  048D  0874               	movf	??_read_red+1,w
  2370  048E  00A1               	movwf	_mov+1
  2371                           
  2372                           ;main_master_p1.c: 104:             break;
  2373  048F  2CA0               	goto	l61
  2374  0490                     l1359:
  2375  0490  087A               	movf	_val,w
  2376  0491  00F3               	movwf	??_read_red
  2377  0492  1003               	clrc
  2378  0493  0C73               	rrf	??_read_red,w
  2379  0494  00F4               	movwf	??_read_red+1
  2380  0495  01F5               	clrf	??_read_red+2
  2381                           
  2382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2383                           ; Switch size 1, requested type "simple"
  2384                           ; Number of cases is 1, Range of values is 0 to 0
  2385                           ; switch strategies available:
  2386                           ; Name         Instructions Cycles
  2387                           ; simple_byte            4     3 (average)
  2388                           ; direct_byte           11     8 (fixed)
  2389                           ; jumptable            260     6 (fixed)
  2390                           ;	Chosen strategy is simple_byte
  2391  0496  0875               	movf	??_read_red+2,w
  2392  0497  3A00               	xorlw	0	; case 0
  2393  0498  1903               	skipnz
  2394  0499  2C9B               	goto	l1781
  2395  049A  2CA0               	goto	l61
  2396  049B                     l1781:
  2397                           
  2398                           ; Switch size 1, requested type "simple"
  2399                           ; Number of cases is 1, Range of values is 77 to 77
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte            4     3 (average)
  2403                           ; direct_byte           14    11 (fixed)
  2404                           ; jumptable            263     9 (fixed)
  2405                           ;	Chosen strategy is simple_byte
  2406  049B  0874               	movf	??_read_red+1,w
  2407  049C  3A4D               	xorlw	77	; case 77
  2408  049D  1903               	skipnz
  2409  049E  2C85               	goto	l1355
  2410  049F  2CA0               	goto	l61
  2411  04A0                     l61:
  2412  04A0  0008               	return
  2413  04A1                     __end_of_read_red:
  2414                           
  2415                           	psect	text10
  2416  043D                     __ptext10:	
  2417 ;; *************** function _Lcd_Write_String *****************
  2418 ;; Defined at:
  2419 ;;		line 101 in file "LCD.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  a               1    wreg     PTR unsigned char 
  2422 ;;		 -> srow(20), frow(20), 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2425 ;;		 -> srow(20), frow(20), 
  2426 ;;  i               2    0[BANK0 ] int 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       3       0       0       0
  2438 ;;      Temps:          1       0       0       0       0
  2439 ;;      Totals:         1       3       0       0       0
  2440 ;;Total ram usage:        4 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 4
  2443 ;; This function calls:
  2444 ;;		_Lcd_Write_Char
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450  043D                     _Lcd_Write_String:	
  2451                           ;psect for function _Lcd_Write_String
  2452                           
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2456                           ;Lcd_Write_String@a stored from wreg
  2457  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2458  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2459  043F  00CC               	movwf	Lcd_Write_String@a
  2460  0440                     l1447:
  2461                           
  2462                           ;LCD.c: 102:     int i;;LCD.c: 103:     for (i = 0; a[i] != '\0'; i++)
  2463  0440  01CA               	clrf	Lcd_Write_String@i
  2464  0441  01CB               	clrf	Lcd_Write_String@i+1
  2465  0442  2C56               	goto	l1453
  2466  0443                     l1449:
  2467                           
  2468                           ;LCD.c: 104:         Lcd_Write_Char(a[i]);
  2469  0443  084A               	movf	Lcd_Write_String@i,w
  2470  0444  074C               	addwf	Lcd_Write_String@a,w
  2471  0445  00F8               	movwf	??_Lcd_Write_String
  2472  0446  0878               	movf	??_Lcd_Write_String,w
  2473  0447  0084               	movwf	4
  2474  0448  0800               	movf	0,w
  2475  0449  120A  118A  23E1  120A  118A  	fcall	_Lcd_Write_Char
  2476  044E                     l1451:
  2477  044E  3001               	movlw	1
  2478  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0451  07CA               	addwf	Lcd_Write_String@i,f
  2481  0452  1803               	skipnc
  2482  0453  0ACB               	incf	Lcd_Write_String@i+1,f
  2483  0454  3000               	movlw	0
  2484  0455  07CB               	addwf	Lcd_Write_String@i+1,f
  2485  0456                     l1453:
  2486  0456  084A               	movf	Lcd_Write_String@i,w
  2487  0457  074C               	addwf	Lcd_Write_String@a,w
  2488  0458  00F8               	movwf	??_Lcd_Write_String
  2489  0459  0878               	movf	??_Lcd_Write_String,w
  2490  045A  0084               	movwf	4
  2491  045B  1383               	bcf	3,7	;select IRP bank0
  2492  045C  0800               	movf	0,w
  2493  045D  1D03               	btfss	3,2
  2494  045E  2C60               	goto	u811
  2495  045F  2C61               	goto	u810
  2496  0460                     u811:
  2497  0460  2C43               	goto	l1449
  2498  0461                     u810:
  2499  0461                     l113:
  2500  0461  0008               	return
  2501  0462                     __end_of_Lcd_Write_String:
  2502                           
  2503                           	psect	text11
  2504  03E1                     __ptext11:	
  2505 ;; *************** function _Lcd_Write_Char *****************
  2506 ;; Defined at:
  2507 ;;		line 86 in file "LCD.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  a               1    wreg     unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  a               1    7[COMMON] unsigned char 
  2512 ;;  y               1    6[COMMON] unsigned char 
  2513 ;;  temp            1    5[COMMON] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         3       0       0       0       0
  2525 ;;      Temps:          1       0       0       0       0
  2526 ;;      Totals:         4       0       0       0       0
  2527 ;;Total ram usage:        4 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 3
  2530 ;; This function calls:
  2531 ;;		_Lcd_Port
  2532 ;; This function is called by:
  2533 ;;		_Lcd_Write_String
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537  03E1                     _Lcd_Write_Char:	
  2538                           ;psect for function _Lcd_Write_Char
  2539                           
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2543                           ;Lcd_Write_Char@a stored from wreg
  2544  03E1  00F7               	movwf	Lcd_Write_Char@a
  2545  03E2                     l1263:
  2546                           
  2547                           ;LCD.c: 87:     char temp, y;;LCD.c: 88:     temp = a & 0x0F;
  2548  03E2  0877               	movf	Lcd_Write_Char@a,w
  2549  03E3  390F               	andlw	15
  2550  03E4  00F4               	movwf	??_Lcd_Write_Char
  2551  03E5  0874               	movf	??_Lcd_Write_Char,w
  2552  03E6  00F5               	movwf	Lcd_Write_Char@temp
  2553                           
  2554                           ;LCD.c: 89:     y = a & 0xF0;
  2555  03E7  0877               	movf	Lcd_Write_Char@a,w
  2556  03E8  39F0               	andlw	240
  2557  03E9  00F4               	movwf	??_Lcd_Write_Char
  2558  03EA  0874               	movf	??_Lcd_Write_Char,w
  2559  03EB  00F6               	movwf	Lcd_Write_Char@y
  2560  03EC                     l1265:
  2561                           
  2562                           ;LCD.c: 90:     RA0 = 1;
  2563  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2564  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2565  03EE  1405               	bsf	5,0	;volatile
  2566  03EF                     l1267:
  2567                           
  2568                           ;LCD.c: 91:     Lcd_Port(y >> 4);
  2569  03EF  0876               	movf	Lcd_Write_Char@y,w
  2570  03F0  00F4               	movwf	??_Lcd_Write_Char
  2571  03F1  3004               	movlw	4
  2572  03F2                     u565:
  2573  03F2  1003               	clrc
  2574  03F3  0CF4               	rrf	??_Lcd_Write_Char,f
  2575  03F4  3EFF               	addlw	-1
  2576  03F5  1D03               	skipz
  2577  03F6  2BF2               	goto	u565
  2578  03F7  0874               	movf	??_Lcd_Write_Char,w
  2579  03F8  120A  118A  2462  120A  118A  	fcall	_Lcd_Port
  2580  03FD                     l1269:
  2581                           
  2582                           ;LCD.c: 92:     RA1 = 1;
  2583  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2584  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2585  03FF  1485               	bsf	5,1	;volatile
  2586  0400                     l1271:
  2587                           
  2588                           ;LCD.c: 93:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2589  0400  3003               	movlw	3
  2590  0401  00F4               	movwf	??_Lcd_Write_Char
  2591  0402                     u1147:
  2592  0402  0BF4               	decfsz	??_Lcd_Write_Char,f
  2593  0403  2C02               	goto	u1147
  2594  0404                     l1273:
  2595                           
  2596                           ;LCD.c: 94:     RA1 = 0;
  2597  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0406  1085               	bcf	5,1	;volatile
  2600  0407                     l1275:
  2601                           
  2602                           ;LCD.c: 95:     Lcd_Port(temp);
  2603  0407  0875               	movf	Lcd_Write_Char@temp,w
  2604  0408  120A  118A  2462  120A  118A  	fcall	_Lcd_Port
  2605  040D                     l1277:
  2606                           
  2607                           ;LCD.c: 96:     RA1 = 1;
  2608  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2609  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2610  040F  1485               	bsf	5,1	;volatile
  2611  0410                     l1279:
  2612                           
  2613                           ;LCD.c: 97:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2614  0410  3003               	movlw	3
  2615  0411  00F4               	movwf	??_Lcd_Write_Char
  2616  0412                     u1157:
  2617  0412  0BF4               	decfsz	??_Lcd_Write_Char,f
  2618  0413  2C12               	goto	u1157
  2619  0414                     l1281:
  2620                           
  2621                           ;LCD.c: 98:     RA1 = 0;
  2622  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0416  1085               	bcf	5,1	;volatile
  2625  0417                     l107:
  2626  0417  0008               	return
  2627  0418                     __end_of_Lcd_Write_Char:
  2628                           
  2629                           	psect	text12
  2630  0242                     __ptext12:	
  2631 ;; *************** function _Lcd_Set_Cursor *****************
  2632 ;; Defined at:
  2633 ;;		line 50 in file "LCD.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  a               1    wreg     unsigned char 
  2636 ;;  b               1    6[COMMON] unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  a               1    0[BANK0 ] unsigned char 
  2639 ;;  temp            1    3[BANK0 ] unsigned char 
  2640 ;;  y               1    2[BANK0 ] unsigned char 
  2641 ;;  z               1    1[BANK0 ] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         1       0       0       0       0
  2652 ;;      Locals:         0       4       0       0       0
  2653 ;;      Temps:          2       0       0       0       0
  2654 ;;      Totals:         3       4       0       0       0
  2655 ;;Total ram usage:        7 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 4
  2658 ;; This function calls:
  2659 ;;		_Lcd_Cmd
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665  0242                     _Lcd_Set_Cursor:	
  2666                           ;psect for function _Lcd_Set_Cursor
  2667                           
  2668                           
  2669                           ;incstack = 0
  2670                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2671                           ;Lcd_Set_Cursor@a stored from wreg
  2672  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0243  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0244  00CA               	movwf	Lcd_Set_Cursor@a
  2675  0245                     l1427:
  2676                           
  2677                           ;LCD.c: 50: void Lcd_Set_Cursor(char a, char b);LCD.c: 51: {;LCD.c: 52:     char temp, z
      +                          , y;;LCD.c: 53:     if (a == 1) {
  2678  0245  034A               	decf	Lcd_Set_Cursor@a,w
  2679  0246  1D03               	btfss	3,2
  2680  0247  2A49               	goto	u771
  2681  0248  2A4A               	goto	u770
  2682  0249                     u771:
  2683  0249  2A6F               	goto	l1437
  2684  024A                     u770:
  2685  024A                     l1429:
  2686                           
  2687                           ;LCD.c: 54:         temp = 0x80 + b - 1;
  2688  024A  0876               	movf	Lcd_Set_Cursor@b,w
  2689  024B  3E7F               	addlw	127
  2690  024C  00F7               	movwf	??_Lcd_Set_Cursor
  2691  024D  0877               	movf	??_Lcd_Set_Cursor,w
  2692  024E  00CD               	movwf	Lcd_Set_Cursor@temp
  2693                           
  2694                           ;LCD.c: 55:         z = temp >> 4;
  2695  024F  084D               	movf	Lcd_Set_Cursor@temp,w
  2696  0250  00F7               	movwf	??_Lcd_Set_Cursor
  2697  0251  3004               	movlw	4
  2698  0252                     u785:
  2699  0252  1003               	clrc
  2700  0253  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2701  0254  3EFF               	addlw	-1
  2702  0255  1D03               	skipz
  2703  0256  2A52               	goto	u785
  2704  0257  0877               	movf	??_Lcd_Set_Cursor,w
  2705  0258  00F8               	movwf	??_Lcd_Set_Cursor+1
  2706  0259  0878               	movf	??_Lcd_Set_Cursor+1,w
  2707  025A  00CB               	movwf	Lcd_Set_Cursor@z
  2708  025B                     l1431:
  2709                           
  2710                           ;LCD.c: 56:         y = temp & 0x0F;
  2711  025B  084D               	movf	Lcd_Set_Cursor@temp,w
  2712  025C  390F               	andlw	15
  2713  025D  00F7               	movwf	??_Lcd_Set_Cursor
  2714  025E  0877               	movf	??_Lcd_Set_Cursor,w
  2715  025F  00CC               	movwf	Lcd_Set_Cursor@y
  2716  0260                     l1433:
  2717                           
  2718                           ;LCD.c: 57:         Lcd_Cmd(z);
  2719  0260  084B               	movf	Lcd_Set_Cursor@z,w
  2720  0261  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2721  0266                     l1435:
  2722                           
  2723                           ;LCD.c: 58:         Lcd_Cmd(y);
  2724  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0268  084C               	movf	Lcd_Set_Cursor@y,w
  2727  0269  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2728                           
  2729                           ;LCD.c: 59:     } else if (a == 2) {
  2730  026E  2A99               	goto	l101
  2731  026F                     l1437:
  2732  026F  3002               	movlw	2
  2733  0270  064A               	xorwf	Lcd_Set_Cursor@a,w
  2734  0271  1D03               	btfss	3,2
  2735  0272  2A74               	goto	u791
  2736  0273  2A75               	goto	u790
  2737  0274                     u791:
  2738  0274  2A99               	goto	l101
  2739  0275                     u790:
  2740  0275                     l1439:
  2741                           
  2742                           ;LCD.c: 60:         temp = 0xC0 + b - 1;
  2743  0275  0876               	movf	Lcd_Set_Cursor@b,w
  2744  0276  3EBF               	addlw	191
  2745  0277  00F7               	movwf	??_Lcd_Set_Cursor
  2746  0278  0877               	movf	??_Lcd_Set_Cursor,w
  2747  0279  00CD               	movwf	Lcd_Set_Cursor@temp
  2748                           
  2749                           ;LCD.c: 61:         z = temp >> 4;
  2750  027A  084D               	movf	Lcd_Set_Cursor@temp,w
  2751  027B  00F7               	movwf	??_Lcd_Set_Cursor
  2752  027C  3004               	movlw	4
  2753  027D                     u805:
  2754  027D  1003               	clrc
  2755  027E  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2756  027F  3EFF               	addlw	-1
  2757  0280  1D03               	skipz
  2758  0281  2A7D               	goto	u805
  2759  0282  0877               	movf	??_Lcd_Set_Cursor,w
  2760  0283  00F8               	movwf	??_Lcd_Set_Cursor+1
  2761  0284  0878               	movf	??_Lcd_Set_Cursor+1,w
  2762  0285  00CB               	movwf	Lcd_Set_Cursor@z
  2763  0286                     l1441:
  2764                           
  2765                           ;LCD.c: 62:         y = temp & 0x0F;
  2766  0286  084D               	movf	Lcd_Set_Cursor@temp,w
  2767  0287  390F               	andlw	15
  2768  0288  00F7               	movwf	??_Lcd_Set_Cursor
  2769  0289  0877               	movf	??_Lcd_Set_Cursor,w
  2770  028A  00CC               	movwf	Lcd_Set_Cursor@y
  2771  028B                     l1443:
  2772                           
  2773                           ;LCD.c: 63:         Lcd_Cmd(z);
  2774  028B  084B               	movf	Lcd_Set_Cursor@z,w
  2775  028C  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2776  0291                     l1445:
  2777                           
  2778                           ;LCD.c: 64:         Lcd_Cmd(y);
  2779  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0293  084C               	movf	Lcd_Set_Cursor@y,w
  2782  0294  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2783  0299                     l101:
  2784  0299  0008               	return
  2785  029A                     __end_of_Lcd_Set_Cursor:
  2786                           
  2787                           	psect	text13
  2788  04CE                     __ptext13:	
  2789 ;; *************** function _Lcd_Clear *****************
  2790 ;; Defined at:
  2791 ;;		line 45 in file "LCD.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 4
  2812 ;; This function calls:
  2813 ;;		_Lcd_Cmd
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819  04CE                     _Lcd_Clear:	
  2820                           ;psect for function _Lcd_Clear
  2821                           
  2822  04CE                     l1351:	
  2823                           ;incstack = 0
  2824                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2825                           
  2826                           
  2827                           ;LCD.c: 46:     Lcd_Cmd(0);
  2828  04CE  3000               	movlw	0
  2829  04CF  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2830                           
  2831                           ;LCD.c: 47:     Lcd_Cmd(1);
  2832  04D4  3001               	movlw	1
  2833  04D5  120A  118A  24A1  120A  118A  	fcall	_Lcd_Cmd
  2834  04DA                     l95:
  2835  04DA  0008               	return
  2836  04DB                     __end_of_Lcd_Clear:
  2837                           
  2838                           	psect	text14
  2839  04A1                     __ptext14:	
  2840 ;; *************** function _Lcd_Cmd *****************
  2841 ;; Defined at:
  2842 ;;		line 36 in file "LCD.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  a               1    wreg     unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  a               1    5[COMMON] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         1       0       0       0       0
  2858 ;;      Temps:          1       0       0       0       0
  2859 ;;      Totals:         2       0       0       0       0
  2860 ;;Total ram usage:        2 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 3
  2863 ;; This function calls:
  2864 ;;		_Lcd_Port
  2865 ;; This function is called by:
  2866 ;;		_Lcd_Clear
  2867 ;;		_Lcd_Set_Cursor
  2868 ;;		_Lcd_Init
  2869 ;;		_Lcd_Shift_Right
  2870 ;;		_Lcd_Shift_Left
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874  04A1                     _Lcd_Cmd:	
  2875                           ;psect for function _Lcd_Cmd
  2876                           
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2880                           ;Lcd_Cmd@a stored from wreg
  2881  04A1  00F5               	movwf	Lcd_Cmd@a
  2882  04A2                     l1167:
  2883                           
  2884                           ;LCD.c: 36: void Lcd_Cmd(char a);LCD.c: 37: {;LCD.c: 38:     RA0 = 0;
  2885  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2886  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2887  04A4  1005               	bcf	5,0	;volatile
  2888  04A5                     l1169:
  2889                           
  2890                           ;LCD.c: 39:     Lcd_Port(a);
  2891  04A5  0875               	movf	Lcd_Cmd@a,w
  2892  04A6  120A  118A  2462  120A  118A  	fcall	_Lcd_Port
  2893  04AB                     l1171:
  2894                           
  2895                           ;LCD.c: 40:     RA1 = 1;
  2896  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2897  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2898  04AD  1485               	bsf	5,1	;volatile
  2899  04AE                     l1173:
  2900                           
  2901                           ;LCD.c: 41:     _delay((unsigned long)((4)*(1000000/4000.0)));
  2902  04AE  30C7               	movlw	199
  2903  04AF  00F4               	movwf	??_Lcd_Cmd
  2904  04B0                     u1167:
  2905  04B0  2CB1               	nop2
  2906  04B1  0BF4               	decfsz	??_Lcd_Cmd,f
  2907  04B2  2CB0               	goto	u1167
  2908  04B3  2CB4               	nop2
  2909  04B4  2CB5               	nop2
  2910  04B5                     l1175:
  2911                           
  2912                           ;LCD.c: 42:     RA1 = 0;
  2913  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2914  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2915  04B7  1085               	bcf	5,1	;volatile
  2916  04B8                     l92:
  2917  04B8  0008               	return
  2918  04B9                     __end_of_Lcd_Cmd:
  2919                           
  2920                           	psect	text15
  2921  0462                     __ptext15:	
  2922 ;; *************** function _Lcd_Port *****************
  2923 ;; Defined at:
  2924 ;;		line 13 in file "LCD.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  a               1    wreg     unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  a               1    3[COMMON] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2938 ;;      Params:         0       0       0       0       0
  2939 ;;      Locals:         1       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0
  2941 ;;      Totals:         1       0       0       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 2
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_Lcd_Cmd
  2949 ;;		_Lcd_Init
  2950 ;;		_Lcd_Write_Char
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954  0462                     _Lcd_Port:	
  2955                           ;psect for function _Lcd_Port
  2956                           
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in _Lcd_Port: [wreg]
  2960                           ;Lcd_Port@a stored from wreg
  2961  0462  00F3               	movwf	Lcd_Port@a
  2962  0463                     l1157:
  2963                           
  2964                           ;LCD.c: 13: void Lcd_Port(char a);LCD.c: 14: {;LCD.c: 15:     if (a & 1)
  2965  0463  1C73               	btfss	Lcd_Port@a,0
  2966  0464  2C66               	goto	u421
  2967  0465  2C67               	goto	u420
  2968  0466                     u421:
  2969  0466  2C6B               	goto	l81
  2970  0467                     u420:
  2971  0467                     l1159:
  2972                           
  2973                           ;LCD.c: 16:         RA2 = 1;
  2974  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0469  1505               	bsf	5,2	;volatile
  2977  046A  2C6E               	goto	l82
  2978  046B                     l81:	
  2979                           ;LCD.c: 17:     else
  2980                           
  2981                           
  2982                           ;LCD.c: 18:         RA2 = 0;
  2983  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2984  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2985  046D  1105               	bcf	5,2	;volatile
  2986  046E                     l82:
  2987                           
  2988                           ;LCD.c: 20:     if (a & 2)
  2989  046E  1CF3               	btfss	Lcd_Port@a,1
  2990  046F  2C71               	goto	u431
  2991  0470  2C72               	goto	u430
  2992  0471                     u431:
  2993  0471  2C74               	goto	l83
  2994  0472                     u430:
  2995  0472                     l1161:
  2996                           
  2997                           ;LCD.c: 21:         RA3 = 1;
  2998  0472  1585               	bsf	5,3	;volatile
  2999  0473  2C75               	goto	l84
  3000  0474                     l83:	
  3001                           ;LCD.c: 22:     else
  3002                           
  3003                           
  3004                           ;LCD.c: 23:         RA3 = 0;
  3005  0474  1185               	bcf	5,3	;volatile
  3006  0475                     l84:
  3007                           
  3008                           ;LCD.c: 25:     if (a & 4)
  3009  0475  1D73               	btfss	Lcd_Port@a,2
  3010  0476  2C78               	goto	u441
  3011  0477  2C79               	goto	u440
  3012  0478                     u441:
  3013  0478  2C7B               	goto	l85
  3014  0479                     u440:
  3015  0479                     l1163:
  3016                           
  3017                           ;LCD.c: 26:         RA4 = 1;
  3018  0479  1605               	bsf	5,4	;volatile
  3019  047A  2C7C               	goto	l86
  3020  047B                     l85:	
  3021                           ;LCD.c: 27:     else
  3022                           
  3023                           
  3024                           ;LCD.c: 28:         RA4 = 0;
  3025  047B  1205               	bcf	5,4	;volatile
  3026  047C                     l86:
  3027                           
  3028                           ;LCD.c: 30:     if (a & 8)
  3029  047C  1DF3               	btfss	Lcd_Port@a,3
  3030  047D  2C7F               	goto	u451
  3031  047E  2C80               	goto	u450
  3032  047F                     u451:
  3033  047F  2C82               	goto	l87
  3034  0480                     u450:
  3035  0480                     l1165:
  3036                           
  3037                           ;LCD.c: 31:         RA5 = 1;
  3038  0480  1685               	bsf	5,5	;volatile
  3039  0481  2C83               	goto	l89
  3040  0482                     l87:	
  3041                           ;LCD.c: 32:     else
  3042                           
  3043                           
  3044                           ;LCD.c: 33:         RA5 = 0;
  3045  0482  1285               	bcf	5,5	;volatile
  3046  0483                     l89:
  3047  0483  0008               	return
  3048  0484                     __end_of_Lcd_Port:
  3049                           
  3050                           	psect	text16
  3051  04B9                     __ptext16:	
  3052 ;; *************** function _master *****************
  3053 ;; Defined at:
  3054 ;;		line 71 in file "main_master_p1.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0
  3070 ;;      Temps:          3       0       0       0       0
  3071 ;;      Totals:         3       0       0       0       0
  3072 ;;Total ram usage:        3 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 1
  3075 ;; This function calls:
  3076 ;;		_USART_read
  3077 ;; This function is called by:
  3078 ;;		Interrupt level 1
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082  04B9                     _master:	
  3083                           ;psect for function _master
  3084                           
  3085  04B9                     i1l1073:
  3086                           
  3087                           ;main_master_p1.c: 73:     if(PIR1bits.RCIF){
  3088  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3089  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3090  04BB  1E8C               	btfss	12,5	;volatile
  3091  04BC  2CBE               	goto	u41_21
  3092  04BD  2CBF               	goto	u41_20
  3093  04BE                     u41_21:
  3094  04BE  2CC7               	goto	i1l46
  3095  04BF                     u41_20:
  3096  04BF                     i1l1075:
  3097                           
  3098                           ;main_master_p1.c: 74:         val = USART_read();
  3099  04BF  120A  118A  24E3  120A  118A  	fcall	_USART_read
  3100  04C4  00F0               	movwf	??_master
  3101  04C5  0870               	movf	??_master,w
  3102  04C6  00FA               	movwf	_val
  3103  04C7                     i1l46:
  3104  04C7  0872               	movf	??_master+2,w
  3105  04C8  008A               	movwf	10
  3106  04C9  0E71               	swapf	??_master+1,w
  3107  04CA  0083               	movwf	3
  3108  04CB  0EFE               	swapf	btemp,f
  3109  04CC  0E7E               	swapf	btemp,w
  3110  04CD  0009               	retfie
  3111  04CE                     __end_of_master:
  3112                           
  3113                           	psect	intentry
  3114  0004                     __pintentry:	
  3115                           ;incstack = 0
  3116                           ; Regs used in _master: [wreg+pclath+cstack]
  3117                           
  3118  0004                     interrupt_function:
  3119  007E                     saved_w	set	btemp
  3120  0004  00FE               	movwf	btemp
  3121  0005  0E03               	swapf	3,w
  3122  0006  00F1               	movwf	??_master+1
  3123  0007  080A               	movf	10,w
  3124  0008  00F2               	movwf	??_master+2
  3125  0009  120A  118A  2CB9   	ljmp	_master
  3126                           
  3127                           	psect	text17
  3128  04E3                     __ptext17:	
  3129 ;; *************** function _USART_read *****************
  3130 ;; Defined at:
  3131 ;;		line 30 in file "USART.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      unsigned char 
  3138 ;; Registers used:
  3139 ;;		wreg
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_master
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158  04E3                     _USART_read:	
  3159                           ;psect for function _USART_read
  3160                           
  3161  04E3                     i1l945:	
  3162                           ;incstack = 0
  3163                           ; Regs used in _USART_read: [wreg]
  3164                           
  3165                           
  3166                           ;USART.c: 32:     return RCREG;
  3167  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3168  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3169  04E5  081A               	movf	26,w	;volatile
  3170  04E6                     i1l151:
  3171  04E6  0008               	return
  3172  04E7                     __end_of_USART_read:
  3173  007E                     btemp	set	126	;btemp
  3174  007E                     wtemp0	set	126
  3175                           
  3176                           	psect	idloc
  3177                           
  3178                           ;Config register IDLOC0 @ 0x2000
  3179                           ;	unspecified, using default values
  3180  2000                     	org	8192
  3181  2000  3FFF               	dw	16383
  3182                           
  3183                           ;Config register IDLOC1 @ 0x2001
  3184                           ;	unspecified, using default values
  3185  2001                     	org	8193
  3186  2001  3FFF               	dw	16383
  3187                           
  3188                           ;Config register IDLOC2 @ 0x2002
  3189                           ;	unspecified, using default values
  3190  2002                     	org	8194
  3191  2002  3FFF               	dw	16383
  3192                           
  3193                           ;Config register IDLOC3 @ 0x2003
  3194                           ;	unspecified, using default values
  3195  2003                     	org	8195
  3196  2003  3FFF               	dw	16383
  3197                           
  3198                           	psect	config
  3199                           
  3200                           ;Config register CONFIG1 @ 0x2007
  3201                           ;	Oscillator Selection bits
  3202                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3203                           ;	Watchdog Timer Enable bit
  3204                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3205                           ;	Power-up Timer Enable bit
  3206                           ;	PWRTE = OFF, PWRT disabled
  3207                           ;	RE3/MCLR pin function select bit
  3208                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3209                           ;	Code Protection bit
  3210                           ;	CP = OFF, Program memory code protection is disabled
  3211                           ;	Data Code Protection bit
  3212                           ;	CPD = OFF, Data memory code protection is disabled
  3213                           ;	Brown Out Reset Selection bits
  3214                           ;	BOREN = OFF, BOR disabled
  3215                           ;	Internal External Switchover bit
  3216                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3217                           ;	Fail-Safe Clock Monitor Enabled bit
  3218                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3219                           ;	Low Voltage Programming Enable bit
  3220                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3221                           ;	In-Circuit Debugger Mode bit
  3222                           ;	DEBUG = 0x1, unprogrammed default
  3223  2007                     	org	8199
  3224  2007  20D4               	dw	8404
  3225                           
  3226                           ;Config register CONFIG2 @ 0x2008
  3227                           ;	Brown-out Reset Selection bit
  3228                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3229                           ;	Flash Program Memory Self Write Enable bits
  3230                           ;	WRT = OFF, Write protection off
  3231  2008                     	org	8200
  3232  2008  3EFF               	dw	16127

Data Sizes:
    Strings     39
    Constant    10
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     29      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[18]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_set->___lldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _master in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_USART_set
    _USART_set->___lldiv

Critical Paths under _master in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _master in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _master in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _master in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3550
                                             28 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _read_red
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    18     11    1781
                                              7 BANK0     21    10     11
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     793
                           _Lcd_Init
                          _USART_set
                        _int_osc_MHz
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     573
                                              8 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _read_red                                             3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _master                                               3     3      0       0
                                              0 COMMON     3     3      0
                         _USART_read
 ---------------------------------------------------------------------------------
 (6) _USART_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _read_red
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _USART_set
       ___lldiv
     _int_osc_MHz
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _master (ROOT)
   _USART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      52       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      52      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Sep 14 12:44:26 2022

                       pc 0002                        l61 04A0                        l64 043C  
                      l81 046B                        l82 046E                        l83 0474  
                      l84 0475                        l92 04B8                        l85 047B  
                      l86 047C                        l87 0482                        l95 04DA  
                      l89 0483                        fsr 0004                       l101 0299  
                     l104 02EC                       l113 0461                       l107 0417  
                     l131 03A9                       l301 01DE                       l126 03A8  
                     l148 0176                       l261 0106                       l537 0332  
                     l547 036E                       _RA0 0028                       _RA1 0029  
                     _RA2 002A                       _RA3 002B                       _RA4 002C  
                     _RA5 002D                       u420 0467                       u421 0466  
                     u430 0472                       u431 0471                       u440 0479  
                     u441 0478                       u450 0480                       u451 047F  
                     u810 0461                       u811 0460                       u820 0189  
                     u900 0139                       u805 027D                       u565 03F2  
                     u821 0188                       u911 014B                       u840 019D  
                     u912 014C                       u920 02F7                       u841 019C  
                     u913 0151                       u905 0134                       u921 02F6  
                     u770 024A                       u914 0152                       u771 0249  
                     u835 018E                       u915 0157                       u860 01B8  
                     u916 0158                       u940 0309                       u861 01B7  
                     u941 0308                       u790 0275                       u791 0274  
                     u855 019F                       u935 02FB                       u880 01D6  
                     u960 031A                       u785 0252                       u881 01D5  
                     u865 01B4                       u961 0319                       u890 0120  
                     u875 01C8                       u955 030A                       u980 032E  
                     u981 032D                       u965 0316                       u990 033B  
                     u895 011B                       u975 0322                       u991 033A  
                     _val 007A                       _mov 0020                       fsr0 0004  
                     indf 0000                      l1201 0370                      l1211 038B  
                    l1203 0371                      l1221 029A                      l1205 0378  
                    l1231 02BC                      l1223 02A0                      l1207 037F  
                    l1215 0392                      l1161 0472                      l1241 02DA  
                    l1233 02C2                      l1225 02A8                      l1209 0386  
                    l1163 0479                      l1171 04AB                      l1243 02E0  
                    l1235 02C8                      l1227 02B5                      l1165 0480  
                    l1157 0463                      l1173 04AE                      l1245 02E6  
                    l1237 02CE                      l1229 02BB                      l1159 0467  
                    l1175 04B5                      l1167 04A2                      l1351 04CE  
                    l1431 025B                      l1271 0400                      l1263 03E2  
                    l1239 02D4                      l1169 04A5                      l1441 0286  
                    l1433 0260                      l1281 0414                      l1273 0404  
                    l1265 03EC                      l1353 0484                      l1601 033B  
                    l1443 028B                      l1435 0266                      l1427 0245  
                    l1275 0407                      l1267 03EF                      l1451 044E  
                    l1355 0485                      l1611 0357                      l1603 033E  
                    l1445 0291                      l1429 024A                      l1437 026F  
                    l1277 040D                      l1269 03FD                      l1453 0456  
                    l1541 019D                      l1533 0177                      l1621 0418  
                    l1613 035D                      l1605 0345                      l1439 0275  
                    l1279 0410                      l1447 0440                      l1359 0490  
                    l1551 01D0                      l1543 01A6                      l1535 0189  
                    l1631 0426                      l1623 041E                      l1615 0364  
                    l1607 0349                      l1711 020E                      l1703 01DF  
                    l1449 0443                      l1545 01B8                      l1537 018C  
                    l1553 01D6                      l1561 0110                      l1633 042B  
                    l1625 0421                      l1609 034D                      l1617 036A  
                    l1641 0020                      l1713 022A                      l1705 01E4  
                    l1547 01C6                      l1539 0199                      l1571 0175  
                    l1563 016B                      l1635 043A                      l1627 0422  
                    l1643 0025                      l1715 0230                      l1707 01E9  
                    l1549 01C7                      l1565 016C                      l1557 0107  
                    l1637 043B                      l1629 0425                      l1581 0301  
                    l1573 02ED                      l1661 0065                      l1653 0038  
                    l1645 002B                      l1709 01EE                      l1567 016F  
                    l1559 010D                      l1591 0321                      l1583 0305  
                    l1575 02F1                      l1671 0070                      l1663 0069  
                    l1655 0055                      l1647 0032                      l1569 0172  
                    l1593 0328                      l1585 0309                      l1577 02F7  
                    l1681 00A3                      l1665 006E                      l1657 005D  
                    l1649 0037                      l1587 031A                      l1579 02FA  
                    l1595 032E                      l1691 00E7                      l1683 00A7  
                    l1675 008C                      l1659 0061                      l1781 049B  
                    l1589 0320                      l1685 00AC                      l1677 0096  
                    l1693 00F0                      l1599 0333                      l1687 00DC  
                    l1679 009C                      l1695 0102                      l1689 00E3  
                    l1777 004A                      l1779 039A                      STR_1 03BA  
                    STR_2 03CF                      u1010 034D                      u1011 034C  
                    u1020 0357                      u1100 00F0                      u1021 0356  
                    u1005 033F                      u1101 00EF                      u1110 0102  
                    u1111 0101                      u1040 036A                      u1041 0369  
                    u1025 0353                      u1050 002B                      u1035 035E  
                    u1051 002A                      u1060 0065                      u1061 0064  
                    u1070 008B                      u1127 02A4                      u1071 008A  
                    u1080 0096                      u1137 02B0                      u1081 0095  
                    u1090 009C                      u1147 0402                      u1091 009B  
                    u1075 0087                      u1157 0412                      u1167 04B0  
                    i1l46 04C7         ?_Lcd_Write_String 0070                      _main 01DF  
                    _frow 0036                      btemp 007E                      _srow 0022  
                    start 000C        ??_Lcd_Write_String 0078           __end_of_Lcd_Cmd 04B9  
                   ?_main 0070                     _ANSEL 0188           __end_of___lldiv 01DF  
         __end_of___lwdiv 0333                     i1l151 04E6           __end_of___lwmod 036F  
                   i1l945 04E3                     _RCREG 001A                     u41_20 04BF  
                   u41_21 04BE                     _SPBRG 0099                     _TRISA 0085  
                   _TRISB 0086           int_osc_MHz@freq 0075           __end_of_dpowers 03BA  
                   _setup 0418              ?_int_osc_MHz 0070                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0107  
        __end_of_Lcd_Init 02ED          __end_of_Lcd_Port 0484               ?_USART_read 0070  
         __initialization 000F              __end_of_main 0242                    ??_main 0066  
                  ?_setup 0070                    _ANSELH 0189                    i1l1073 04B9  
                  i1l1075 04BF                 ??_Lcd_Cmd 0074                    _SPBRGH 009A  
               ??___lldiv 0073                 ??___lwdiv 0077                 ??___lwmod 0078  
                  _master 04B9          __end_of_read_red 04A1         __end_of_USART_set 0177  
                  saved_w 007E                 ??_sprintf 005C           Lcd_Set_Cursor@a 004A  
         Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 004C           Lcd_Set_Cursor@z 004B  
 __end_of__initialization 0019         __end_of_Lcd_Clear 04DB            __pcstackCOMMON 0070  
           __end_of_setup 043D            _Lcd_Set_Cursor 0242                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0079                __pbssBANK0 0020  
              __pmaintext 01DF                __pintentry 0004                   ?_master 0070  
  __end_of_Lcd_Set_Cursor 029A                ??_Lcd_Init 0076                ??_Lcd_Port 0073  
              __stringtab 03AA            _Lcd_Write_Char 03E1                   _Lcd_Cmd 04A1  
               ?_read_red 0070              ??_USART_read 0070                   ___lldiv 0177  
                 ___lwdiv 02ED                   ___lwmod 0333           ?_Lcd_Set_Cursor 0076  
                 __ptext1 001D                   __ptext2 0333                   __ptext3 02ED  
                 __ptext4 0418                   __ptext5 036F                   __ptext6 0107  
                 __ptext7 0177                   __ptext8 029A                   __ptext9 0484  
                 _dpowers 03B0                   _sprintf 001D                   clrloop0 04DC  
      __end_of_USART_read 04E7    __end_of_Lcd_Write_Char 0418      end_of_initialization 0019  
              ??_read_red 0073           ___lldiv@divisor 004A           ___lldiv@counter 0078  
               _RCSTAbits 0018                 Lcd_Port@a 0073                 _USART_set 0107  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 004C         Lcd_Write_String@i 004A  
               _TXSTAbits 0098                 _Lcd_Clear 04CE          _Lcd_Write_String 043D  
             _BAUDCTLbits 0187            __end_of_master 04CE       start_initialization 000F  
              ?_USART_set 0052         USART_set@baudrate 0052                ?_Lcd_Clear 0070  
         Lcd_Write_Char@a 0077                  ??_master 0070           Lcd_Write_Char@y 0076  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 004A  
           ??_int_osc_MHz 0073                  ?_Lcd_Cmd 0070               sprintf@flag 0060  
             sprintf@prec 0061          ___lwdiv@dividend 0075          ??_Lcd_Set_Cursor 0077  
                ?___lldiv 004A                  ?___lwdiv 0073                  ?___lwmod 004D  
               __pstrings 03AA               ??_USART_set 0056          ___lwdiv@quotient 004B  
                ?_sprintf 0051         interrupt_function 0004                 clear_ram0 04DB  
                _PIE1bits 008C       __end_of_int_osc_MHz 03AA                  Lcd_Cmd@a 0075  
                _PIR1bits 000C               ??_Lcd_Clear 0076               __stringbase 03AF  
        ??_Lcd_Write_Char 0074                  _Lcd_Init 029A                  _Lcd_Port 0462  
__end_of_Lcd_Write_String 0462        __end_of__stringtab 03B0                sprintf@val 0062  
         ___lwdiv@divisor 0073           ___lwdiv@counter 004A                  __ptext10 043D  
                __ptext11 03E1                  __ptext12 0242                  __ptext13 04CE  
                __ptext14 04A1                  __ptext15 0462                  __ptext16 04B9  
                __ptext17 04E3               _int_osc_MHz 036F                  _read_red 0484  
              _INTCONbits 000B        Lcd_Write_Char@temp 0075                  intlevel1 0000  
               sprintf@ap 005F                 sprintf@sp 0064          ___lwmod@dividend 004F  
        ___lldiv@dividend 004E                 stringcode 03AA                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 004D                  sprintf@c 0065                  sprintf@f 0051  
        ___lldiv@quotient 0074           ___lwmod@divisor 004D           ___lwmod@counter 0079  
                stringdir 03AA                  stringtab 03AA                _USART_read 04E3  
