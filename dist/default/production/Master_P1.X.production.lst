

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Sep 13 21:25:02 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	strings
   460  03A9                     __pstrings:
   461  03A9                     stringtab:
   462  03A9                     __stringtab:
   463  03A9                     stringcode:	
   464                           ;	String table - string pointers are 1 byte each
   465                           
   466  03A9                     stringdir:
   467  03A9  3003               	movlw	high stringdir
   468  03AA  008A               	movwf	10
   469  03AB  0804               	movf	4,w
   470  03AC  0A84               	incf	4,f
   471  03AD  0782               	addwf	2,f
   472  03AE                     __stringbase:
   473  03AE  3400               	retlw	0
   474  03AF                     __end_of__stringtab:
   475  03AF                     _dpowers:
   476  03AF  3401               	retlw	1
   477  03B0  3400               	retlw	0
   478  03B1  340A               	retlw	10
   479  03B2  3400               	retlw	0
   480  03B3  3464               	retlw	100
   481  03B4  3400               	retlw	0
   482  03B5  34E8               	retlw	232
   483  03B6  3403               	retlw	3
   484  03B7  3410               	retlw	16
   485  03B8  3427               	retlw	39
   486  03B9                     __end_of_dpowers:
   487  001A                     _RCREG	set	26
   488  0019                     _TXREG	set	25
   489  0018                     _RCSTAbits	set	24
   490  000B                     _INTCONbits	set	11
   491  000C                     _PIR1bits	set	12
   492  0029                     _RA1	set	41
   493  0028                     _RA0	set	40
   494  002D                     _RA5	set	45
   495  002C                     _RA4	set	44
   496  002B                     _RA3	set	43
   497  002A                     _RA2	set	42
   498  008C                     _PIE1bits	set	140
   499  0099                     _SPBRG	set	153
   500  009A                     _SPBRGH	set	154
   501  0098                     _TXSTAbits	set	152
   502  008F                     _OSCCONbits	set	143
   503  0086                     _TRISB	set	134
   504  0085                     _TRISA	set	133
   505  0187                     _BAUDCTLbits	set	391
   506  0189                     _ANSELH	set	393
   507  0188                     _ANSEL	set	392
   508  03B9                     STR_1:
   509  03B9  3425               	retlw	37	;'%'
   510  03BA  3464               	retlw	100	;'d'
   511  03BB  3425               	retlw	37	;'%'
   512  03BC  3464               	retlw	100	;'d'
   513  03BD  343A               	retlw	58	;':'
   514  03BE  3425               	retlw	37	;'%'
   515  03BF  3464               	retlw	100	;'d'
   516  03C0  3425               	retlw	37	;'%'
   517  03C1  3464               	retlw	100	;'d'
   518  03C2  3420               	retlw	32	;' '
   519  03C3  3409               	retlw	9
   520  03C4  3409               	retlw	9
   521  03C5  3420               	retlw	32	;' '
   522  03C6  344C               	retlw	76	;'L'
   523  03C7  3475               	retlw	117	;'u'
   524  03C8  347A               	retlw	122	;'z'
   525  03C9  343A               	retlw	58	;':'
   526  03CA  3420               	retlw	32	;' '
   527  03CB  3425               	retlw	37	;'%'
   528  03CC  3464               	retlw	100	;'d'
   529  03CD  3400               	retlw	0
   530  03CE                     STR_2:
   531  03CE  344D               	retlw	77	;'M'
   532  03CF  346F               	retlw	111	;'o'
   533  03D0  3476               	retlw	118	;'v'
   534  03D1  343A               	retlw	58	;':'
   535  03D2  3420               	retlw	32	;' '
   536  03D3  3425               	retlw	37	;'%'
   537  03D4  3464               	retlw	100	;'d'
   538  03D5  3420               	retlw	32	;' '
   539  03D6  3409               	retlw	9
   540  03D7  3454               	retlw	84	;'T'
   541  03D8  3465               	retlw	101	;'e'
   542  03D9  346D               	retlw	109	;'m'
   543  03DA  3470               	retlw	112	;'p'
   544  03DB  343A               	retlw	58	;':'
   545  03DC  3420               	retlw	32	;' '
   546  03DD  3425               	retlw	37	;'%'
   547  03DE  3464               	retlw	100	;'d'
   548  03DF  3400               	retlw	0
   549                           
   550                           	psect	cinit
   551  000F                     start_initialization:	
   552                           ; #config settings
   553                           
   554  000F                     __initialization:
   555                           
   556                           ; Clear objects allocated to COMMON
   557  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   558                           
   559                           ; Clear objects allocated to BANK0
   560  0010  1383               	bcf	3,7	;select IRP bank0
   561  0011  3020               	movlw	low __pbssBANK0
   562  0012  0084               	movwf	4
   563  0013  3048               	movlw	low (__pbssBANK0+40)
   564  0014  120A  118A  24BD  120A  118A  	fcall	clear_ram0
   565  0019                     end_of_initialization:	
   566                           ;End of C runtime variable initialization code
   567                           
   568  0019                     __end_of__initialization:
   569  0019  0183               	clrf	3
   570  001A  120A  118A  29E3   	ljmp	_main	;jump to C main() function
   571                           
   572                           	psect	bssCOMMON
   573  007A                     __pbssCOMMON:
   574  007A                     _val:
   575  007A                     	ds	1
   576                           
   577                           	psect	bssBANK0
   578  0020                     __pbssBANK0:
   579  0020                     _srow:
   580  0020                     	ds	20
   581  0034                     _frow:
   582  0034                     	ds	20
   583                           
   584                           	psect	clrtext
   585  04BD                     clear_ram0:	
   586                           ;	Called with FSR containing the base address, and
   587                           ;	W with the last address+1
   588                           
   589  04BD  0064               	clrwdt	;clear the watchdog before getting into this loop
   590  04BE                     clrloop0:
   591  04BE  0180               	clrf	0	;clear RAM location pointed to by FSR
   592  04BF  0A84               	incf	4,f	;increment pointer
   593  04C0  0604               	xorwf	4,w	;XOR with final address
   594  04C1  1903               	btfsc	3,2	;have we reached the end yet?
   595  04C2  3400               	retlw	0	;all done for this memory range, return
   596  04C3  0604               	xorwf	4,w	;XOR again to restore value
   597  04C4  2CBE               	goto	clrloop0	;do the next byte
   598                           
   599                           	psect	cstackCOMMON
   600  0070                     __pcstackCOMMON:
   601  0070                     ?_USART_read:
   602  0070                     ??_USART_read:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_setup:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_Lcd_Clear:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_Lcd_Write_String:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_int_osc_MHz:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_Lcd_Init:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_master:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ??_master:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_main:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_Lcd_Port:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_Lcd_Cmd:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_Lcd_Write_Char:	
   636                           ; 1 bytes @ 0x0
   637                           
   638                           
   639                           ; 1 bytes @ 0x0
   640  0070                     	ds	3
   641  0073                     ??_int_osc_MHz:
   642  0073                     ??_Lcd_Port:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0073                     ??___lldiv:	
   646                           ; 1 bytes @ 0x3
   647                           
   648  0073                     ?___lwdiv:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0073                     Lcd_Port@a:	
   652                           ; 2 bytes @ 0x3
   653                           
   654  0073                     ___lwdiv@divisor:	
   655                           ; 1 bytes @ 0x3
   656                           
   657                           
   658                           ; 2 bytes @ 0x3
   659  0073                     	ds	1
   660  0074                     ??_Lcd_Cmd:
   661  0074                     ??_Lcd_Write_Char:	
   662                           ; 1 bytes @ 0x4
   663                           
   664  0074                     ___lldiv@quotient:	
   665                           ; 1 bytes @ 0x4
   666                           
   667                           
   668                           ; 4 bytes @ 0x4
   669  0074                     	ds	1
   670  0075                     Lcd_Cmd@a:
   671  0075                     Lcd_Write_Char@temp:	
   672                           ; 1 bytes @ 0x5
   673                           
   674  0075                     int_osc_MHz@freq:	
   675                           ; 1 bytes @ 0x5
   676                           
   677  0075                     ___lwdiv@dividend:	
   678                           ; 1 bytes @ 0x5
   679                           
   680                           
   681                           ; 2 bytes @ 0x5
   682  0075                     	ds	1
   683  0076                     ??_Lcd_Clear:
   684  0076                     ?_Lcd_Set_Cursor:	
   685                           ; 1 bytes @ 0x6
   686                           
   687  0076                     ??_Lcd_Init:	
   688                           ; 1 bytes @ 0x6
   689                           
   690  0076                     Lcd_Set_Cursor@b:	
   691                           ; 1 bytes @ 0x6
   692                           
   693  0076                     Lcd_Write_Char@y:	
   694                           ; 1 bytes @ 0x6
   695                           
   696                           
   697                           ; 1 bytes @ 0x6
   698  0076                     	ds	1
   699  0077                     ??_Lcd_Set_Cursor:
   700  0077                     ??___lwdiv:	
   701                           ; 1 bytes @ 0x7
   702                           
   703  0077                     Lcd_Write_Char@a:	
   704                           ; 1 bytes @ 0x7
   705                           
   706                           
   707                           ; 1 bytes @ 0x7
   708  0077                     	ds	1
   709  0078                     ??_Lcd_Write_String:
   710  0078                     ??___lwmod:	
   711                           ; 1 bytes @ 0x8
   712                           
   713  0078                     ___lldiv@counter:	
   714                           ; 1 bytes @ 0x8
   715                           
   716                           
   717                           ; 1 bytes @ 0x8
   718  0078                     	ds	1
   719  0079                     ??_setup:
   720  0079                     ___lwmod@counter:	
   721                           ; 1 bytes @ 0x9
   722                           
   723                           
   724                           ; 1 bytes @ 0x9
   725  0079                     	ds	1
   726                           
   727                           	psect	cstackBANK0
   728  0048                     __pcstackBANK0:
   729  0048                     ?___lldiv:
   730  0048                     Lcd_Set_Cursor@a:	
   731                           ; 4 bytes @ 0x0
   732                           
   733  0048                     ___lwdiv@counter:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0048                     Lcd_Write_String@i:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0048                     ___lldiv@divisor:	
   740                           ; 2 bytes @ 0x0
   741                           
   742                           
   743                           ; 4 bytes @ 0x0
   744  0048                     	ds	1
   745  0049                     Lcd_Set_Cursor@z:
   746  0049                     ___lwdiv@quotient:	
   747                           ; 1 bytes @ 0x1
   748                           
   749                           
   750                           ; 2 bytes @ 0x1
   751  0049                     	ds	1
   752  004A                     Lcd_Set_Cursor@y:
   753  004A                     Lcd_Write_String@a:	
   754                           ; 1 bytes @ 0x2
   755                           
   756                           
   757                           ; 1 bytes @ 0x2
   758  004A                     	ds	1
   759  004B                     ?___lwmod:
   760  004B                     Lcd_Set_Cursor@temp:	
   761                           ; 2 bytes @ 0x3
   762                           
   763  004B                     ___lwmod@divisor:	
   764                           ; 1 bytes @ 0x3
   765                           
   766                           
   767                           ; 2 bytes @ 0x3
   768  004B                     	ds	1
   769  004C                     ___lldiv@dividend:
   770                           
   771                           ; 4 bytes @ 0x4
   772  004C                     	ds	1
   773  004D                     ___lwmod@dividend:
   774                           
   775                           ; 2 bytes @ 0x5
   776  004D                     	ds	2
   777  004F                     ?_sprintf:
   778  004F                     sprintf@f:	
   779                           ; 2 bytes @ 0x7
   780                           
   781                           
   782                           ; 1 bytes @ 0x7
   783  004F                     	ds	1
   784  0050                     ?_USART_set:
   785  0050                     USART_set@baudrate:	
   786                           ; 1 bytes @ 0x8
   787                           
   788                           
   789                           ; 4 bytes @ 0x8
   790  0050                     	ds	4
   791  0054                     ??_USART_set:
   792                           
   793                           ; 1 bytes @ 0xC
   794  0054                     	ds	6
   795  005A                     ??_sprintf:
   796                           
   797                           ; 1 bytes @ 0x12
   798  005A                     	ds	3
   799  005D                     sprintf@ap:
   800                           
   801                           ; 1 bytes @ 0x15
   802  005D                     	ds	1
   803  005E                     sprintf@flag:
   804                           
   805                           ; 1 bytes @ 0x16
   806  005E                     	ds	1
   807  005F                     sprintf@prec:
   808                           
   809                           ; 1 bytes @ 0x17
   810  005F                     	ds	1
   811  0060                     sprintf@val:
   812                           
   813                           ; 2 bytes @ 0x18
   814  0060                     	ds	2
   815  0062                     sprintf@sp:
   816                           
   817                           ; 1 bytes @ 0x1A
   818  0062                     	ds	1
   819  0063                     sprintf@c:
   820                           
   821                           ; 1 bytes @ 0x1B
   822  0063                     	ds	1
   823  0064                     ??_main:
   824                           
   825                           ; 1 bytes @ 0x1C
   826  0064                     	ds	1
   827                           
   828                           	psect	maintext
   829  01E3                     __pmaintext:	
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 81 in file "main_master_p1.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : B00/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       1       0       0       0
   852 ;;      Totals:         0       1       0       0       0
   853 ;;Total ram usage:        1 bytes
   854 ;; Hardware stack levels required when called: 6
   855 ;; This function calls:
   856 ;;		_Lcd_Clear
   857 ;;		_Lcd_Set_Cursor
   858 ;;		_Lcd_Write_String
   859 ;;		_setup
   860 ;;		_sprintf
   861 ;; This function is called by:
   862 ;;		Startup code after reset
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866  01E3                     _main:	
   867                           ;psect for function _main
   868                           
   869  01E3                     l1646:	
   870                           ;incstack = 0
   871                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   872                           
   873                           
   874                           ;main_master_p1.c: 82:     setup();
   875  01E3  120A  118A  2417  120A  118A  	fcall	_setup
   876  01E8                     l1648:
   877                           
   878                           ;main_master_p1.c: 83:     Lcd_Clear();
   879  01E8  120A  118A  24B0  120A  118A  	fcall	_Lcd_Clear
   880  01ED                     l1650:
   881                           
   882                           ;main_master_p1.c: 85:         sprintf(frow, "%d%d:%d%d \t\t Luz: %d", 2,3,4,2,95);
   883  01ED  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   884  01EE  1283               	bcf	3,5	;RP0=0, select bank0
   885  01EF  1303               	bcf	3,6	;RP1=0, select bank0
   886  01F0  00E4               	movwf	??_main
   887  01F1  0864               	movf	??_main,w
   888  01F2  00CF               	movwf	sprintf@f
   889  01F3  3002               	movlw	2
   890  01F4  00D0               	movwf	?_sprintf+1
   891  01F5  3000               	movlw	0
   892  01F6  00D1               	movwf	?_sprintf+2
   893  01F7  3003               	movlw	3
   894  01F8  00D2               	movwf	?_sprintf+3
   895  01F9  3000               	movlw	0
   896  01FA  00D3               	movwf	?_sprintf+4
   897  01FB  3004               	movlw	4
   898  01FC  00D4               	movwf	?_sprintf+5
   899  01FD  3000               	movlw	0
   900  01FE  00D5               	movwf	?_sprintf+6
   901  01FF  3002               	movlw	2
   902  0200  00D6               	movwf	?_sprintf+7
   903  0201  3000               	movlw	0
   904  0202  00D7               	movwf	?_sprintf+8
   905  0203  305F               	movlw	95
   906  0204  00D8               	movwf	?_sprintf+9
   907  0205  3000               	movlw	0
   908  0206  00D9               	movwf	?_sprintf+10
   909  0207  3034               	movlw	(low (_frow| 0))& (0+255)
   910  0208  120A  118A  201D  120A  118A  	fcall	_sprintf
   911  020D                     l1652:
   912                           
   913                           ;main_master_p1.c: 86:         sprintf(srow, "Mov: %d \tTemp: %d",1,20);
   914  020D  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   915  020E  1283               	bcf	3,5	;RP0=0, select bank0
   916  020F  1303               	bcf	3,6	;RP1=0, select bank0
   917  0210  00E4               	movwf	??_main
   918  0211  0864               	movf	??_main,w
   919  0212  00CF               	movwf	sprintf@f
   920  0213  3001               	movlw	1
   921  0214  00D0               	movwf	?_sprintf+1
   922  0215  3000               	movlw	0
   923  0216  00D1               	movwf	?_sprintf+2
   924  0217  3014               	movlw	20
   925  0218  00D2               	movwf	?_sprintf+3
   926  0219  3000               	movlw	0
   927  021A  00D3               	movwf	?_sprintf+4
   928  021B  3020               	movlw	(low (_srow| 0))& (0+255)
   929  021C  120A  118A  201D  120A  118A  	fcall	_sprintf
   930  0221                     l1654:
   931                           
   932                           ;main_master_p1.c: 87:         Lcd_Set_Cursor(1,1);
   933  0221  01F6               	clrf	Lcd_Set_Cursor@b
   934  0222  0AF6               	incf	Lcd_Set_Cursor@b,f
   935  0223  3001               	movlw	1
   936  0224  120A  118A  2241  120A  118A  	fcall	_Lcd_Set_Cursor
   937                           
   938                           ;main_master_p1.c: 88:         Lcd_Write_String(frow);
   939  0229  3034               	movlw	(low (_frow| 0))& (0+255)
   940  022A  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_String
   941  022F                     l1656:
   942                           
   943                           ;main_master_p1.c: 89:         Lcd_Set_Cursor(2,1);
   944  022F  01F6               	clrf	Lcd_Set_Cursor@b
   945  0230  0AF6               	incf	Lcd_Set_Cursor@b,f
   946  0231  3002               	movlw	2
   947  0232  120A  118A  2241  120A  118A  	fcall	_Lcd_Set_Cursor
   948  0237                     l1658:
   949                           
   950                           ;main_master_p1.c: 90:         Lcd_Write_String(srow);
   951  0237  3020               	movlw	(low (_srow| 0))& (0+255)
   952  0238  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_String
   953  023D  29ED               	goto	l1650
   954  023E  120A  118A  280C   	ljmp	start
   955  0241                     __end_of_main:
   956                           
   957                           	psect	text1
   958  001D                     __ptext1:	
   959 ;; *************** function _sprintf *****************
   960 ;; Defined at:
   961 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  sp              1    wreg     PTR unsigned char 
   964 ;;		 -> srow(20), frow(20), 
   965 ;;  f               1    7[BANK0 ] PTR const unsigned char 
   966 ;;		 -> STR_2(18), STR_1(21), 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  sp              1   26[BANK0 ] PTR unsigned char 
   969 ;;		 -> srow(20), frow(20), 
   970 ;;  tmpval          4    0        struct .
   971 ;;  val             2   24[BANK0 ] unsigned int 
   972 ;;  cp              2    0        PTR const unsigned char 
   973 ;;  len             2    0        unsigned int 
   974 ;;  c               1   27[BANK0 ] unsigned char 
   975 ;;  prec            1   23[BANK0 ] char 
   976 ;;  flag            1   22[BANK0 ] unsigned char 
   977 ;;  ap              1   21[BANK0 ] PTR void [1]
   978 ;;		 -> ?_sprintf(2), 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  2    7[BANK0 ] int 
   981 ;; Registers used:
   982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0      11       0       0       0
   989 ;;      Locals:         0       7       0       0       0
   990 ;;      Temps:          0       3       0       0       0
   991 ;;      Totals:         0      21       0       0       0
   992 ;;Total ram usage:       21 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 3
   995 ;; This function calls:
   996 ;;		___lwdiv
   997 ;;		___lwmod
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003  001D                     _sprintf:	
  1004                           ;psect for function _sprintf
  1005                           
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1009                           ;sprintf@sp stored from wreg
  1010  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1011  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1012  001F  00E2               	movwf	sprintf@sp
  1013  0020                     l1584:
  1014  0020  3050               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1015  0021  00DA               	movwf	??_sprintf
  1016  0022  085A               	movf	??_sprintf,w
  1017  0023  00DD               	movwf	sprintf@ap
  1018  0024  28F0               	goto	l1636
  1019  0025                     l1586:
  1020  0025  3025               	movlw	37
  1021  0026  0663               	xorwf	sprintf@c,w
  1022  0027  1903               	btfsc	3,2
  1023  0028  282A               	goto	u1071
  1024  0029  282B               	goto	u1070
  1025  002A                     u1071:
  1026  002A  2837               	goto	l1592
  1027  002B                     u1070:
  1028  002B                     l1588:
  1029  002B  0863               	movf	sprintf@c,w
  1030  002C  00DA               	movwf	??_sprintf
  1031  002D  0862               	movf	sprintf@sp,w
  1032  002E  0084               	movwf	4
  1033  002F  085A               	movf	??_sprintf,w
  1034  0030  1383               	bcf	3,7	;select IRP bank0
  1035  0031  0080               	movwf	0
  1036  0032                     l1590:
  1037  0032  3001               	movlw	1
  1038  0033  00DA               	movwf	??_sprintf
  1039  0034  085A               	movf	??_sprintf,w
  1040  0035  07E2               	addwf	sprintf@sp,f
  1041  0036  28F0               	goto	l1636
  1042  0037                     l1592:
  1043  0037  01DE               	clrf	sprintf@flag
  1044  0038                     l1596:
  1045  0038  3001               	movlw	1
  1046  0039  07CF               	addwf	sprintf@f,f
  1047  003A  30FF               	movlw	-1
  1048  003B  074F               	addwf	sprintf@f,w
  1049  003C  0084               	movwf	4
  1050  003D  120A  118A  23A9  120A  118A  	fcall	stringdir
  1051  0042  00E3               	movwf	sprintf@c
  1052  0043  00DA               	movwf	??_sprintf
  1053  0044  01DB               	clrf	??_sprintf+1
  1054                           
  1055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1056                           ; Switch size 1, requested type "simple"
  1057                           ; Number of cases is 1, Range of values is 0 to 0
  1058                           ; switch strategies available:
  1059                           ; Name         Instructions Cycles
  1060                           ; simple_byte            4     3 (average)
  1061                           ; direct_byte           11     8 (fixed)
  1062                           ; jumptable            260     6 (fixed)
  1063                           ;	Chosen strategy is simple_byte
  1064  0045  085B               	movf	??_sprintf+1,w
  1065  0046  3A00               	xorlw	0	; case 0
  1066  0047  1903               	skipnz
  1067  0048  284A               	goto	l1700
  1068  0049  28F0               	goto	l1636
  1069  004A                     l1700:
  1070                           
  1071                           ; Switch size 1, requested type "simple"
  1072                           ; Number of cases is 3, Range of values is 0 to 105
  1073                           ; switch strategies available:
  1074                           ; Name         Instructions Cycles
  1075                           ; simple_byte           10     6 (average)
  1076                           ; jumptable            260     6 (fixed)
  1077                           ;	Chosen strategy is simple_byte
  1078  004A  085A               	movf	??_sprintf,w
  1079  004B  3A00               	xorlw	0	; case 0
  1080  004C  1903               	skipnz
  1081  004D  2902               	goto	l1638
  1082  004E  3A64               	xorlw	100	; case 100
  1083  004F  1903               	skipnz
  1084  0050  2855               	goto	l1598
  1085  0051  3A0D               	xorlw	13	; case 105
  1086  0052  1903               	skipnz
  1087  0053  2855               	goto	l1598
  1088  0054  28F0               	goto	l1636
  1089  0055                     l1598:
  1090  0055  085D               	movf	sprintf@ap,w
  1091  0056  0084               	movwf	4
  1092  0057  1383               	bcf	3,7	;select IRP bank0
  1093  0058  0800               	movf	0,w
  1094  0059  00E0               	movwf	sprintf@val
  1095  005A  0A84               	incf	4,f
  1096  005B  0800               	movf	0,w
  1097  005C  00E1               	movwf	sprintf@val+1
  1098  005D                     l1600:
  1099  005D  3002               	movlw	2
  1100  005E  00DA               	movwf	??_sprintf
  1101  005F  085A               	movf	??_sprintf,w
  1102  0060  07DD               	addwf	sprintf@ap,f
  1103  0061                     l1602:
  1104  0061  1FE1               	btfss	sprintf@val+1,7
  1105  0062  2864               	goto	u1081
  1106  0063  2865               	goto	u1080
  1107  0064                     u1081:
  1108  0064  286E               	goto	l1608
  1109  0065                     u1080:
  1110  0065                     l1604:
  1111  0065  3003               	movlw	3
  1112  0066  00DA               	movwf	??_sprintf
  1113  0067  085A               	movf	??_sprintf,w
  1114  0068  04DE               	iorwf	sprintf@flag,f
  1115  0069                     l1606:
  1116  0069  09E0               	comf	sprintf@val,f
  1117  006A  09E1               	comf	sprintf@val+1,f
  1118  006B  0AE0               	incf	sprintf@val,f
  1119  006C  1903               	skipnz
  1120  006D  0AE1               	incf	sprintf@val+1,f
  1121  006E                     l1608:
  1122  006E  01E3               	clrf	sprintf@c
  1123  006F  0AE3               	incf	sprintf@c,f
  1124  0070                     l1614:
  1125  0070  0863               	movf	sprintf@c,w
  1126  0071  00DA               	movwf	??_sprintf
  1127  0072  075A               	addwf	??_sprintf,w
  1128  0073  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1129  0074  0084               	movwf	4
  1130  0075  120A  118A  23A9  120A  118A  	fcall	stringdir
  1131  007A  00DB               	movwf	??_sprintf+1
  1132  007B  120A  118A  23A9  120A  118A  	fcall	stringdir
  1133  0080  00DC               	movwf	??_sprintf+2
  1134  0081  085C               	movf	??_sprintf+2,w
  1135  0082  0261               	subwf	sprintf@val+1,w
  1136  0083  1D03               	skipz
  1137  0084  2887               	goto	u1095
  1138  0085  085B               	movf	??_sprintf+1,w
  1139  0086  0260               	subwf	sprintf@val,w
  1140  0087                     u1095:
  1141  0087  1803               	skipnc
  1142  0088  288A               	goto	u1091
  1143  0089  288B               	goto	u1090
  1144  008A                     u1091:
  1145  008A  288C               	goto	l1618
  1146  008B                     u1090:
  1147  008B  2896               	goto	l1620
  1148  008C                     l1618:
  1149  008C  3001               	movlw	1
  1150  008D  00DA               	movwf	??_sprintf
  1151  008E  085A               	movf	??_sprintf,w
  1152  008F  07E3               	addwf	sprintf@c,f
  1153  0090  3005               	movlw	5
  1154  0091  0663               	xorwf	sprintf@c,w
  1155  0092  1D03               	btfss	3,2
  1156  0093  2895               	goto	u1101
  1157  0094  2896               	goto	u1100
  1158  0095                     u1101:
  1159  0095  2870               	goto	l1614
  1160  0096                     u1100:
  1161  0096                     l1620:
  1162  0096  085E               	movf	sprintf@flag,w
  1163  0097  3903               	andlw	3
  1164  0098  1903               	btfsc	3,2
  1165  0099  289B               	goto	u1111
  1166  009A  289C               	goto	u1110
  1167  009B                     u1111:
  1168  009B  28A7               	goto	l1626
  1169  009C                     u1110:
  1170  009C                     l1622:
  1171  009C  302D               	movlw	45
  1172  009D  00DA               	movwf	??_sprintf
  1173  009E  0862               	movf	sprintf@sp,w
  1174  009F  0084               	movwf	4
  1175  00A0  085A               	movf	??_sprintf,w
  1176  00A1  1383               	bcf	3,7	;select IRP bank0
  1177  00A2  0080               	movwf	0
  1178  00A3                     l1624:
  1179  00A3  3001               	movlw	1
  1180  00A4  00DA               	movwf	??_sprintf
  1181  00A5  085A               	movf	??_sprintf,w
  1182  00A6  07E2               	addwf	sprintf@sp,f
  1183  00A7                     l1626:
  1184  00A7  0863               	movf	sprintf@c,w
  1185  00A8  00DA               	movwf	??_sprintf
  1186  00A9  085A               	movf	??_sprintf,w
  1187  00AA  00DF               	movwf	sprintf@prec
  1188  00AB  28E7               	goto	l1634
  1189  00AC                     l1628:
  1190  00AC  300A               	movlw	10
  1191  00AD  00CB               	movwf	___lwmod@divisor
  1192  00AE  3000               	movlw	0
  1193  00AF  00CC               	movwf	___lwmod@divisor+1
  1194  00B0  085F               	movf	sprintf@prec,w
  1195  00B1  00DA               	movwf	??_sprintf
  1196  00B2  075A               	addwf	??_sprintf,w
  1197  00B3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1198  00B4  0084               	movwf	4
  1199  00B5  120A  118A  23A9  120A  118A  	fcall	stringdir
  1200  00BA  00F3               	movwf	___lwdiv@divisor
  1201  00BB  120A  118A  23A9  120A  118A  	fcall	stringdir
  1202  00C0  00F4               	movwf	___lwdiv@divisor+1
  1203  00C1  0861               	movf	sprintf@val+1,w
  1204  00C2  00F6               	movwf	___lwdiv@dividend+1
  1205  00C3  0860               	movf	sprintf@val,w
  1206  00C4  00F5               	movwf	___lwdiv@dividend
  1207  00C5  120A  118A  22EC  120A  118A  	fcall	___lwdiv
  1208  00CA  0874               	movf	?___lwdiv+1,w
  1209  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1210  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1211  00CD  00CE               	movwf	___lwmod@dividend+1
  1212  00CE  0873               	movf	?___lwdiv,w
  1213  00CF  00CD               	movwf	___lwmod@dividend
  1214  00D0  120A  118A  2332  120A  118A  	fcall	___lwmod
  1215  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1216  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1217  00D7  084B               	movf	?___lwmod,w
  1218  00D8  3E30               	addlw	48
  1219  00D9  00DB               	movwf	??_sprintf+1
  1220  00DA  085B               	movf	??_sprintf+1,w
  1221  00DB  00E3               	movwf	sprintf@c
  1222  00DC                     l1630:
  1223  00DC  0863               	movf	sprintf@c,w
  1224  00DD  00DA               	movwf	??_sprintf
  1225  00DE  0862               	movf	sprintf@sp,w
  1226  00DF  0084               	movwf	4
  1227  00E0  085A               	movf	??_sprintf,w
  1228  00E1  1383               	bcf	3,7	;select IRP bank0
  1229  00E2  0080               	movwf	0
  1230  00E3                     l1632:
  1231  00E3  3001               	movlw	1
  1232  00E4  00DA               	movwf	??_sprintf
  1233  00E5  085A               	movf	??_sprintf,w
  1234  00E6  07E2               	addwf	sprintf@sp,f
  1235  00E7                     l1634:
  1236  00E7  30FF               	movlw	255
  1237  00E8  00DA               	movwf	??_sprintf
  1238  00E9  085A               	movf	??_sprintf,w
  1239  00EA  07DF               	addwf	sprintf@prec,f
  1240  00EB  0A5F               	incf	sprintf@prec,w
  1241  00EC  1D03               	btfss	3,2
  1242  00ED  28EF               	goto	u1121
  1243  00EE  28F0               	goto	u1120
  1244  00EF                     u1121:
  1245  00EF  28AC               	goto	l1628
  1246  00F0                     u1120:
  1247  00F0                     l1636:
  1248  00F0  3001               	movlw	1
  1249  00F1  07CF               	addwf	sprintf@f,f
  1250  00F2  30FF               	movlw	-1
  1251  00F3  074F               	addwf	sprintf@f,w
  1252  00F4  0084               	movwf	4
  1253  00F5  120A  118A  23A9  120A  118A  	fcall	stringdir
  1254  00FA  00DA               	movwf	??_sprintf
  1255  00FB  085A               	movf	??_sprintf,w
  1256  00FC  00E3               	movwf	sprintf@c
  1257  00FD  0863               	movf	sprintf@c,w
  1258  00FE  1D03               	btfss	3,2
  1259  00FF  2901               	goto	u1131
  1260  0100  2902               	goto	u1130
  1261  0101                     u1131:
  1262  0101  2825               	goto	l1586
  1263  0102                     u1130:
  1264  0102                     l1638:
  1265  0102  0862               	movf	sprintf@sp,w
  1266  0103  0084               	movwf	4
  1267  0104  1383               	bcf	3,7	;select IRP bank0
  1268  0105  0180               	clrf	0
  1269  0106                     l264:
  1270  0106  0008               	return
  1271  0107                     __end_of_sprintf:
  1272                           
  1273                           	psect	text2
  1274  0332                     __ptext2:	
  1275 ;; *************** function ___lwmod *****************
  1276 ;; Defined at:
  1277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  divisor         2    3[BANK0 ] unsigned int 
  1280 ;;  dividend        2    5[BANK0 ] unsigned int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  counter         1    9[COMMON] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2    3[BANK0 ] unsigned int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       4       0       0       0
  1293 ;;      Locals:         1       0       0       0       0
  1294 ;;      Temps:          1       0       0       0       0
  1295 ;;      Totals:         2       4       0       0       0
  1296 ;;Total ram usage:        6 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 2
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_sprintf
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306  0332                     ___lwmod:	
  1307                           ;psect for function ___lwmod
  1308                           
  1309  0332                     l1542:	
  1310                           ;incstack = 0
  1311                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1312                           
  1313  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0334  084B               	movf	___lwmod@divisor,w
  1316  0335  044C               	iorwf	___lwmod@divisor+1,w
  1317  0336  1903               	btfsc	3,2
  1318  0337  2B39               	goto	u1011
  1319  0338  2B3A               	goto	u1010
  1320  0339                     u1011:
  1321  0339  2B69               	goto	l1560
  1322  033A                     u1010:
  1323  033A                     l1544:
  1324  033A  01F9               	clrf	___lwmod@counter
  1325  033B  0AF9               	incf	___lwmod@counter,f
  1326  033C  2B48               	goto	l1550
  1327  033D                     l1546:
  1328  033D  3001               	movlw	1
  1329  033E                     u1025:
  1330  033E  1003               	clrc
  1331  033F  0DCB               	rlf	___lwmod@divisor,f
  1332  0340  0DCC               	rlf	___lwmod@divisor+1,f
  1333  0341  3EFF               	addlw	-1
  1334  0342  1D03               	skipz
  1335  0343  2B3E               	goto	u1025
  1336  0344                     l1548:
  1337  0344  3001               	movlw	1
  1338  0345  00F8               	movwf	??___lwmod
  1339  0346  0878               	movf	??___lwmod,w
  1340  0347  07F9               	addwf	___lwmod@counter,f
  1341  0348                     l1550:
  1342  0348  1FCC               	btfss	___lwmod@divisor+1,7
  1343  0349  2B4B               	goto	u1031
  1344  034A  2B4C               	goto	u1030
  1345  034B                     u1031:
  1346  034B  2B3D               	goto	l1546
  1347  034C                     u1030:
  1348  034C                     l1552:
  1349  034C  084C               	movf	___lwmod@divisor+1,w
  1350  034D  024E               	subwf	___lwmod@dividend+1,w
  1351  034E  1D03               	skipz
  1352  034F  2B52               	goto	u1045
  1353  0350  084B               	movf	___lwmod@divisor,w
  1354  0351  024D               	subwf	___lwmod@dividend,w
  1355  0352                     u1045:
  1356  0352  1C03               	skipc
  1357  0353  2B55               	goto	u1041
  1358  0354  2B56               	goto	u1040
  1359  0355                     u1041:
  1360  0355  2B5C               	goto	l1556
  1361  0356                     u1040:
  1362  0356                     l1554:
  1363  0356  084B               	movf	___lwmod@divisor,w
  1364  0357  02CD               	subwf	___lwmod@dividend,f
  1365  0358  084C               	movf	___lwmod@divisor+1,w
  1366  0359  1C03               	skipc
  1367  035A  03CE               	decf	___lwmod@dividend+1,f
  1368  035B  02CE               	subwf	___lwmod@dividend+1,f
  1369  035C                     l1556:
  1370  035C  3001               	movlw	1
  1371  035D                     u1055:
  1372  035D  1003               	clrc
  1373  035E  0CCC               	rrf	___lwmod@divisor+1,f
  1374  035F  0CCB               	rrf	___lwmod@divisor,f
  1375  0360  3EFF               	addlw	-1
  1376  0361  1D03               	skipz
  1377  0362  2B5D               	goto	u1055
  1378  0363                     l1558:
  1379  0363  3001               	movlw	1
  1380  0364  02F9               	subwf	___lwmod@counter,f
  1381  0365  1D03               	btfss	3,2
  1382  0366  2B68               	goto	u1061
  1383  0367  2B69               	goto	u1060
  1384  0368                     u1061:
  1385  0368  2B4C               	goto	l1552
  1386  0369                     u1060:
  1387  0369                     l1560:
  1388  0369  084E               	movf	___lwmod@dividend+1,w
  1389  036A  00CC               	movwf	?___lwmod+1
  1390  036B  084D               	movf	___lwmod@dividend,w
  1391  036C  00CB               	movwf	?___lwmod
  1392  036D                     l550:
  1393  036D  0008               	return
  1394  036E                     __end_of___lwmod:
  1395                           
  1396                           	psect	text3
  1397  02EC                     __ptext3:	
  1398 ;; *************** function ___lwdiv *****************
  1399 ;; Defined at:
  1400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  divisor         2    3[COMMON] unsigned int 
  1403 ;;  dividend        2    5[COMMON] unsigned int 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  quotient        2    1[BANK0 ] unsigned int 
  1406 ;;  counter         1    0[BANK0 ] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2    3[COMMON] unsigned int 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         4       0       0       0       0
  1417 ;;      Locals:         0       3       0       0       0
  1418 ;;      Temps:          1       0       0       0       0
  1419 ;;      Totals:         5       3       0       0       0
  1420 ;;Total ram usage:        8 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 2
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_sprintf
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430  02EC                     ___lwdiv:	
  1431                           ;psect for function ___lwdiv
  1432                           
  1433  02EC                     l1516:	
  1434                           ;incstack = 0
  1435                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1436                           
  1437  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1438  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1439  02EE  01C9               	clrf	___lwdiv@quotient
  1440  02EF  01CA               	clrf	___lwdiv@quotient+1
  1441  02F0                     l1518:
  1442  02F0  0873               	movf	___lwdiv@divisor,w
  1443  02F1  0474               	iorwf	___lwdiv@divisor+1,w
  1444  02F2  1903               	btfsc	3,2
  1445  02F3  2AF5               	goto	u941
  1446  02F4  2AF6               	goto	u940
  1447  02F5                     u941:
  1448  02F5  2B2D               	goto	l1538
  1449  02F6                     u940:
  1450  02F6                     l1520:
  1451  02F6  01C8               	clrf	___lwdiv@counter
  1452  02F7  0AC8               	incf	___lwdiv@counter,f
  1453  02F8  2B04               	goto	l1526
  1454  02F9                     l1522:
  1455  02F9  3001               	movlw	1
  1456  02FA                     u955:
  1457  02FA  1003               	clrc
  1458  02FB  0DF3               	rlf	___lwdiv@divisor,f
  1459  02FC  0DF4               	rlf	___lwdiv@divisor+1,f
  1460  02FD  3EFF               	addlw	-1
  1461  02FE  1D03               	skipz
  1462  02FF  2AFA               	goto	u955
  1463  0300                     l1524:
  1464  0300  3001               	movlw	1
  1465  0301  00F7               	movwf	??___lwdiv
  1466  0302  0877               	movf	??___lwdiv,w
  1467  0303  07C8               	addwf	___lwdiv@counter,f
  1468  0304                     l1526:
  1469  0304  1FF4               	btfss	___lwdiv@divisor+1,7
  1470  0305  2B07               	goto	u961
  1471  0306  2B08               	goto	u960
  1472  0307                     u961:
  1473  0307  2AF9               	goto	l1522
  1474  0308                     u960:
  1475  0308                     l1528:
  1476  0308  3001               	movlw	1
  1477  0309                     u975:
  1478  0309  1003               	clrc
  1479  030A  0DC9               	rlf	___lwdiv@quotient,f
  1480  030B  0DCA               	rlf	___lwdiv@quotient+1,f
  1481  030C  3EFF               	addlw	-1
  1482  030D  1D03               	skipz
  1483  030E  2B09               	goto	u975
  1484  030F  0874               	movf	___lwdiv@divisor+1,w
  1485  0310  0276               	subwf	___lwdiv@dividend+1,w
  1486  0311  1D03               	skipz
  1487  0312  2B15               	goto	u985
  1488  0313  0873               	movf	___lwdiv@divisor,w
  1489  0314  0275               	subwf	___lwdiv@dividend,w
  1490  0315                     u985:
  1491  0315  1C03               	skipc
  1492  0316  2B18               	goto	u981
  1493  0317  2B19               	goto	u980
  1494  0318                     u981:
  1495  0318  2B20               	goto	l1534
  1496  0319                     u980:
  1497  0319                     l1530:
  1498  0319  0873               	movf	___lwdiv@divisor,w
  1499  031A  02F5               	subwf	___lwdiv@dividend,f
  1500  031B  0874               	movf	___lwdiv@divisor+1,w
  1501  031C  1C03               	skipc
  1502  031D  03F6               	decf	___lwdiv@dividend+1,f
  1503  031E  02F6               	subwf	___lwdiv@dividend+1,f
  1504  031F                     l1532:
  1505  031F  1449               	bsf	___lwdiv@quotient,0
  1506  0320                     l1534:
  1507  0320  3001               	movlw	1
  1508  0321                     u995:
  1509  0321  1003               	clrc
  1510  0322  0CF4               	rrf	___lwdiv@divisor+1,f
  1511  0323  0CF3               	rrf	___lwdiv@divisor,f
  1512  0324  3EFF               	addlw	-1
  1513  0325  1D03               	skipz
  1514  0326  2B21               	goto	u995
  1515  0327                     l1536:
  1516  0327  3001               	movlw	1
  1517  0328  02C8               	subwf	___lwdiv@counter,f
  1518  0329  1D03               	btfss	3,2
  1519  032A  2B2C               	goto	u1001
  1520  032B  2B2D               	goto	u1000
  1521  032C                     u1001:
  1522  032C  2B08               	goto	l1528
  1523  032D                     u1000:
  1524  032D                     l1538:
  1525  032D  084A               	movf	___lwdiv@quotient+1,w
  1526  032E  00F4               	movwf	?___lwdiv+1
  1527  032F  0849               	movf	___lwdiv@quotient,w
  1528  0330  00F3               	movwf	?___lwdiv
  1529  0331                     l540:
  1530  0331  0008               	return
  1531  0332                     __end_of___lwdiv:
  1532                           
  1533                           	psect	text4
  1534  0417                     __ptext4:	
  1535 ;; *************** function _setup *****************
  1536 ;; Defined at:
  1537 ;;		line 98 in file "main_master_p1.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 5
  1558 ;; This function calls:
  1559 ;;		_Lcd_Init
  1560 ;;		_USART_set
  1561 ;;		_int_osc_MHz
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567  0417                     _setup:	
  1568                           ;psect for function _setup
  1569                           
  1570  0417                     l1564:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1573                           
  1574                           
  1575                           ;main_master_p1.c: 99:     int_osc_MHz(1);
  1576  0417  3001               	movlw	1
  1577  0418  120A  118A  236E  120A  118A  	fcall	_int_osc_MHz
  1578  041D                     l1566:
  1579                           
  1580                           ;main_master_p1.c: 102:     ANSEL = 0;
  1581  041D  1683               	bsf	3,5	;RP0=1, select bank3
  1582  041E  1703               	bsf	3,6	;RP1=1, select bank3
  1583  041F  0188               	clrf	8	;volatile
  1584  0420                     l1568:
  1585                           
  1586                           ;main_master_p1.c: 103:     ANSELH = 0;
  1587  0420  0189               	clrf	9	;volatile
  1588  0421                     l1570:
  1589                           
  1590                           ;main_master_p1.c: 105:     TRISA = 0;
  1591  0421  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0422  1303               	bcf	3,6	;RP1=0, select bank1
  1593  0423  0185               	clrf	5	;volatile
  1594  0424                     l1572:
  1595                           
  1596                           ;main_master_p1.c: 106:     TRISB = 0;
  1597  0424  0186               	clrf	6	;volatile
  1598  0425                     l1574:
  1599                           
  1600                           ;main_master_p1.c: 108:     Lcd_Init();
  1601  0425  120A  118A  2299  120A  118A  	fcall	_Lcd_Init
  1602  042A                     l1576:
  1603                           
  1604                           ;main_master_p1.c: 109:     USART_set(9600);
  1605  042A  3000               	movlw	0
  1606  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1607  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1608  042D  00D3               	movwf	USART_set@baudrate+3
  1609  042E  3000               	movlw	0
  1610  042F  00D2               	movwf	USART_set@baudrate+2
  1611  0430  3025               	movlw	37
  1612  0431  00D1               	movwf	USART_set@baudrate+1
  1613  0432  3080               	movlw	128
  1614  0433  00D0               	movwf	USART_set@baudrate
  1615  0434  120A  118A  2107  120A  118A  	fcall	_USART_set
  1616  0439                     l1578:
  1617                           
  1618                           ;main_master_p1.c: 112:     INTCONbits.GIE = 1;
  1619  0439  178B               	bsf	11,7	;volatile
  1620  043A                     l1580:
  1621                           
  1622                           ;main_master_p1.c: 113:     INTCONbits.PEIE = 1;
  1623  043A  170B               	bsf	11,6	;volatile
  1624  043B                     l53:
  1625  043B  0008               	return
  1626  043C                     __end_of_setup:
  1627                           
  1628                           	psect	text5
  1629  036E                     __ptext5:	
  1630 ;; *************** function _int_osc_MHz *****************
  1631 ;; Defined at:
  1632 ;;		line 13 in file "osc.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  freq            1    wreg     unsigned char 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  freq            1    5[COMMON] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         1       0       0       0       0
  1648 ;;      Temps:          2       0       0       0       0
  1649 ;;      Totals:         3       0       0       0       0
  1650 ;;Total ram usage:        3 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 2
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_setup
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660  036E                     _int_osc_MHz:	
  1661                           ;psect for function _int_osc_MHz
  1662                           
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  1666                           ;int_osc_MHz@freq stored from wreg
  1667  036E  00F5               	movwf	int_osc_MHz@freq
  1668  036F                     l818:
  1669                           
  1670                           ;osc.c: 14:     switch(freq){
  1671  036F  2B91               	goto	l832
  1672  0370                     l820:
  1673                           
  1674                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  1675  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1677  0372  080F               	movf	15,w	;volatile
  1678  0373  398F               	andlw	-113
  1679  0374  3840               	iorlw	64
  1680  0375  008F               	movwf	15	;volatile
  1681                           
  1682                           ;osc.c: 17:             break;
  1683  0376  2BA7               	goto	l115
  1684  0377                     l822:
  1685                           
  1686                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  1687  0377  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0378  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0379  080F               	movf	15,w	;volatile
  1690  037A  398F               	andlw	-113
  1691  037B  3850               	iorlw	80
  1692  037C  008F               	movwf	15	;volatile
  1693                           
  1694                           ;osc.c: 20:             break;
  1695  037D  2BA7               	goto	l115
  1696  037E                     l824:
  1697                           
  1698                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  1699  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1700  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0380  080F               	movf	15,w	;volatile
  1702  0381  398F               	andlw	-113
  1703  0382  3860               	iorlw	96
  1704  0383  008F               	movwf	15	;volatile
  1705                           
  1706                           ;osc.c: 23:             break;
  1707  0384  2BA7               	goto	l115
  1708  0385                     l826:
  1709                           
  1710                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  1711  0385  3070               	movlw	112
  1712  0386  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0387  1303               	bcf	3,6	;RP1=0, select bank1
  1714  0388  048F               	iorwf	15,f	;volatile
  1715                           
  1716                           ;osc.c: 26:             break;
  1717  0389  2BA7               	goto	l115
  1718  038A                     l828:
  1719                           
  1720                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  1721  038A  1683               	bsf	3,5	;RP0=1, select bank1
  1722  038B  1303               	bcf	3,6	;RP1=0, select bank1
  1723  038C  080F               	movf	15,w	;volatile
  1724  038D  398F               	andlw	-113
  1725  038E  3860               	iorlw	96
  1726  038F  008F               	movwf	15	;volatile
  1727                           
  1728                           ;osc.c: 29:             break;
  1729  0390  2BA7               	goto	l115
  1730  0391                     l832:
  1731  0391  0875               	movf	int_osc_MHz@freq,w
  1732  0392  00F3               	movwf	??_int_osc_MHz
  1733  0393  01F4               	clrf	??_int_osc_MHz+1
  1734                           
  1735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1736                           ; Switch size 1, requested type "simple"
  1737                           ; Number of cases is 1, Range of values is 0 to 0
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte            4     3 (average)
  1741                           ; direct_byte           11     8 (fixed)
  1742                           ; jumptable            260     6 (fixed)
  1743                           ;	Chosen strategy is simple_byte
  1744  0394  0874               	movf	??_int_osc_MHz+1,w
  1745  0395  3A00               	xorlw	0	; case 0
  1746  0396  1903               	skipnz
  1747  0397  2B99               	goto	l1702
  1748  0398  2B8A               	goto	l828
  1749  0399                     l1702:
  1750                           
  1751                           ; Switch size 1, requested type "simple"
  1752                           ; Number of cases is 4, Range of values is 1 to 8
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte           13     7 (average)
  1756                           ; direct_byte           35    11 (fixed)
  1757                           ; jumptable            263     9 (fixed)
  1758                           ;	Chosen strategy is simple_byte
  1759  0399  0873               	movf	??_int_osc_MHz,w
  1760  039A  3A01               	xorlw	1	; case 1
  1761  039B  1903               	skipnz
  1762  039C  2B70               	goto	l820
  1763  039D  3A03               	xorlw	3	; case 2
  1764  039E  1903               	skipnz
  1765  039F  2B77               	goto	l822
  1766  03A0  3A06               	xorlw	6	; case 4
  1767  03A1  1903               	skipnz
  1768  03A2  2B7E               	goto	l824
  1769  03A3  3A0C               	xorlw	12	; case 8
  1770  03A4  1903               	skipnz
  1771  03A5  2B85               	goto	l826
  1772  03A6  2B8A               	goto	l828
  1773  03A7                     l115:
  1774                           
  1775                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  1776  03A7  140F               	bsf	15,0	;volatile
  1777  03A8                     l120:
  1778  03A8  0008               	return
  1779  03A9                     __end_of_int_osc_MHz:
  1780                           
  1781                           	psect	text6
  1782  0107                     __ptext6:	
  1783 ;; *************** function _USART_set *****************
  1784 ;; Defined at:
  1785 ;;		line 12 in file "USART.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  baudrate        4    8[BANK0 ] const unsigned long 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       4       0       0       0
  1800 ;;      Locals:         0       0       0       0       0
  1801 ;;      Temps:          0      12       0       0       0
  1802 ;;      Totals:         0      16       0       0       0
  1803 ;;Total ram usage:       16 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 3
  1806 ;; This function calls:
  1807 ;;		___lldiv
  1808 ;; This function is called by:
  1809 ;;		_setup
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813  0107                     _USART_set:	
  1814                           ;psect for function _USART_set
  1815                           
  1816  0107                     l1496:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  1819                           
  1820                           
  1821                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          5:     TXSTAbits.BRGH = 1;
  1822  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1824  0109  1518               	bsf	24,2	;volatile
  1825                           
  1826                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  1827  010A  1683               	bsf	3,5	;RP0=1, select bank3
  1828  010B  1703               	bsf	3,6	;RP1=1, select bank3
  1829  010C  1587               	bsf	7,3	;volatile
  1830  010D                     l1498:
  1831                           
  1832                           ;USART.c: 17:     SPBRGH = 0;
  1833  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1834  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1835  010F  019A               	clrf	26	;volatile
  1836  0110                     l1500:
  1837                           
  1838                           ;USART.c: 18:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  1839  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0112  0850               	movf	USART_set@baudrate,w
  1842  0113  00D4               	movwf	??_USART_set
  1843  0114  0851               	movf	USART_set@baudrate+1,w
  1844  0115  00D5               	movwf	??_USART_set+1
  1845  0116  0852               	movf	USART_set@baudrate+2,w
  1846  0117  00D6               	movwf	??_USART_set+2
  1847  0118  0853               	movf	USART_set@baudrate+3,w
  1848  0119  00D7               	movwf	??_USART_set+3
  1849  011A  3002               	movlw	2
  1850  011B                     u915:
  1851  011B  1003               	clrc
  1852  011C  0DD4               	rlf	??_USART_set,f
  1853  011D  0DD5               	rlf	??_USART_set+1,f
  1854  011E  0DD6               	rlf	??_USART_set+2,f
  1855  011F  0DD7               	rlf	??_USART_set+3,f
  1856  0120                     u910:
  1857  0120  3EFF               	addlw	-1
  1858  0121  1D03               	skipz
  1859  0122  291B               	goto	u915
  1860  0123  0857               	movf	??_USART_set+3,w
  1861  0124  00CB               	movwf	___lldiv@divisor+3
  1862  0125  0856               	movf	??_USART_set+2,w
  1863  0126  00CA               	movwf	___lldiv@divisor+2
  1864  0127  0855               	movf	??_USART_set+1,w
  1865  0128  00C9               	movwf	___lldiv@divisor+1
  1866  0129  0854               	movf	??_USART_set,w
  1867  012A  00C8               	movwf	___lldiv@divisor
  1868  012B  0850               	movf	USART_set@baudrate,w
  1869  012C  00D8               	movwf	??_USART_set+4
  1870  012D  0851               	movf	USART_set@baudrate+1,w
  1871  012E  00D9               	movwf	??_USART_set+5
  1872  012F  0852               	movf	USART_set@baudrate+2,w
  1873  0130  00DA               	movwf	??_USART_set+6
  1874  0131  0853               	movf	USART_set@baudrate+3,w
  1875  0132  00DB               	movwf	??_USART_set+7
  1876  0133  3002               	movlw	2
  1877  0134                     u925:
  1878  0134  1003               	clrc
  1879  0135  0DD8               	rlf	??_USART_set+4,f
  1880  0136  0DD9               	rlf	??_USART_set+5,f
  1881  0137  0DDA               	rlf	??_USART_set+6,f
  1882  0138  0DDB               	rlf	??_USART_set+7,f
  1883  0139                     u920:
  1884  0139  3EFF               	addlw	-1
  1885  013A  1D03               	skipz
  1886  013B  2934               	goto	u925
  1887  013C  3040               	movlw	64
  1888  013D  00DC               	movwf	??_USART_set+8
  1889  013E  3042               	movlw	66
  1890  013F  00DD               	movwf	??_USART_set+9
  1891  0140  300F               	movlw	15
  1892  0141  00DE               	movwf	??_USART_set+10
  1893  0142  3000               	movlw	0
  1894  0143  00DF               	movwf	??_USART_set+11
  1895  0144  0858               	movf	??_USART_set+4,w
  1896  0145  02DC               	subwf	??_USART_set+8,f
  1897  0146  0859               	movf	??_USART_set+5,w
  1898  0147  1C03               	skipc
  1899  0148  0F59               	incfsz	??_USART_set+5,w
  1900  0149  294B               	goto	u931
  1901  014A  294C               	goto	u932
  1902  014B                     u931:
  1903  014B  02DD               	subwf	??_USART_set+9,f
  1904  014C                     u932:
  1905  014C  085A               	movf	??_USART_set+6,w
  1906  014D  1C03               	skipc
  1907  014E  0F5A               	incfsz	??_USART_set+6,w
  1908  014F  2951               	goto	u933
  1909  0150  2952               	goto	u934
  1910  0151                     u933:
  1911  0151  02DE               	subwf	??_USART_set+10,f
  1912  0152                     u934:
  1913  0152  085B               	movf	??_USART_set+7,w
  1914  0153  1C03               	skipc
  1915  0154  0F5B               	incfsz	??_USART_set+7,w
  1916  0155  2957               	goto	u935
  1917  0156  2958               	goto	u936
  1918  0157                     u935:
  1919  0157  02DF               	subwf	??_USART_set+11,f
  1920  0158                     u936:
  1921  0158  085F               	movf	??_USART_set+11,w
  1922  0159  00CF               	movwf	___lldiv@dividend+3
  1923  015A  085E               	movf	??_USART_set+10,w
  1924  015B  00CE               	movwf	___lldiv@dividend+2
  1925  015C  085D               	movf	??_USART_set+9,w
  1926  015D  00CD               	movwf	___lldiv@dividend+1
  1927  015E  085C               	movf	??_USART_set+8,w
  1928  015F  00CC               	movwf	___lldiv@dividend
  1929  0160  120A  118A  217B  120A  118A  	fcall	___lldiv
  1930  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0167  0848               	movf	?___lldiv,w
  1933  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1935  016A  0099               	movwf	25	;volatile
  1936  016B                     l1502:
  1937                           
  1938                           ;USART.c: 19:     TXSTAbits.SYNC = 0;
  1939  016B  1218               	bcf	24,4	;volatile
  1940  016C                     l1504:
  1941                           
  1942                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  1943  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1944  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1945  016E  1798               	bsf	24,7	;volatile
  1946  016F                     l1506:
  1947                           
  1948                           ;USART.c: 23:     RCSTAbits.RX9 = 0;
  1949  016F  1318               	bcf	24,6	;volatile
  1950  0170                     l1508:
  1951                           
  1952                           ;USART.c: 24:     TXSTAbits.TX9 = 0;
  1953  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1955  0172  1318               	bcf	24,6	;volatile
  1956  0173                     l1510:
  1957                           
  1958                           ;USART.c: 26:     TXSTAbits.TXEN = 1;
  1959  0173  1698               	bsf	24,5	;volatile
  1960  0174                     l1512:
  1961                           
  1962                           ;USART.c: 27:     RCSTAbits.CREN = 1;
  1963  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0176  1618               	bsf	24,4	;volatile
  1966  0177                     l1514:
  1967                           
  1968                           ;USART.c: 29:     PIE1bits.RCIE = 1;
  1969  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0179  168C               	bsf	12,5	;volatile
  1972  017A                     l139:
  1973  017A  0008               	return
  1974  017B                     __end_of_USART_set:
  1975                           
  1976                           	psect	text7
  1977  017B                     __ptext7:	
  1978 ;; *************** function ___lldiv *****************
  1979 ;; Defined at:
  1980 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  divisor         4    0[BANK0 ] unsigned long 
  1983 ;;  dividend        4    4[BANK0 ] unsigned long 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  quotient        4    4[COMMON] unsigned long 
  1986 ;;  counter         1    8[COMMON] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  4    0[BANK0 ] unsigned long 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       8       0       0       0
  1997 ;;      Locals:         5       0       0       0       0
  1998 ;;      Temps:          1       0       0       0       0
  1999 ;;      Totals:         6       8       0       0       0
  2000 ;;Total ram usage:       14 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 2
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_USART_set
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010  017B                     ___lldiv:	
  2011                           ;psect for function ___lldiv
  2012                           
  2013  017B                     l1472:	
  2014                           ;incstack = 0
  2015                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2016                           
  2017  017B  3000               	movlw	0
  2018  017C  00F7               	movwf	___lldiv@quotient+3
  2019  017D  3000               	movlw	0
  2020  017E  00F6               	movwf	___lldiv@quotient+2
  2021  017F  3000               	movlw	0
  2022  0180  00F5               	movwf	___lldiv@quotient+1
  2023  0181  3000               	movlw	0
  2024  0182  00F4               	movwf	___lldiv@quotient
  2025  0183  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0184  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0185  084B               	movf	___lldiv@divisor+3,w
  2028  0186  044A               	iorwf	___lldiv@divisor+2,w
  2029  0187  0449               	iorwf	___lldiv@divisor+1,w
  2030  0188  0448               	iorwf	___lldiv@divisor,w
  2031  0189  1903               	skipnz
  2032  018A  298C               	goto	u841
  2033  018B  298D               	goto	u840
  2034  018C                     u841:
  2035  018C  29DA               	goto	l1492
  2036  018D                     u840:
  2037  018D                     l1474:
  2038  018D  01F8               	clrf	___lldiv@counter
  2039  018E  0AF8               	incf	___lldiv@counter,f
  2040  018F  299D               	goto	l1478
  2041  0190                     l1476:
  2042  0190  3001               	movlw	1
  2043  0191  00F3               	movwf	??___lldiv
  2044  0192                     u855:
  2045  0192  1003               	clrc
  2046  0193  0DC8               	rlf	___lldiv@divisor,f
  2047  0194  0DC9               	rlf	___lldiv@divisor+1,f
  2048  0195  0DCA               	rlf	___lldiv@divisor+2,f
  2049  0196  0DCB               	rlf	___lldiv@divisor+3,f
  2050  0197  0BF3               	decfsz	??___lldiv,f
  2051  0198  2992               	goto	u855
  2052  0199  3001               	movlw	1
  2053  019A  00F3               	movwf	??___lldiv
  2054  019B  0873               	movf	??___lldiv,w
  2055  019C  07F8               	addwf	___lldiv@counter,f
  2056  019D                     l1478:
  2057  019D  1FCB               	btfss	___lldiv@divisor+3,7
  2058  019E  29A0               	goto	u861
  2059  019F  29A1               	goto	u860
  2060  01A0                     u861:
  2061  01A0  2990               	goto	l1476
  2062  01A1                     u860:
  2063  01A1                     l1480:
  2064  01A1  3001               	movlw	1
  2065  01A2  00F3               	movwf	??___lldiv
  2066  01A3                     u875:
  2067  01A3  1003               	clrc
  2068  01A4  0DF4               	rlf	___lldiv@quotient,f
  2069  01A5  0DF5               	rlf	___lldiv@quotient+1,f
  2070  01A6  0DF6               	rlf	___lldiv@quotient+2,f
  2071  01A7  0DF7               	rlf	___lldiv@quotient+3,f
  2072  01A8  0BF3               	decfsz	??___lldiv,f
  2073  01A9  29A3               	goto	u875
  2074  01AA                     l1482:
  2075  01AA  084B               	movf	___lldiv@divisor+3,w
  2076  01AB  024F               	subwf	___lldiv@dividend+3,w
  2077  01AC  1D03               	skipz
  2078  01AD  29B8               	goto	u885
  2079  01AE  084A               	movf	___lldiv@divisor+2,w
  2080  01AF  024E               	subwf	___lldiv@dividend+2,w
  2081  01B0  1D03               	skipz
  2082  01B1  29B8               	goto	u885
  2083  01B2  0849               	movf	___lldiv@divisor+1,w
  2084  01B3  024D               	subwf	___lldiv@dividend+1,w
  2085  01B4  1D03               	skipz
  2086  01B5  29B8               	goto	u885
  2087  01B6  0848               	movf	___lldiv@divisor,w
  2088  01B7  024C               	subwf	___lldiv@dividend,w
  2089  01B8                     u885:
  2090  01B8  1C03               	skipc
  2091  01B9  29BB               	goto	u881
  2092  01BA  29BC               	goto	u880
  2093  01BB                     u881:
  2094  01BB  29CB               	goto	l1488
  2095  01BC                     u880:
  2096  01BC                     l1484:
  2097  01BC  0848               	movf	___lldiv@divisor,w
  2098  01BD  02CC               	subwf	___lldiv@dividend,f
  2099  01BE  0849               	movf	___lldiv@divisor+1,w
  2100  01BF  1C03               	skipc
  2101  01C0  0F49               	incfsz	___lldiv@divisor+1,w
  2102  01C1  02CD               	subwf	___lldiv@dividend+1,f
  2103  01C2  084A               	movf	___lldiv@divisor+2,w
  2104  01C3  1C03               	skipc
  2105  01C4  0F4A               	incfsz	___lldiv@divisor+2,w
  2106  01C5  02CE               	subwf	___lldiv@dividend+2,f
  2107  01C6  084B               	movf	___lldiv@divisor+3,w
  2108  01C7  1C03               	skipc
  2109  01C8  0F4B               	incfsz	___lldiv@divisor+3,w
  2110  01C9  02CF               	subwf	___lldiv@dividend+3,f
  2111  01CA                     l1486:
  2112  01CA  1474               	bsf	___lldiv@quotient,0
  2113  01CB                     l1488:
  2114  01CB  3001               	movlw	1
  2115  01CC                     u895:
  2116  01CC  1003               	clrc
  2117  01CD  0CCB               	rrf	___lldiv@divisor+3,f
  2118  01CE  0CCA               	rrf	___lldiv@divisor+2,f
  2119  01CF  0CC9               	rrf	___lldiv@divisor+1,f
  2120  01D0  0CC8               	rrf	___lldiv@divisor,f
  2121  01D1  3EFF               	addlw	-1
  2122  01D2  1D03               	skipz
  2123  01D3  29CC               	goto	u895
  2124  01D4                     l1490:
  2125  01D4  3001               	movlw	1
  2126  01D5  02F8               	subwf	___lldiv@counter,f
  2127  01D6  1D03               	btfss	3,2
  2128  01D7  29D9               	goto	u901
  2129  01D8  29DA               	goto	u900
  2130  01D9                     u901:
  2131  01D9  29A1               	goto	l1480
  2132  01DA                     u900:
  2133  01DA                     l1492:
  2134  01DA  0877               	movf	___lldiv@quotient+3,w
  2135  01DB  00CB               	movwf	?___lldiv+3
  2136  01DC  0876               	movf	___lldiv@quotient+2,w
  2137  01DD  00CA               	movwf	?___lldiv+2
  2138  01DE  0875               	movf	___lldiv@quotient+1,w
  2139  01DF  00C9               	movwf	?___lldiv+1
  2140  01E0  0874               	movf	___lldiv@quotient,w
  2141  01E1  00C8               	movwf	?___lldiv
  2142  01E2                     l304:
  2143  01E2  0008               	return
  2144  01E3                     __end_of___lldiv:
  2145                           
  2146                           	psect	text8
  2147  0299                     __ptext8:	
  2148 ;; *************** function _Lcd_Init *****************
  2149 ;; Defined at:
  2150 ;;		line 68 in file "LCD.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0
  2166 ;;      Temps:          2       0       0       0       0
  2167 ;;      Totals:         2       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 4
  2171 ;; This function calls:
  2172 ;;		_Lcd_Cmd
  2173 ;;		_Lcd_Port
  2174 ;; This function is called by:
  2175 ;;		_setup
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179  0299                     _Lcd_Init:	
  2180                           ;psect for function _Lcd_Init
  2181                           
  2182  0299                     l1188:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2185                           
  2186                           
  2187                           ;LCD.c: 69:     Lcd_Port(0x00);
  2188  0299  3000               	movlw	0
  2189  029A  120A  118A  2461  120A  118A  	fcall	_Lcd_Port
  2190  029F                     l1190:
  2191                           
  2192                           ;LCD.c: 70:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2193  029F  3007               	movlw	7
  2194  02A0  00F7               	movwf	??_Lcd_Init+1
  2195  02A1  307D               	movlw	125
  2196  02A2  00F6               	movwf	??_Lcd_Init
  2197  02A3                     u1147:
  2198  02A3  0BF6               	decfsz	??_Lcd_Init,f
  2199  02A4  2AA3               	goto	u1147
  2200  02A5  0BF7               	decfsz	??_Lcd_Init+1,f
  2201  02A6  2AA3               	goto	u1147
  2202  02A7                     l1192:
  2203                           
  2204                           ;LCD.c: 71:     Lcd_Cmd(0x03);
  2205  02A7  3003               	movlw	3
  2206  02A8  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2207                           
  2208                           ;LCD.c: 72:     _delay((unsigned long)((5)*(1000000/4000.0)));
  2209  02AD  30F9               	movlw	249
  2210  02AE  00F6               	movwf	??_Lcd_Init
  2211  02AF                     u1157:
  2212  02AF  2AB0               	nop2
  2213  02B0  0BF6               	decfsz	??_Lcd_Init,f
  2214  02B1  2AAF               	goto	u1157
  2215  02B2  2AB3               	nop2
  2216  02B3  2AB4               	nop2
  2217  02B4                     l1194:
  2218                           
  2219                           ;LCD.c: 73:     Lcd_Cmd(0x03);
  2220  02B4  3003               	movlw	3
  2221  02B5  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2222  02BA                     l1196:
  2223                           
  2224                           ;LCD.c: 74:     _delay((unsigned long)((11)*(1000000/4000000.0)));
  2225  02BA  2ABB               	nop2	;2 cycle nop
  2226  02BB                     l1198:
  2227                           
  2228                           ;LCD.c: 75:     Lcd_Cmd(0x03);
  2229  02BB  3003               	movlw	3
  2230  02BC  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2231  02C1                     l1200:
  2232                           
  2233                           ;LCD.c: 77:     Lcd_Cmd(0x02);
  2234  02C1  3002               	movlw	2
  2235  02C2  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2236  02C7                     l1202:
  2237                           
  2238                           ;LCD.c: 78:     Lcd_Cmd(0x02);
  2239  02C7  3002               	movlw	2
  2240  02C8  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2241  02CD                     l1204:
  2242                           
  2243                           ;LCD.c: 79:     Lcd_Cmd(0x08);
  2244  02CD  3008               	movlw	8
  2245  02CE  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2246  02D3                     l1206:
  2247                           
  2248                           ;LCD.c: 80:     Lcd_Cmd(0x00);
  2249  02D3  3000               	movlw	0
  2250  02D4  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2251  02D9                     l1208:
  2252                           
  2253                           ;LCD.c: 81:     Lcd_Cmd(0x0C);
  2254  02D9  300C               	movlw	12
  2255  02DA  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2256  02DF                     l1210:
  2257                           
  2258                           ;LCD.c: 82:     Lcd_Cmd(0x00);
  2259  02DF  3000               	movlw	0
  2260  02E0  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2261  02E5                     l1212:
  2262                           
  2263                           ;LCD.c: 83:     Lcd_Cmd(0x06);
  2264  02E5  3006               	movlw	6
  2265  02E6  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2266  02EB                     l93:
  2267  02EB  0008               	return
  2268  02EC                     __end_of_Lcd_Init:
  2269                           
  2270                           	psect	text9
  2271  043C                     __ptext9:	
  2272 ;; *************** function _Lcd_Write_String *****************
  2273 ;; Defined at:
  2274 ;;		line 101 in file "LCD.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  a               1    wreg     PTR unsigned char 
  2277 ;;		 -> srow(20), frow(20), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2280 ;;		 -> srow(20), frow(20), 
  2281 ;;  i               2    0[BANK0 ] int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         0       3       0       0       0
  2293 ;;      Temps:          1       0       0       0       0
  2294 ;;      Totals:         1       3       0       0       0
  2295 ;;Total ram usage:        4 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 4
  2298 ;; This function calls:
  2299 ;;		_Lcd_Write_Char
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305  043C                     _Lcd_Write_String:	
  2306                           ;psect for function _Lcd_Write_String
  2307                           
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2311                           ;Lcd_Write_String@a stored from wreg
  2312  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2313  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2314  043E  00CA               	movwf	Lcd_Write_String@a
  2315  043F                     l1406:
  2316                           
  2317                           ;LCD.c: 102:     int i;;LCD.c: 103:     for (i = 0; a[i] != '\0'; i++)
  2318  043F  01C8               	clrf	Lcd_Write_String@i
  2319  0440  01C9               	clrf	Lcd_Write_String@i+1
  2320  0441  2C55               	goto	l1412
  2321  0442                     l1408:
  2322                           
  2323                           ;LCD.c: 104:         Lcd_Write_Char(a[i]);
  2324  0442  0848               	movf	Lcd_Write_String@i,w
  2325  0443  074A               	addwf	Lcd_Write_String@a,w
  2326  0444  00F8               	movwf	??_Lcd_Write_String
  2327  0445  0878               	movf	??_Lcd_Write_String,w
  2328  0446  0084               	movwf	4
  2329  0447  0800               	movf	0,w
  2330  0448  120A  118A  23E0  120A  118A  	fcall	_Lcd_Write_Char
  2331  044D                     l1410:
  2332  044D  3001               	movlw	1
  2333  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2334  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0450  07C8               	addwf	Lcd_Write_String@i,f
  2336  0451  1803               	skipnc
  2337  0452  0AC9               	incf	Lcd_Write_String@i+1,f
  2338  0453  3000               	movlw	0
  2339  0454  07C9               	addwf	Lcd_Write_String@i+1,f
  2340  0455                     l1412:
  2341  0455  0848               	movf	Lcd_Write_String@i,w
  2342  0456  074A               	addwf	Lcd_Write_String@a,w
  2343  0457  00F8               	movwf	??_Lcd_Write_String
  2344  0458  0878               	movf	??_Lcd_Write_String,w
  2345  0459  0084               	movwf	4
  2346  045A  1383               	bcf	3,7	;select IRP bank0
  2347  045B  0800               	movf	0,w
  2348  045C  1D03               	btfss	3,2
  2349  045D  2C5F               	goto	u831
  2350  045E  2C60               	goto	u830
  2351  045F                     u831:
  2352  045F  2C42               	goto	l1408
  2353  0460                     u830:
  2354  0460                     l102:
  2355  0460  0008               	return
  2356  0461                     __end_of_Lcd_Write_String:
  2357                           
  2358                           	psect	text10
  2359  03E0                     __ptext10:	
  2360 ;; *************** function _Lcd_Write_Char *****************
  2361 ;; Defined at:
  2362 ;;		line 86 in file "LCD.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  a               1    wreg     unsigned char 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  a               1    7[COMMON] unsigned char 
  2367 ;;  y               1    6[COMMON] unsigned char 
  2368 ;;  temp            1    5[COMMON] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0
  2379 ;;      Locals:         3       0       0       0       0
  2380 ;;      Temps:          1       0       0       0       0
  2381 ;;      Totals:         4       0       0       0       0
  2382 ;;Total ram usage:        4 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 3
  2385 ;; This function calls:
  2386 ;;		_Lcd_Port
  2387 ;; This function is called by:
  2388 ;;		_Lcd_Write_String
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392  03E0                     _Lcd_Write_Char:	
  2393                           ;psect for function _Lcd_Write_Char
  2394                           
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2398                           ;Lcd_Write_Char@a stored from wreg
  2399  03E0  00F7               	movwf	Lcd_Write_Char@a
  2400  03E1                     l1234:
  2401                           
  2402                           ;LCD.c: 87:     char temp, y;;LCD.c: 88:     temp = a & 0x0F;
  2403  03E1  0877               	movf	Lcd_Write_Char@a,w
  2404  03E2  390F               	andlw	15
  2405  03E3  00F4               	movwf	??_Lcd_Write_Char
  2406  03E4  0874               	movf	??_Lcd_Write_Char,w
  2407  03E5  00F5               	movwf	Lcd_Write_Char@temp
  2408                           
  2409                           ;LCD.c: 89:     y = a & 0xF0;
  2410  03E6  0877               	movf	Lcd_Write_Char@a,w
  2411  03E7  39F0               	andlw	240
  2412  03E8  00F4               	movwf	??_Lcd_Write_Char
  2413  03E9  0874               	movf	??_Lcd_Write_Char,w
  2414  03EA  00F6               	movwf	Lcd_Write_Char@y
  2415  03EB                     l1236:
  2416                           
  2417                           ;LCD.c: 90:     RA0 = 1;
  2418  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2419  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2420  03ED  1405               	bsf	5,0	;volatile
  2421  03EE                     l1238:
  2422                           
  2423                           ;LCD.c: 91:     Lcd_Port(y >> 4);
  2424  03EE  0876               	movf	Lcd_Write_Char@y,w
  2425  03EF  00F4               	movwf	??_Lcd_Write_Char
  2426  03F0  3004               	movlw	4
  2427  03F1                     u585:
  2428  03F1  1003               	clrc
  2429  03F2  0CF4               	rrf	??_Lcd_Write_Char,f
  2430  03F3  3EFF               	addlw	-1
  2431  03F4  1D03               	skipz
  2432  03F5  2BF1               	goto	u585
  2433  03F6  0874               	movf	??_Lcd_Write_Char,w
  2434  03F7  120A  118A  2461  120A  118A  	fcall	_Lcd_Port
  2435  03FC                     l1240:
  2436                           
  2437                           ;LCD.c: 92:     RA1 = 1;
  2438  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2439  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2440  03FE  1485               	bsf	5,1	;volatile
  2441  03FF                     l1242:
  2442                           
  2443                           ;LCD.c: 93:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2444  03FF  3003               	movlw	3
  2445  0400  00F4               	movwf	??_Lcd_Write_Char
  2446  0401                     u1167:
  2447  0401  0BF4               	decfsz	??_Lcd_Write_Char,f
  2448  0402  2C01               	goto	u1167
  2449  0403                     l1244:
  2450                           
  2451                           ;LCD.c: 94:     RA1 = 0;
  2452  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0405  1085               	bcf	5,1	;volatile
  2455  0406                     l1246:
  2456                           
  2457                           ;LCD.c: 95:     Lcd_Port(temp);
  2458  0406  0875               	movf	Lcd_Write_Char@temp,w
  2459  0407  120A  118A  2461  120A  118A  	fcall	_Lcd_Port
  2460  040C                     l1248:
  2461                           
  2462                           ;LCD.c: 96:     RA1 = 1;
  2463  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2464  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2465  040E  1485               	bsf	5,1	;volatile
  2466  040F                     l1250:
  2467                           
  2468                           ;LCD.c: 97:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2469  040F  3003               	movlw	3
  2470  0410  00F4               	movwf	??_Lcd_Write_Char
  2471  0411                     u1177:
  2472  0411  0BF4               	decfsz	??_Lcd_Write_Char,f
  2473  0412  2C11               	goto	u1177
  2474  0413                     l1252:
  2475                           
  2476                           ;LCD.c: 98:     RA1 = 0;
  2477  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0415  1085               	bcf	5,1	;volatile
  2480  0416                     l96:
  2481  0416  0008               	return
  2482  0417                     __end_of_Lcd_Write_Char:
  2483                           
  2484                           	psect	text11
  2485  0241                     __ptext11:	
  2486 ;; *************** function _Lcd_Set_Cursor *****************
  2487 ;; Defined at:
  2488 ;;		line 50 in file "LCD.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  a               1    wreg     unsigned char 
  2491 ;;  b               1    6[COMMON] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  a               1    0[BANK0 ] unsigned char 
  2494 ;;  temp            1    3[BANK0 ] unsigned char 
  2495 ;;  y               1    2[BANK0 ] unsigned char 
  2496 ;;  z               1    1[BANK0 ] unsigned char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         1       0       0       0       0
  2507 ;;      Locals:         0       4       0       0       0
  2508 ;;      Temps:          2       0       0       0       0
  2509 ;;      Totals:         3       4       0       0       0
  2510 ;;Total ram usage:        7 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 4
  2513 ;; This function calls:
  2514 ;;		_Lcd_Cmd
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520  0241                     _Lcd_Set_Cursor:	
  2521                           ;psect for function _Lcd_Set_Cursor
  2522                           
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2526                           ;Lcd_Set_Cursor@a stored from wreg
  2527  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0243  00C8               	movwf	Lcd_Set_Cursor@a
  2530  0244                     l1386:
  2531                           
  2532                           ;LCD.c: 50: void Lcd_Set_Cursor(char a, char b);LCD.c: 51: {;LCD.c: 52:     char temp, z
      +                          , y;;LCD.c: 53:     if (a == 1) {
  2533  0244  0348               	decf	Lcd_Set_Cursor@a,w
  2534  0245  1D03               	btfss	3,2
  2535  0246  2A48               	goto	u791
  2536  0247  2A49               	goto	u790
  2537  0248                     u791:
  2538  0248  2A6E               	goto	l1396
  2539  0249                     u790:
  2540  0249                     l1388:
  2541                           
  2542                           ;LCD.c: 54:         temp = 0x80 + b - 1;
  2543  0249  0876               	movf	Lcd_Set_Cursor@b,w
  2544  024A  3E7F               	addlw	127
  2545  024B  00F7               	movwf	??_Lcd_Set_Cursor
  2546  024C  0877               	movf	??_Lcd_Set_Cursor,w
  2547  024D  00CB               	movwf	Lcd_Set_Cursor@temp
  2548                           
  2549                           ;LCD.c: 55:         z = temp >> 4;
  2550  024E  084B               	movf	Lcd_Set_Cursor@temp,w
  2551  024F  00F7               	movwf	??_Lcd_Set_Cursor
  2552  0250  3004               	movlw	4
  2553  0251                     u805:
  2554  0251  1003               	clrc
  2555  0252  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2556  0253  3EFF               	addlw	-1
  2557  0254  1D03               	skipz
  2558  0255  2A51               	goto	u805
  2559  0256  0877               	movf	??_Lcd_Set_Cursor,w
  2560  0257  00F8               	movwf	??_Lcd_Set_Cursor+1
  2561  0258  0878               	movf	??_Lcd_Set_Cursor+1,w
  2562  0259  00C9               	movwf	Lcd_Set_Cursor@z
  2563  025A                     l1390:
  2564                           
  2565                           ;LCD.c: 56:         y = temp & 0x0F;
  2566  025A  084B               	movf	Lcd_Set_Cursor@temp,w
  2567  025B  390F               	andlw	15
  2568  025C  00F7               	movwf	??_Lcd_Set_Cursor
  2569  025D  0877               	movf	??_Lcd_Set_Cursor,w
  2570  025E  00CA               	movwf	Lcd_Set_Cursor@y
  2571  025F                     l1392:
  2572                           
  2573                           ;LCD.c: 57:         Lcd_Cmd(z);
  2574  025F  0849               	movf	Lcd_Set_Cursor@z,w
  2575  0260  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2576  0265                     l1394:
  2577                           
  2578                           ;LCD.c: 58:         Lcd_Cmd(y);
  2579  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0267  084A               	movf	Lcd_Set_Cursor@y,w
  2582  0268  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2583                           
  2584                           ;LCD.c: 59:     } else if (a == 2) {
  2585  026D  2A98               	goto	l90
  2586  026E                     l1396:
  2587  026E  3002               	movlw	2
  2588  026F  0648               	xorwf	Lcd_Set_Cursor@a,w
  2589  0270  1D03               	btfss	3,2
  2590  0271  2A73               	goto	u811
  2591  0272  2A74               	goto	u810
  2592  0273                     u811:
  2593  0273  2A98               	goto	l90
  2594  0274                     u810:
  2595  0274                     l1398:
  2596                           
  2597                           ;LCD.c: 60:         temp = 0xC0 + b - 1;
  2598  0274  0876               	movf	Lcd_Set_Cursor@b,w
  2599  0275  3EBF               	addlw	191
  2600  0276  00F7               	movwf	??_Lcd_Set_Cursor
  2601  0277  0877               	movf	??_Lcd_Set_Cursor,w
  2602  0278  00CB               	movwf	Lcd_Set_Cursor@temp
  2603                           
  2604                           ;LCD.c: 61:         z = temp >> 4;
  2605  0279  084B               	movf	Lcd_Set_Cursor@temp,w
  2606  027A  00F7               	movwf	??_Lcd_Set_Cursor
  2607  027B  3004               	movlw	4
  2608  027C                     u825:
  2609  027C  1003               	clrc
  2610  027D  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2611  027E  3EFF               	addlw	-1
  2612  027F  1D03               	skipz
  2613  0280  2A7C               	goto	u825
  2614  0281  0877               	movf	??_Lcd_Set_Cursor,w
  2615  0282  00F8               	movwf	??_Lcd_Set_Cursor+1
  2616  0283  0878               	movf	??_Lcd_Set_Cursor+1,w
  2617  0284  00C9               	movwf	Lcd_Set_Cursor@z
  2618  0285                     l1400:
  2619                           
  2620                           ;LCD.c: 62:         y = temp & 0x0F;
  2621  0285  084B               	movf	Lcd_Set_Cursor@temp,w
  2622  0286  390F               	andlw	15
  2623  0287  00F7               	movwf	??_Lcd_Set_Cursor
  2624  0288  0877               	movf	??_Lcd_Set_Cursor,w
  2625  0289  00CA               	movwf	Lcd_Set_Cursor@y
  2626  028A                     l1402:
  2627                           
  2628                           ;LCD.c: 63:         Lcd_Cmd(z);
  2629  028A  0849               	movf	Lcd_Set_Cursor@z,w
  2630  028B  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2631  0290                     l1404:
  2632                           
  2633                           ;LCD.c: 64:         Lcd_Cmd(y);
  2634  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0292  084A               	movf	Lcd_Set_Cursor@y,w
  2637  0293  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2638  0298                     l90:
  2639  0298  0008               	return
  2640  0299                     __end_of_Lcd_Set_Cursor:
  2641                           
  2642                           	psect	text12
  2643  04B0                     __ptext12:	
  2644 ;; *************** function _Lcd_Clear *****************
  2645 ;; Defined at:
  2646 ;;		line 45 in file "LCD.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 4
  2667 ;; This function calls:
  2668 ;;		_Lcd_Cmd
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674  04B0                     _Lcd_Clear:	
  2675                           ;psect for function _Lcd_Clear
  2676                           
  2677  04B0                     l1322:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2680                           
  2681                           
  2682                           ;LCD.c: 46:     Lcd_Cmd(0);
  2683  04B0  3000               	movlw	0
  2684  04B1  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2685                           
  2686                           ;LCD.c: 47:     Lcd_Cmd(1);
  2687  04B6  3001               	movlw	1
  2688  04B7  120A  118A  2483  120A  118A  	fcall	_Lcd_Cmd
  2689  04BC                     l84:
  2690  04BC  0008               	return
  2691  04BD                     __end_of_Lcd_Clear:
  2692                           
  2693                           	psect	text13
  2694  0483                     __ptext13:	
  2695 ;; *************** function _Lcd_Cmd *****************
  2696 ;; Defined at:
  2697 ;;		line 36 in file "LCD.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  a               1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  a               1    5[COMMON] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         1       0       0       0       0
  2713 ;;      Temps:          1       0       0       0       0
  2714 ;;      Totals:         2       0       0       0       0
  2715 ;;Total ram usage:        2 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 3
  2718 ;; This function calls:
  2719 ;;		_Lcd_Port
  2720 ;; This function is called by:
  2721 ;;		_Lcd_Clear
  2722 ;;		_Lcd_Set_Cursor
  2723 ;;		_Lcd_Init
  2724 ;;		_Lcd_Shift_Right
  2725 ;;		_Lcd_Shift_Left
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729  0483                     _Lcd_Cmd:	
  2730                           ;psect for function _Lcd_Cmd
  2731                           
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2735                           ;Lcd_Cmd@a stored from wreg
  2736  0483  00F5               	movwf	Lcd_Cmd@a
  2737  0484                     l1154:
  2738                           
  2739                           ;LCD.c: 36: void Lcd_Cmd(char a);LCD.c: 37: {;LCD.c: 38:     RA0 = 0;
  2740  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0486  1005               	bcf	5,0	;volatile
  2743  0487                     l1156:
  2744                           
  2745                           ;LCD.c: 39:     Lcd_Port(a);
  2746  0487  0875               	movf	Lcd_Cmd@a,w
  2747  0488  120A  118A  2461  120A  118A  	fcall	_Lcd_Port
  2748  048D                     l1158:
  2749                           
  2750                           ;LCD.c: 40:     RA1 = 1;
  2751  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2752  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2753  048F  1485               	bsf	5,1	;volatile
  2754  0490                     l1160:
  2755                           
  2756                           ;LCD.c: 41:     _delay((unsigned long)((4)*(1000000/4000.0)));
  2757  0490  30C7               	movlw	199
  2758  0491  00F4               	movwf	??_Lcd_Cmd
  2759  0492                     u1187:
  2760  0492  2C93               	nop2
  2761  0493  0BF4               	decfsz	??_Lcd_Cmd,f
  2762  0494  2C92               	goto	u1187
  2763  0495  2C96               	nop2
  2764  0496  2C97               	nop2
  2765  0497                     l1162:
  2766                           
  2767                           ;LCD.c: 42:     RA1 = 0;
  2768  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0499  1085               	bcf	5,1	;volatile
  2771  049A                     l81:
  2772  049A  0008               	return
  2773  049B                     __end_of_Lcd_Cmd:
  2774                           
  2775                           	psect	text14
  2776  0461                     __ptext14:	
  2777 ;; *************** function _Lcd_Port *****************
  2778 ;; Defined at:
  2779 ;;		line 13 in file "LCD.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  a               1    wreg     unsigned char 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  a               1    3[COMMON] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         1       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0
  2796 ;;      Totals:         1       0       0       0       0
  2797 ;;Total ram usage:        1 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 2
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_Lcd_Cmd
  2804 ;;		_Lcd_Init
  2805 ;;		_Lcd_Write_Char
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809  0461                     _Lcd_Port:	
  2810                           ;psect for function _Lcd_Port
  2811                           
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _Lcd_Port: [wreg]
  2815                           ;Lcd_Port@a stored from wreg
  2816  0461  00F3               	movwf	Lcd_Port@a
  2817  0462                     l1144:
  2818                           
  2819                           ;LCD.c: 13: void Lcd_Port(char a);LCD.c: 14: {;LCD.c: 15:     if (a & 1)
  2820  0462  1C73               	btfss	Lcd_Port@a,0
  2821  0463  2C65               	goto	u441
  2822  0464  2C66               	goto	u440
  2823  0465                     u441:
  2824  0465  2C6A               	goto	l70
  2825  0466                     u440:
  2826  0466                     l1146:
  2827                           
  2828                           ;LCD.c: 16:         RA2 = 1;
  2829  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0468  1505               	bsf	5,2	;volatile
  2832  0469  2C6D               	goto	l71
  2833  046A                     l70:	
  2834                           ;LCD.c: 17:     else
  2835                           
  2836                           
  2837                           ;LCD.c: 18:         RA2 = 0;
  2838  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2839  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2840  046C  1105               	bcf	5,2	;volatile
  2841  046D                     l71:
  2842                           
  2843                           ;LCD.c: 20:     if (a & 2)
  2844  046D  1CF3               	btfss	Lcd_Port@a,1
  2845  046E  2C70               	goto	u451
  2846  046F  2C71               	goto	u450
  2847  0470                     u451:
  2848  0470  2C73               	goto	l72
  2849  0471                     u450:
  2850  0471                     l1148:
  2851                           
  2852                           ;LCD.c: 21:         RA3 = 1;
  2853  0471  1585               	bsf	5,3	;volatile
  2854  0472  2C74               	goto	l73
  2855  0473                     l72:	
  2856                           ;LCD.c: 22:     else
  2857                           
  2858                           
  2859                           ;LCD.c: 23:         RA3 = 0;
  2860  0473  1185               	bcf	5,3	;volatile
  2861  0474                     l73:
  2862                           
  2863                           ;LCD.c: 25:     if (a & 4)
  2864  0474  1D73               	btfss	Lcd_Port@a,2
  2865  0475  2C77               	goto	u461
  2866  0476  2C78               	goto	u460
  2867  0477                     u461:
  2868  0477  2C7A               	goto	l74
  2869  0478                     u460:
  2870  0478                     l1150:
  2871                           
  2872                           ;LCD.c: 26:         RA4 = 1;
  2873  0478  1605               	bsf	5,4	;volatile
  2874  0479  2C7B               	goto	l75
  2875  047A                     l74:	
  2876                           ;LCD.c: 27:     else
  2877                           
  2878                           
  2879                           ;LCD.c: 28:         RA4 = 0;
  2880  047A  1205               	bcf	5,4	;volatile
  2881  047B                     l75:
  2882                           
  2883                           ;LCD.c: 30:     if (a & 8)
  2884  047B  1DF3               	btfss	Lcd_Port@a,3
  2885  047C  2C7E               	goto	u471
  2886  047D  2C7F               	goto	u470
  2887  047E                     u471:
  2888  047E  2C81               	goto	l76
  2889  047F                     u470:
  2890  047F                     l1152:
  2891                           
  2892                           ;LCD.c: 31:         RA5 = 1;
  2893  047F  1685               	bsf	5,5	;volatile
  2894  0480  2C82               	goto	l78
  2895  0481                     l76:	
  2896                           ;LCD.c: 32:     else
  2897                           
  2898                           
  2899                           ;LCD.c: 33:         RA5 = 0;
  2900  0481  1285               	bcf	5,5	;volatile
  2901  0482                     l78:
  2902  0482  0008               	return
  2903  0483                     __end_of_Lcd_Port:
  2904                           
  2905                           	psect	text15
  2906  049B                     __ptext15:	
  2907 ;; *************** function _master *****************
  2908 ;; Defined at:
  2909 ;;		line 70 in file "main_master_p1.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          3       0       0       0       0
  2926 ;;      Totals:         3       0       0       0       0
  2927 ;;Total ram usage:        3 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 1
  2930 ;; This function calls:
  2931 ;;		_USART_read
  2932 ;; This function is called by:
  2933 ;;		Interrupt level 1
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937  049B                     _master:	
  2938                           ;psect for function _master
  2939                           
  2940  049B                     i1l1072:
  2941                           
  2942                           ;main_master_p1.c: 72:     if(PIR1bits.RCIF){
  2943  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2944  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2945  049D  1E8C               	btfss	12,5	;volatile
  2946  049E  2CA0               	goto	u42_21
  2947  049F  2CA1               	goto	u42_20
  2948  04A0                     u42_21:
  2949  04A0  2CA9               	goto	i1l42
  2950  04A1                     u42_20:
  2951  04A1                     i1l1074:
  2952                           
  2953                           ;main_master_p1.c: 73:         val = USART_read();
  2954  04A1  120A  118A  24C5  120A  118A  	fcall	_USART_read
  2955  04A6  00F0               	movwf	??_master
  2956  04A7  0870               	movf	??_master,w
  2957  04A8  00FA               	movwf	_val
  2958  04A9                     i1l42:
  2959  04A9  0872               	movf	??_master+2,w
  2960  04AA  008A               	movwf	10
  2961  04AB  0E71               	swapf	??_master+1,w
  2962  04AC  0083               	movwf	3
  2963  04AD  0EFE               	swapf	btemp,f
  2964  04AE  0E7E               	swapf	btemp,w
  2965  04AF  0009               	retfie
  2966  04B0                     __end_of_master:
  2967                           
  2968                           	psect	intentry
  2969  0004                     __pintentry:	
  2970                           ;incstack = 0
  2971                           ; Regs used in _master: [wreg+pclath+cstack]
  2972                           
  2973  0004                     interrupt_function:
  2974  007E                     saved_w	set	btemp
  2975  0004  00FE               	movwf	btemp
  2976  0005  0E03               	swapf	3,w
  2977  0006  00F1               	movwf	??_master+1
  2978  0007  080A               	movf	10,w
  2979  0008  00F2               	movwf	??_master+2
  2980  0009  120A  118A  2C9B   	ljmp	_master
  2981                           
  2982                           	psect	text16
  2983  04C5                     __ptext16:	
  2984 ;; *************** function _USART_read *****************
  2985 ;; Defined at:
  2986 ;;		line 46 in file "USART.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      unsigned char 
  2993 ;; Registers used:
  2994 ;;		wreg
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_master
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013  04C5                     _USART_read:	
  3014                           ;psect for function _USART_read
  3015                           
  3016  04C5                     i1l952:	
  3017                           ;incstack = 0
  3018                           ; Regs used in _USART_read: [wreg]
  3019                           
  3020                           
  3021                           ;USART.c: 48:     return RCREG;
  3022  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3023  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3024  04C7  081A               	movf	26,w	;volatile
  3025  04C8                     i1l154:
  3026  04C8  0008               	return
  3027  04C9                     __end_of_USART_read:
  3028  007E                     btemp	set	126	;btemp
  3029  007E                     wtemp0	set	126
  3030                           
  3031                           	psect	idloc
  3032                           
  3033                           ;Config register IDLOC0 @ 0x2000
  3034                           ;	unspecified, using default values
  3035  2000                     	org	8192
  3036  2000  3FFF               	dw	16383
  3037                           
  3038                           ;Config register IDLOC1 @ 0x2001
  3039                           ;	unspecified, using default values
  3040  2001                     	org	8193
  3041  2001  3FFF               	dw	16383
  3042                           
  3043                           ;Config register IDLOC2 @ 0x2002
  3044                           ;	unspecified, using default values
  3045  2002                     	org	8194
  3046  2002  3FFF               	dw	16383
  3047                           
  3048                           ;Config register IDLOC3 @ 0x2003
  3049                           ;	unspecified, using default values
  3050  2003                     	org	8195
  3051  2003  3FFF               	dw	16383
  3052                           
  3053                           	psect	config
  3054                           
  3055                           ;Config register CONFIG1 @ 0x2007
  3056                           ;	Oscillator Selection bits
  3057                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3058                           ;	Watchdog Timer Enable bit
  3059                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3060                           ;	Power-up Timer Enable bit
  3061                           ;	PWRTE = OFF, PWRT disabled
  3062                           ;	RE3/MCLR pin function select bit
  3063                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3064                           ;	Code Protection bit
  3065                           ;	CP = OFF, Program memory code protection is disabled
  3066                           ;	Data Code Protection bit
  3067                           ;	CPD = OFF, Data memory code protection is disabled
  3068                           ;	Brown Out Reset Selection bits
  3069                           ;	BOREN = OFF, BOR disabled
  3070                           ;	Internal External Switchover bit
  3071                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3072                           ;	Fail-Safe Clock Monitor Enabled bit
  3073                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3074                           ;	Low Voltage Programming Enable bit
  3075                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3076                           ;	In-Circuit Debugger Mode bit
  3077                           ;	DEBUG = 0x1, unprogrammed default
  3078  2007                     	org	8199
  3079  2007  20D4               	dw	8404
  3080                           
  3081                           ;Config register CONFIG2 @ 0x2008
  3082                           ;	Brown-out Reset Selection bit
  3083                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3084                           ;	Flash Program Memory Self Write Enable bits
  3085                           ;	WRT = OFF, Write protection off
  3086  2008                     	org	8200
  3087  2008  3EFF               	dw	16127

Data Sizes:
    Strings     39
    Constant    10
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     29      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[18]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_set->___lldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _master in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_USART_set
    _USART_set->___lldiv

Critical Paths under _master in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _master in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _master in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _master in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3543
                                             28 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    18     11    1781
                                              7 BANK0     21    10     11
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     786
                           _Lcd_Init
                          _USART_set
                        _int_osc_MHz
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     573
                                              8 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _master                                               3     3      0       0
                                              0 COMMON     3     3      0
                         _USART_read
 ---------------------------------------------------------------------------------
 (6) _USART_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _USART_set
       ___lldiv
     _int_osc_MHz
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _master (ROOT)
   _USART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      50       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      45       5       86.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      50      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Sep 13 21:25:02 2022

                       pc 0002                        l53 043B                        l70 046A  
                      l71 046D                        l72 0473                        l73 0474  
                      l81 049A                        l74 047A                        l90 0298  
                      l75 047B                        l76 0481                        l84 04BC  
                      l93 02EB                        l78 0482                        l96 0416  
                      fsr 0004                       l102 0460                       l120 03A8  
                     l115 03A7                       l304 01E2                       l139 017A  
                     l264 0106                       l540 0331                       l550 036D  
                     l820 0370                       l822 0377                       l824 037E  
                     l832 0391                       l826 0385                       l818 036F  
                     l828 038A                       _RA0 0028                       _RA1 0029  
                     _RA2 002A                       _RA3 002B                       _RA4 002C  
                     _RA5 002D                       u440 0466                       u441 0465  
                     u450 0471                       u451 0470                       u460 0478  
                     u461 0477                       u470 047F                       u471 047E  
                     u810 0274                       u811 0273                       u900 01DA  
                     u805 0251                       u901 01D9                       u830 0460  
                     u910 0120                       u831 045F                       u840 018D  
                     u920 0139                       u825 027C                       u585 03F1  
                     u841 018C                       u931 014B                       u915 011B  
                     u860 01A1                       u932 014C                       u940 02F6  
                     u861 01A0                       u933 0151                       u925 0134  
                     u941 02F5                       u790 0249                       u934 0152  
                     u791 0248                       u855 0192                       u935 0157  
                     u880 01BC                       u936 0158                       u960 0308  
                     u881 01BB                       u961 0307                       u875 01A3  
                     u955 02FA                       u980 0319                       u885 01B8  
                     u981 0318                       u895 01CC                       u975 0309  
                     u985 0315                       u995 0321                       _val 007A  
                     fsr0 0004                       indf 0000                      l1200 02C1  
                    l1210 02DF                      l1202 02C7                      l1212 02E5  
                    l1204 02CD                      l1150 0478                      l1206 02D3  
                    l1152 047F                      l1144 0462                      l1160 0490  
                    l1400 0285                      l1240 03FC                      l1208 02D9  
                    l1146 0466                      l1162 0497                      l1154 0484  
                    l1322 04B0                      l1402 028A                      l1250 040F  
                    l1242 03FF                      l1234 03E1                      l1410 044D  
                    l1148 0471                      l1156 0487                      l1404 0290  
                    l1252 0413                      l1244 0403                      l1236 03EB  
                    l1412 0455                      l1500 0110                      l1158 048D  
                    l1246 0406                      l1238 03EE                      l1406 043F  
                    l1190 029F                      l1510 0173                      l1502 016B  
                    l1248 040C                      l1408 0442                      l1192 02A7  
                    l1512 0174                      l1504 016C                      l1520 02F6  
                    l1600 005D                      l1194 02B4                      l1514 0177  
                    l1506 016F                      l1530 0319                      l1522 02F9  
                    l1602 0061                      l1196 02BA                      l1188 0299  
                    l1508 0170                      l1532 031F                      l1524 0300  
                    l1516 02EC                      l1620 0096                      l1604 0065  
                    l1700 004A                      l1390 025A                      l1198 02BB  
                    l1702 0399                      l1534 0320                      l1526 0304  
                    l1518 02F0                      l1550 0348                      l1542 0332  
                    l1630 00DC                      l1622 009C                      l1614 0070  
                    l1606 0069                      l1392 025F                      l1480 01A1  
                    l1472 017B                      l1536 0327                      l1528 0308  
                    l1552 034C                      l1544 033A                      l1560 0369  
                    l1632 00E3                      l1624 00A3                      l1608 006E  
                    l1394 0265                      l1386 0244                      l1490 01D4  
                    l1482 01AA                      l1474 018D                      l1570 0421  
                    l1538 032D                      l1554 0356                      l1546 033D  
                    l1634 00E7                      l1626 00A7                      l1618 008C  
                    l1650 01ED                      l1388 0249                      l1396 026E  
                    l1484 01BC                      l1476 0190                      l1492 01DA  
                    l1580 043A                      l1572 0424                      l1564 0417  
                    l1556 035C                      l1548 0344                      l1628 00AC  
                    l1636 00F0                      l1652 020D                      l1398 0274  
                    l1486 01CA                      l1478 019D                      l1574 0425  
                    l1566 041D                      l1558 0363                      l1638 0102  
                    l1590 0032                      l1654 0221                      l1646 01E3  
                    l1488 01CB                      l1496 0107                      l1576 042A  
                    l1568 0420                      l1592 0037                      l1584 0020  
                    l1656 022F                      l1648 01E8                      l1498 010D  
                    l1578 0439                      l1586 0025                      l1658 0237  
                    l1596 0038                      l1588 002B                      l1598 0055  
                    STR_1 03B9                      STR_2 03CE                      u1000 032D  
                    u1001 032C                      u1010 033A                      u1011 0339  
                    u1100 0096                      u1101 0095                      u1030 034C  
                    u1110 009C                      u1031 034B                      u1111 009B  
                    u1040 0356                      u1120 00F0                      u1041 0355  
                    u1025 033E                      u1121 00EF                      u1130 0102  
                    u1131 0101                      u1060 0369                      u1061 0368  
                    u1045 0352                      u1070 002B                      u1055 035D  
                    u1071 002A                      u1080 0065                      u1081 0064  
                    u1090 008B                      u1147 02A3                      u1091 008A  
                    u1157 02AF                      u1167 0401                      u1095 0087  
                    u1177 0411                      u1187 0492                      i1l42 04A9  
       ?_Lcd_Write_String 0070                      _main 01E3                      _frow 0034  
                    btemp 007E                      _srow 0020                      start 000C  
      ??_Lcd_Write_String 0078           __end_of_Lcd_Cmd 049B                     ?_main 0070  
                   _ANSEL 0188           __end_of___lldiv 01E3           __end_of___lwdiv 0332  
                   i1l154 04C8           __end_of___lwmod 036E                     i1l952 04C5  
                   _RCREG 001A                     u42_20 04A1                     u42_21 04A0  
                   _SPBRG 0099                     _TRISA 0085                     _TRISB 0086  
                   _TXREG 0019           int_osc_MHz@freq 0075           __end_of_dpowers 03B9  
                   _setup 0417              ?_int_osc_MHz 0070                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0107  
        __end_of_Lcd_Init 02EC          __end_of_Lcd_Port 0483               ?_USART_read 0070  
         __initialization 000F              __end_of_main 0241                    ??_main 0064  
                  ?_setup 0070                    _ANSELH 0189                    i1l1072 049B  
                  i1l1074 04A1                 ??_Lcd_Cmd 0074                    _SPBRGH 009A  
               ??___lldiv 0073                 ??___lwdiv 0077                 ??___lwmod 0078  
                  _master 049B         __end_of_USART_set 017B                    saved_w 007E  
               ??_sprintf 005A           Lcd_Set_Cursor@a 0048           Lcd_Set_Cursor@b 0076  
         Lcd_Set_Cursor@y 004A           Lcd_Set_Cursor@z 0049   __end_of__initialization 0019  
       __end_of_Lcd_Clear 04BD            __pcstackCOMMON 0070             __end_of_setup 043C  
          _Lcd_Set_Cursor 0241                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0079                __pbssBANK0 0020                __pmaintext 01E3  
              __pintentry 0004                   ?_master 0070    __end_of_Lcd_Set_Cursor 0299  
              ??_Lcd_Init 0076                ??_Lcd_Port 0073                __stringtab 03A9  
          _Lcd_Write_Char 03E0                   _Lcd_Cmd 0483              ??_USART_read 0070  
                 ___lldiv 017B                   ___lwdiv 02EC                   ___lwmod 0332  
         ?_Lcd_Set_Cursor 0076                   __ptext1 001D                   __ptext2 0332  
                 __ptext3 02EC                   __ptext4 0417                   __ptext5 036E  
                 __ptext6 0107                   __ptext7 017B                   __ptext8 0299  
                 __ptext9 043C                   _dpowers 03AF                   _sprintf 001D  
                 clrloop0 04BE        __end_of_USART_read 04C9    __end_of_Lcd_Write_Char 0417  
    end_of_initialization 0019           ___lldiv@divisor 0048           ___lldiv@counter 0078  
               _RCSTAbits 0018                 Lcd_Port@a 0073                 _USART_set 0107  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 004A         Lcd_Write_String@i 0048  
               _TXSTAbits 0098                 _Lcd_Clear 04B0          _Lcd_Write_String 043C  
             _BAUDCTLbits 0187            __end_of_master 04B0       start_initialization 000F  
              ?_USART_set 0050         USART_set@baudrate 0050                ?_Lcd_Clear 0070  
         Lcd_Write_Char@a 0077                  ??_master 0070           Lcd_Write_Char@y 0076  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 0048  
           ??_int_osc_MHz 0073                  ?_Lcd_Cmd 0070               sprintf@flag 005E  
             sprintf@prec 005F          ___lwdiv@dividend 0075          ??_Lcd_Set_Cursor 0077  
                ?___lldiv 0048                  ?___lwdiv 0073                  ?___lwmod 004B  
               __pstrings 03A9               ??_USART_set 0054          ___lwdiv@quotient 0049  
                ?_sprintf 004F         interrupt_function 0004                 clear_ram0 04BD  
                _PIE1bits 008C       __end_of_int_osc_MHz 03A9                  Lcd_Cmd@a 0075  
                _PIR1bits 000C               ??_Lcd_Clear 0076               __stringbase 03AE  
        ??_Lcd_Write_Char 0074                  _Lcd_Init 0299                  _Lcd_Port 0461  
__end_of_Lcd_Write_String 0461        __end_of__stringtab 03AF                sprintf@val 0060  
         ___lwdiv@divisor 0073           ___lwdiv@counter 0048                  __ptext10 03E0  
                __ptext11 0241                  __ptext12 04B0                  __ptext13 0483  
                __ptext14 0461                  __ptext15 049B                  __ptext16 04C5  
             _int_osc_MHz 036E                _INTCONbits 000B        Lcd_Write_Char@temp 0075  
                intlevel1 0000                 sprintf@ap 005D                 sprintf@sp 0062  
        ___lwmod@dividend 004D          ___lldiv@dividend 004C                 stringcode 03A9  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 004B                  sprintf@c 0063  
                sprintf@f 004F          ___lldiv@quotient 0074           ___lwmod@divisor 004B  
         ___lwmod@counter 0079                  stringdir 03A9                  stringtab 03A9  
              _USART_read 04C5  
