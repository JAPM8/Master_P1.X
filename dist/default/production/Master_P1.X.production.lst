

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Sep 15 08:24:22 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463                           
   464                           	psect	idataBANK0
   465  05D0                     __pidataBANK0:
   466                           
   467                           ;initializer for _temp
   468  05D0  3418               	retlw	24
   469  05D1  3400               	retlw	0
   470                           
   471                           	psect	strings
   472  0454                     __pstrings:
   473  0454                     stringtab:
   474  0454                     __stringtab:
   475  0454                     stringcode:	
   476                           ;	String table - string pointers are 1 byte each
   477                           
   478  0454                     stringdir:
   479  0454  3004               	movlw	high stringdir
   480  0455  008A               	movwf	10
   481  0456  0804               	movf	4,w
   482  0457  0A84               	incf	4,f
   483  0458  0782               	addwf	2,f
   484  0459                     __stringbase:
   485  0459  3400               	retlw	0
   486  045A                     __end_of__stringtab:
   487  045A                     _dpowers:
   488  045A  3401               	retlw	1
   489  045B  3400               	retlw	0
   490  045C  340A               	retlw	10
   491  045D  3400               	retlw	0
   492  045E  3464               	retlw	100
   493  045F  3400               	retlw	0
   494  0460  34E8               	retlw	232
   495  0461  3403               	retlw	3
   496  0462  3410               	retlw	16
   497  0463  3427               	retlw	39
   498  0464                     __end_of_dpowers:
   499  001A                     _RCREG	set	26
   500  0018                     _RCSTAbits	set	24
   501  000B                     _INTCONbits	set	11
   502  000C                     _PIR1bits	set	12
   503  0029                     _RA1	set	41
   504  0028                     _RA0	set	40
   505  002D                     _RA5	set	45
   506  002C                     _RA4	set	44
   507  002B                     _RA3	set	43
   508  002A                     _RA2	set	42
   509  008C                     _PIE1bits	set	140
   510  0099                     _SPBRG	set	153
   511  009A                     _SPBRGH	set	154
   512  0098                     _TXSTAbits	set	152
   513  008F                     _OSCCONbits	set	143
   514  0086                     _TRISB	set	134
   515  0085                     _TRISA	set	133
   516  0187                     _BAUDCTLbits	set	391
   517  0189                     _ANSELH	set	393
   518  0188                     _ANSEL	set	392
   519  0464                     STR_1:
   520  0464  3425               	retlw	37	;'%'
   521  0465  3464               	retlw	100	;'d'
   522  0466  3425               	retlw	37	;'%'
   523  0467  3464               	retlw	100	;'d'
   524  0468  343A               	retlw	58	;':'
   525  0469  3425               	retlw	37	;'%'
   526  046A  3464               	retlw	100	;'d'
   527  046B  3425               	retlw	37	;'%'
   528  046C  3464               	retlw	100	;'d'
   529  046D  3420               	retlw	32	;' '
   530  046E  3420               	retlw	32	;' '
   531  046F  3420               	retlw	32	;' '
   532  0470  3420               	retlw	32	;' '
   533  0471  344C               	retlw	76	;'L'
   534  0472  3475               	retlw	117	;'u'
   535  0473  347A               	retlw	122	;'z'
   536  0474  343A               	retlw	58	;':'
   537  0475  3420               	retlw	32	;' '
   538  0476  3425               	retlw	37	;'%'
   539  0477  3432               	retlw	50	;'2'
   540  0478  3464               	retlw	100	;'d'
   541  0479  3400               	retlw	0
   542  047A                     STR_2:
   543  047A  344D               	retlw	77	;'M'
   544  047B  346F               	retlw	111	;'o'
   545  047C  3476               	retlw	118	;'v'
   546  047D  343A               	retlw	58	;':'
   547  047E  3420               	retlw	32	;' '
   548  047F  3425               	retlw	37	;'%'
   549  0480  3464               	retlw	100	;'d'
   550  0481  3420               	retlw	32	;' '
   551  0482  3420               	retlw	32	;' '
   552  0483  3454               	retlw	84	;'T'
   553  0484  3465               	retlw	101	;'e'
   554  0485  346D               	retlw	109	;'m'
   555  0486  3470               	retlw	112	;'p'
   556  0487  343A               	retlw	58	;':'
   557  0488  3420               	retlw	32	;' '
   558  0489  3425               	retlw	37	;'%'
   559  048A  3432               	retlw	50	;'2'
   560  048B  3464               	retlw	100	;'d'
   561  048C  3400               	retlw	0
   562                           
   563                           	psect	cinit
   564  000F                     start_initialization:	
   565                           ; #config settings
   566                           
   567  000F                     __initialization:
   568                           
   569                           ; Initialize objects allocated to BANK0
   570  000F  120A  118A  25D0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   571  0014  00E9               	movwf	__pdataBANK0& (0+127)
   572  0015  120A  118A  25D1  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   573  001A  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   574                           
   575                           ; Clear objects allocated to BANK0
   576  001B  1383               	bcf	3,7	;select IRP bank0
   577  001C  3020               	movlw	low __pbssBANK0
   578  001D  0084               	movwf	4
   579  001E  304A               	movlw	low (__pbssBANK0+42)
   580  001F  120A  118A  25C4  120A  118A  	fcall	clear_ram0
   581                           
   582                           ; Clear objects allocated to COMMON
   583  0024  01FA               	clrf	__pbssCOMMON& (0+127)
   584  0025                     end_of_initialization:	
   585                           ;End of C runtime variable initialization code
   586                           
   587  0025                     __end_of__initialization:
   588  0025  0183               	clrf	3
   589  0026  120A  118A  2A89   	ljmp	_main	;jump to C main() function
   590                           
   591                           	psect	bssCOMMON
   592  007A                     __pbssCOMMON:
   593  007A                     _val:
   594  007A                     	ds	1
   595                           
   596                           	psect	bssBANK0
   597  0020                     __pbssBANK0:
   598  0020                     _mov:
   599  0020                     	ds	2
   600  0022                     _srow:
   601  0022                     	ds	20
   602  0036                     _frow:
   603  0036                     	ds	20
   604                           
   605                           	psect	dataBANK0
   606  0069                     __pdataBANK0:
   607  0069                     _temp:
   608  0069                     	ds	2
   609                           
   610                           	psect	clrtext
   611  05C4                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615  05C4  0064               	clrwdt	;clear the watchdog before getting into this loop
   616  05C5                     clrloop0:
   617  05C5  0180               	clrf	0	;clear RAM location pointed to by FSR
   618  05C6  0A84               	incf	4,f	;increment pointer
   619  05C7  0604               	xorwf	4,w	;XOR with final address
   620  05C8  1903               	btfsc	3,2	;have we reached the end yet?
   621  05C9  3400               	retlw	0	;all done for this memory range, return
   622  05CA  0604               	xorwf	4,w	;XOR again to restore value
   623  05CB  2DC5               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackCOMMON
   626  0070                     __pcstackCOMMON:
   627  0070                     ?_isdigit:
   628  0070                     ?_USART_read:	
   629                           ; 1 bit 
   630                           
   631  0070                     ??_USART_read:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_setup:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_Lcd_Clear:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_read_red:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_Lcd_Write_String:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_int_osc_MHz:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_master:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_master:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Lcd_Port:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Lcd_Cmd:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Lcd_Write_Char:	
   668                           ; 1 bytes @ 0x0
   669                           
   670                           
   671                           ; 1 bytes @ 0x0
   672  0070                     	ds	3
   673  0073                     ??_read_red:
   674  0073                     ??_int_osc_MHz:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     ??_isdigit:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     ??_Lcd_Port:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     ??___lldiv:	
   684                           ; 1 bytes @ 0x3
   685                           
   686  0073                     ?___wmul:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     ?___lwdiv:	
   690                           ; 2 bytes @ 0x3
   691                           
   692  0073                     Lcd_Port@a:	
   693                           ; 2 bytes @ 0x3
   694                           
   695  0073                     _isdigit$838:	
   696                           ; 1 bytes @ 0x3
   697                           
   698  0073                     ___wmul@multiplier:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     ___lwdiv@divisor:	
   702                           ; 2 bytes @ 0x3
   703                           
   704                           
   705                           ; 2 bytes @ 0x3
   706  0073                     	ds	1
   707  0074                     ??_Lcd_Cmd:
   708  0074                     ??_Lcd_Write_Char:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     isdigit@c:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ___lldiv@quotient:	
   715                           ; 1 bytes @ 0x4
   716                           
   717                           
   718                           ; 4 bytes @ 0x4
   719  0074                     	ds	1
   720  0075                     Lcd_Cmd@a:
   721  0075                     Lcd_Write_Char@temp:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0075                     int_osc_MHz@freq:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     ___wmul@multiplicand:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ___lwdiv@dividend:	
   731                           ; 2 bytes @ 0x5
   732                           
   733                           
   734                           ; 2 bytes @ 0x5
   735  0075                     	ds	1
   736  0076                     ??_Lcd_Clear:
   737  0076                     ?_Lcd_Set_Cursor:	
   738                           ; 1 bytes @ 0x6
   739                           
   740  0076                     ??_Lcd_Init:	
   741                           ; 1 bytes @ 0x6
   742                           
   743  0076                     Lcd_Set_Cursor@b:	
   744                           ; 1 bytes @ 0x6
   745                           
   746  0076                     Lcd_Write_Char@y:	
   747                           ; 1 bytes @ 0x6
   748                           
   749                           
   750                           ; 1 bytes @ 0x6
   751  0076                     	ds	1
   752  0077                     ??_Lcd_Set_Cursor:
   753  0077                     ??___wmul:	
   754                           ; 1 bytes @ 0x7
   755                           
   756  0077                     ??___lwdiv:	
   757                           ; 1 bytes @ 0x7
   758                           
   759  0077                     Lcd_Write_Char@a:	
   760                           ; 1 bytes @ 0x7
   761                           
   762  0077                     ___wmul@product:	
   763                           ; 1 bytes @ 0x7
   764                           
   765                           
   766                           ; 2 bytes @ 0x7
   767  0077                     	ds	1
   768  0078                     ??_Lcd_Write_String:
   769  0078                     ??___lwmod:	
   770                           ; 1 bytes @ 0x8
   771                           
   772  0078                     ___lldiv@counter:	
   773                           ; 1 bytes @ 0x8
   774                           
   775                           
   776                           ; 1 bytes @ 0x8
   777  0078                     	ds	1
   778  0079                     ??_setup:
   779  0079                     ___lwmod@counter:	
   780                           ; 1 bytes @ 0x9
   781                           
   782                           
   783                           ; 1 bytes @ 0x9
   784  0079                     	ds	1
   785                           
   786                           	psect	cstackBANK0
   787  004A                     __pcstackBANK0:
   788  004A                     ?___lldiv:
   789  004A                     Lcd_Set_Cursor@a:	
   790                           ; 4 bytes @ 0x0
   791                           
   792  004A                     ___lwdiv@counter:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  004A                     Lcd_Write_String@i:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  004A                     ___lldiv@divisor:	
   799                           ; 2 bytes @ 0x0
   800                           
   801                           
   802                           ; 4 bytes @ 0x0
   803  004A                     	ds	1
   804  004B                     Lcd_Set_Cursor@z:
   805  004B                     ___lwdiv@quotient:	
   806                           ; 1 bytes @ 0x1
   807                           
   808                           
   809                           ; 2 bytes @ 0x1
   810  004B                     	ds	1
   811  004C                     Lcd_Set_Cursor@y:
   812  004C                     Lcd_Write_String@a:	
   813                           ; 1 bytes @ 0x2
   814                           
   815                           
   816                           ; 1 bytes @ 0x2
   817  004C                     	ds	1
   818  004D                     ?___lwmod:
   819  004D                     Lcd_Set_Cursor@temp:	
   820                           ; 2 bytes @ 0x3
   821                           
   822  004D                     ___lwmod@divisor:	
   823                           ; 1 bytes @ 0x3
   824                           
   825                           
   826                           ; 2 bytes @ 0x3
   827  004D                     	ds	1
   828  004E                     ___lldiv@dividend:
   829                           
   830                           ; 4 bytes @ 0x4
   831  004E                     	ds	1
   832  004F                     ___lwmod@dividend:
   833                           
   834                           ; 2 bytes @ 0x5
   835  004F                     	ds	2
   836  0051                     ?_sprintf:
   837  0051                     sprintf@f:	
   838                           ; 2 bytes @ 0x7
   839                           
   840                           
   841                           ; 1 bytes @ 0x7
   842  0051                     	ds	1
   843  0052                     ?_USART_set:
   844  0052                     USART_set@baudrate:	
   845                           ; 1 bytes @ 0x8
   846                           
   847                           
   848                           ; 4 bytes @ 0x8
   849  0052                     	ds	4
   850  0056                     ??_USART_set:
   851                           
   852                           ; 1 bytes @ 0xC
   853  0056                     	ds	6
   854  005C                     ??_sprintf:
   855                           
   856                           ; 1 bytes @ 0x12
   857  005C                     	ds	3
   858  005F                     sprintf@ap:
   859                           
   860                           ; 1 bytes @ 0x15
   861  005F                     	ds	1
   862  0060                     sprintf@prec:
   863                           
   864                           ; 1 bytes @ 0x16
   865  0060                     	ds	1
   866  0061                     sprintf@flag:
   867                           
   868                           ; 1 bytes @ 0x17
   869  0061                     	ds	1
   870  0062                     sprintf@val:
   871                           
   872                           ; 2 bytes @ 0x18
   873  0062                     	ds	2
   874  0064                     sprintf@sp:
   875                           
   876                           ; 1 bytes @ 0x1A
   877  0064                     	ds	1
   878  0065                     sprintf@width:
   879                           
   880                           ; 2 bytes @ 0x1B
   881  0065                     	ds	2
   882  0067                     sprintf@c:
   883                           
   884                           ; 1 bytes @ 0x1D
   885  0067                     	ds	1
   886  0068                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x1E
   889  0068                     	ds	1
   890                           
   891                           	psect	maintext
   892  0289                     __pmaintext:	
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 82 in file "main_master_p1.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : B00/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       1       0       0       0
   915 ;;      Totals:         0       1       0       0       0
   916 ;;Total ram usage:        1 bytes
   917 ;; Hardware stack levels required when called: 6
   918 ;; This function calls:
   919 ;;		_Lcd_Clear
   920 ;;		_Lcd_Set_Cursor
   921 ;;		_Lcd_Write_String
   922 ;;		_read_red
   923 ;;		_setup
   924 ;;		_sprintf
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930  0289                     _main:	
   931                           ;psect for function _main
   932                           
   933  0289                     l1817:	
   934                           ;incstack = 0
   935                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   936                           
   937                           
   938                           ;main_master_p1.c: 83:     setup();
   939  0289  120A  118A  24E9  120A  118A  	fcall	_setup
   940  028E                     l1819:
   941                           
   942                           ;main_master_p1.c: 84:     Lcd_Clear();
   943  028E  120A  118A  25B7  120A  118A  	fcall	_Lcd_Clear
   944  0293                     l1821:
   945                           
   946                           ;main_master_p1.c: 86:         read_red();
   947  0293  120A  118A  2533  120A  118A  	fcall	_read_red
   948  0298                     l1823:
   949                           
   950                           ;main_master_p1.c: 87:         sprintf(frow, "%d%d:%d%d    Luz: %2d", 2,3,4,2,95);
   951  0298  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   952  0299  1283               	bcf	3,5	;RP0=0, select bank0
   953  029A  1303               	bcf	3,6	;RP1=0, select bank0
   954  029B  00E8               	movwf	??_main
   955  029C  0868               	movf	??_main,w
   956  029D  00D1               	movwf	sprintf@f
   957  029E  3002               	movlw	2
   958  029F  00D2               	movwf	?_sprintf+1
   959  02A0  3000               	movlw	0
   960  02A1  00D3               	movwf	?_sprintf+2
   961  02A2  3003               	movlw	3
   962  02A3  00D4               	movwf	?_sprintf+3
   963  02A4  3000               	movlw	0
   964  02A5  00D5               	movwf	?_sprintf+4
   965  02A6  3004               	movlw	4
   966  02A7  00D6               	movwf	?_sprintf+5
   967  02A8  3000               	movlw	0
   968  02A9  00D7               	movwf	?_sprintf+6
   969  02AA  3002               	movlw	2
   970  02AB  00D8               	movwf	?_sprintf+7
   971  02AC  3000               	movlw	0
   972  02AD  00D9               	movwf	?_sprintf+8
   973  02AE  305F               	movlw	95
   974  02AF  00DA               	movwf	?_sprintf+9
   975  02B0  3000               	movlw	0
   976  02B1  00DB               	movwf	?_sprintf+10
   977  02B2  3036               	movlw	(low (_frow| 0))& (0+255)
   978  02B3  120A  118A  2029  120A  118A  	fcall	_sprintf
   979  02B8                     l1825:
   980                           
   981                           ;main_master_p1.c: 88:         sprintf(srow, "Mov: %d  Temp: %2d",mov,temp);
   982  02B8  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   983  02B9  1283               	bcf	3,5	;RP0=0, select bank0
   984  02BA  1303               	bcf	3,6	;RP1=0, select bank0
   985  02BB  00E8               	movwf	??_main
   986  02BC  0868               	movf	??_main,w
   987  02BD  00D1               	movwf	sprintf@f
   988  02BE  0821               	movf	_mov+1,w
   989  02BF  00D3               	movwf	?_sprintf+2
   990  02C0  0820               	movf	_mov,w
   991  02C1  00D2               	movwf	?_sprintf+1
   992  02C2  086A               	movf	_temp+1,w
   993  02C3  00D5               	movwf	?_sprintf+4
   994  02C4  0869               	movf	_temp,w
   995  02C5  00D4               	movwf	?_sprintf+3
   996  02C6  3022               	movlw	(low (_srow| 0))& (0+255)
   997  02C7  120A  118A  2029  120A  118A  	fcall	_sprintf
   998  02CC                     l1827:
   999                           
  1000                           ;main_master_p1.c: 89:         Lcd_Set_Cursor(1,1);
  1001  02CC  01F6               	clrf	Lcd_Set_Cursor@b
  1002  02CD  0AF6               	incf	Lcd_Set_Cursor@b,f
  1003  02CE  3001               	movlw	1
  1004  02CF  120A  118A  22EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1005  02D4                     l1829:
  1006                           
  1007                           ;main_master_p1.c: 90:         Lcd_Write_String(frow);
  1008  02D4  3036               	movlw	(low (_frow| 0))& (0+255)
  1009  02D5  120A  118A  250E  120A  118A  	fcall	_Lcd_Write_String
  1010                           
  1011                           ;main_master_p1.c: 91:         Lcd_Set_Cursor(2,1);
  1012  02DA  01F6               	clrf	Lcd_Set_Cursor@b
  1013  02DB  0AF6               	incf	Lcd_Set_Cursor@b,f
  1014  02DC  3002               	movlw	2
  1015  02DD  120A  118A  22EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1016  02E2                     l1831:
  1017                           
  1018                           ;main_master_p1.c: 92:         Lcd_Write_String(srow);
  1019  02E2  3022               	movlw	(low (_srow| 0))& (0+255)
  1020  02E3  120A  118A  250E  120A  118A  	fcall	_Lcd_Write_String
  1021  02E8  2A93               	goto	l1821
  1022  02E9  120A  118A  280C   	ljmp	start
  1023  02EC                     __end_of_main:
  1024                           
  1025                           	psect	text1
  1026  0029                     __ptext1:	
  1027 ;; *************** function _sprintf *****************
  1028 ;; Defined at:
  1029 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  sp              1    wreg     PTR unsigned char 
  1032 ;;		 -> srow(20), frow(20), 
  1033 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  1034 ;;		 -> STR_2(19), STR_1(22), 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  1037 ;;		 -> srow(20), frow(20), 
  1038 ;;  tmpval          4    0        struct .
  1039 ;;  width           2   27[BANK0 ] int 
  1040 ;;  val             2   24[BANK0 ] unsigned int 
  1041 ;;  cp              2    0        PTR const unsigned char 
  1042 ;;  len             2    0        unsigned int 
  1043 ;;  c               1   29[BANK0 ] unsigned char 
  1044 ;;  flag            1   23[BANK0 ] unsigned char 
  1045 ;;  prec            1   22[BANK0 ] char 
  1046 ;;  ap              1   21[BANK0 ] PTR void [1]
  1047 ;;		 -> ?_sprintf(2), 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  2    7[BANK0 ] int 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0      11       0       0       0
  1058 ;;      Locals:         0       9       0       0       0
  1059 ;;      Temps:          0       3       0       0       0
  1060 ;;      Totals:         0      23       0       0       0
  1061 ;;Total ram usage:       23 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 3
  1064 ;; This function calls:
  1065 ;;		___lwdiv
  1066 ;;		___lwmod
  1067 ;;		___wmul
  1068 ;;		_isdigit
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074  0029                     _sprintf:	
  1075                           ;psect for function _sprintf
  1076                           
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1080                           ;sprintf@sp stored from wreg
  1081  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1082  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1083  002B  00E4               	movwf	sprintf@sp
  1084  002C                     l1725:
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1087  002C  3052               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1088  002D  00DC               	movwf	??_sprintf
  1089  002E  085C               	movf	??_sprintf,w
  1090  002F  00DF               	movwf	sprintf@ap
  1091                           
  1092                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1093  0030  299A               	goto	l1807
  1094  0031                     l1727:
  1095                           
  1096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1097  0031  3025               	movlw	37
  1098  0032  0667               	xorwf	sprintf@c,w
  1099  0033  1903               	btfsc	3,2
  1100  0034  2836               	goto	u1351
  1101  0035  2837               	goto	u1350
  1102  0036                     u1351:
  1103  0036  2843               	goto	l1733
  1104  0037                     u1350:
  1105  0037                     l1729:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1108  0037  0867               	movf	sprintf@c,w
  1109  0038  00DC               	movwf	??_sprintf
  1110  0039  0864               	movf	sprintf@sp,w
  1111  003A  0084               	movwf	4
  1112  003B  085C               	movf	??_sprintf,w
  1113  003C  1383               	bcf	3,7	;select IRP bank0
  1114  003D  0080               	movwf	0
  1115  003E                     l1731:
  1116  003E  3001               	movlw	1
  1117  003F  00DC               	movwf	??_sprintf
  1118  0040  085C               	movf	??_sprintf,w
  1119  0041  07E4               	addwf	sprintf@sp,f
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1122  0042  299A               	goto	l1807
  1123  0043                     l1733:
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1126  0043  01E5               	clrf	sprintf@width
  1127  0044  01E6               	clrf	sprintf@width+1
  1128                           
  1129                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1130  0045  01E1               	clrf	sprintf@flag
  1131  0046                     l1735:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1134  0046  0851               	movf	sprintf@f,w
  1135  0047  0084               	movwf	4
  1136  0048  120A  118A  2454  120A  118A  	fcall	stringdir
  1137  004D  120A  118A  25A5  120A  118A  	fcall	_isdigit
  1138  0052  1C03               	btfss	3,0
  1139  0053  2855               	goto	u1361
  1140  0054  2856               	goto	u1360
  1141  0055                     u1361:
  1142  0055  2896               	goto	l1749
  1143  0056                     u1360:
  1144  0056                     l1737:
  1145                           
  1146                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1147  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0058  01E5               	clrf	sprintf@width
  1150  0059  01E6               	clrf	sprintf@width+1
  1151  005A                     l1739:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1154  005A  300A               	movlw	10
  1155  005B  00F3               	movwf	___wmul@multiplier
  1156  005C  3000               	movlw	0
  1157  005D  00F4               	movwf	___wmul@multiplier+1
  1158  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1159  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0060  0866               	movf	sprintf@width+1,w
  1161  0061  00F6               	movwf	___wmul@multiplicand+1
  1162  0062  0865               	movf	sprintf@width,w
  1163  0063  00F5               	movwf	___wmul@multiplicand
  1164  0064  120A  118A  24C4  120A  118A  	fcall	___wmul
  1165  0069  0874               	movf	?___wmul+1,w
  1166  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1167  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1168  006C  00E6               	movwf	sprintf@width+1
  1169  006D  0873               	movf	?___wmul,w
  1170  006E  00E5               	movwf	sprintf@width
  1171  006F                     l1741:
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1174  006F  0851               	movf	sprintf@f,w
  1175  0070  0084               	movwf	4
  1176  0071  120A  118A  2454  120A  118A  	fcall	stringdir
  1177  0076  3ED0               	addlw	208
  1178  0077  00DC               	movwf	??_sprintf
  1179  0078  30FF               	movlw	255
  1180  0079  1803               	skipnc
  1181  007A  3000               	movlw	0
  1182  007B  00DD               	movwf	??_sprintf+1
  1183  007C  085C               	movf	??_sprintf,w
  1184  007D  07E5               	addwf	sprintf@width,f
  1185  007E  1803               	skipnc
  1186  007F  0AE6               	incf	sprintf@width+1,f
  1187  0080  085D               	movf	??_sprintf+1,w
  1188  0081  07E6               	addwf	sprintf@width+1,f
  1189  0082                     l1743:
  1190  0082  3001               	movlw	1
  1191  0083  00DC               	movwf	??_sprintf
  1192  0084  085C               	movf	??_sprintf,w
  1193  0085  07D1               	addwf	sprintf@f,f
  1194  0086                     l1745:
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1197  0086  0851               	movf	sprintf@f,w
  1198  0087  0084               	movwf	4
  1199  0088  120A  118A  2454  120A  118A  	fcall	stringdir
  1200  008D  120A  118A  25A5  120A  118A  	fcall	_isdigit
  1201  0092  1803               	btfsc	3,0
  1202  0093  2895               	goto	u1371
  1203  0094  2896               	goto	u1370
  1204  0095                     u1371:
  1205  0095  285A               	goto	l1739
  1206  0096                     u1370:
  1207  0096                     l1749:
  1208  0096  3001               	movlw	1
  1209  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0099  07D1               	addwf	sprintf@f,f
  1212  009A  30FF               	movlw	-1
  1213  009B  0751               	addwf	sprintf@f,w
  1214  009C  0084               	movwf	4
  1215  009D  120A  118A  2454  120A  118A  	fcall	stringdir
  1216  00A2  00E7               	movwf	sprintf@c
  1217  00A3  00DC               	movwf	??_sprintf
  1218  00A4  01DD               	clrf	??_sprintf+1
  1219                           
  1220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1221                           ; Switch size 1, requested type "simple"
  1222                           ; Number of cases is 1, Range of values is 0 to 0
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte            4     3 (average)
  1226                           ; direct_byte           11     8 (fixed)
  1227                           ; jumptable            260     6 (fixed)
  1228                           ;	Chosen strategy is simple_byte
  1229  00A5  085D               	movf	??_sprintf+1,w
  1230  00A6  3A00               	xorlw	0	; case 0
  1231  00A7  1903               	skipnz
  1232  00A8  28AA               	goto	l1873
  1233  00A9  299A               	goto	l1807
  1234  00AA                     l1873:
  1235                           
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 3, Range of values is 0 to 105
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte           10     6 (average)
  1241                           ; jumptable            260     6 (fixed)
  1242                           ;	Chosen strategy is simple_byte
  1243  00AA  085C               	movf	??_sprintf,w
  1244  00AB  3A00               	xorlw	0	; case 0
  1245  00AC  1903               	skipnz
  1246  00AD  29AC               	goto	l1809
  1247  00AE  3A64               	xorlw	100	; case 100
  1248  00AF  1903               	skipnz
  1249  00B0  28B5               	goto	l1751
  1250  00B1  3A0D               	xorlw	13	; case 105
  1251  00B2  1903               	skipnz
  1252  00B3  28B5               	goto	l1751
  1253  00B4  299A               	goto	l1807
  1254  00B5                     l1751:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1257  00B5  085F               	movf	sprintf@ap,w
  1258  00B6  0084               	movwf	4
  1259  00B7  1383               	bcf	3,7	;select IRP bank0
  1260  00B8  0800               	movf	0,w
  1261  00B9  00E2               	movwf	sprintf@val
  1262  00BA  0A84               	incf	4,f
  1263  00BB  0800               	movf	0,w
  1264  00BC  00E3               	movwf	sprintf@val+1
  1265  00BD                     l1753:
  1266  00BD  3002               	movlw	2
  1267  00BE  00DC               	movwf	??_sprintf
  1268  00BF  085C               	movf	??_sprintf,w
  1269  00C0  07DF               	addwf	sprintf@ap,f
  1270  00C1                     l1755:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1273  00C1  1FE3               	btfss	sprintf@val+1,7
  1274  00C2  28C4               	goto	u1381
  1275  00C3  28C5               	goto	u1380
  1276  00C4                     u1381:
  1277  00C4  28CE               	goto	l1761
  1278  00C5                     u1380:
  1279  00C5                     l1757:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1282  00C5  3003               	movlw	3
  1283  00C6  00DC               	movwf	??_sprintf
  1284  00C7  085C               	movf	??_sprintf,w
  1285  00C8  04E1               	iorwf	sprintf@flag,f
  1286  00C9                     l1759:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1289  00C9  09E2               	comf	sprintf@val,f
  1290  00CA  09E3               	comf	sprintf@val+1,f
  1291  00CB  0AE2               	incf	sprintf@val,f
  1292  00CC  1903               	skipnz
  1293  00CD  0AE3               	incf	sprintf@val+1,f
  1294  00CE                     l1761:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1297  00CE  01E7               	clrf	sprintf@c
  1298  00CF  0AE7               	incf	sprintf@c,f
  1299  00D0                     l1767:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1302  00D0  0867               	movf	sprintf@c,w
  1303  00D1  00DC               	movwf	??_sprintf
  1304  00D2  075C               	addwf	??_sprintf,w
  1305  00D3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1306  00D4  0084               	movwf	4
  1307  00D5  120A  118A  2454  120A  118A  	fcall	stringdir
  1308  00DA  00DD               	movwf	??_sprintf+1
  1309  00DB  120A  118A  2454  120A  118A  	fcall	stringdir
  1310  00E0  00DE               	movwf	??_sprintf+2
  1311  00E1  085E               	movf	??_sprintf+2,w
  1312  00E2  0263               	subwf	sprintf@val+1,w
  1313  00E3  1D03               	skipz
  1314  00E4  28E7               	goto	u1395
  1315  00E5  085D               	movf	??_sprintf+1,w
  1316  00E6  0262               	subwf	sprintf@val,w
  1317  00E7                     u1395:
  1318  00E7  1803               	skipnc
  1319  00E8  28EA               	goto	u1391
  1320  00E9  28EB               	goto	u1390
  1321  00EA                     u1391:
  1322  00EA  28EC               	goto	l1771
  1323  00EB                     u1390:
  1324  00EB  28F6               	goto	l1773
  1325  00EC                     l1771:
  1326  00EC  3001               	movlw	1
  1327  00ED  00DC               	movwf	??_sprintf
  1328  00EE  085C               	movf	??_sprintf,w
  1329  00EF  07E7               	addwf	sprintf@c,f
  1330  00F0  3005               	movlw	5
  1331  00F1  0667               	xorwf	sprintf@c,w
  1332  00F2  1D03               	btfss	3,2
  1333  00F3  28F5               	goto	u1401
  1334  00F4  28F6               	goto	u1400
  1335  00F5                     u1401:
  1336  00F5  28D0               	goto	l1767
  1337  00F6                     u1400:
  1338  00F6                     l1773:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1341  00F6  0865               	movf	sprintf@width,w
  1342  00F7  0466               	iorwf	sprintf@width+1,w
  1343  00F8  1903               	btfsc	3,2
  1344  00F9  28FB               	goto	u1411
  1345  00FA  28FC               	goto	u1410
  1346  00FB                     u1411:
  1347  00FB  2908               	goto	l261
  1348  00FC                     u1410:
  1349  00FC                     l1775:
  1350  00FC  0861               	movf	sprintf@flag,w
  1351  00FD  3903               	andlw	3
  1352  00FE  1903               	btfsc	3,2
  1353  00FF  2901               	goto	u1421
  1354  0100  2902               	goto	u1420
  1355  0101                     u1421:
  1356  0101  2908               	goto	l261
  1357  0102                     u1420:
  1358  0102                     l1777:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1361  0102  30FF               	movlw	255
  1362  0103  07E5               	addwf	sprintf@width,f
  1363  0104  1803               	skipnc
  1364  0105  0AE6               	incf	sprintf@width+1,f
  1365  0106  30FF               	movlw	255
  1366  0107  07E6               	addwf	sprintf@width+1,f
  1367  0108                     l261:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1370  0108  0866               	movf	sprintf@width+1,w
  1371  0109  3A80               	xorlw	128
  1372  010A  3C80               	sublw	128
  1373  010B  1D03               	skipz
  1374  010C  290F               	goto	u1435
  1375  010D  0865               	movf	sprintf@width,w
  1376  010E  0267               	subwf	sprintf@c,w
  1377  010F                     u1435:
  1378  010F  1803               	skipnc
  1379  0110  2912               	goto	u1431
  1380  0111  2913               	goto	u1430
  1381  0112                     u1431:
  1382  0112  291F               	goto	l1781
  1383  0113                     u1430:
  1384  0113                     l1779:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1387  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0115  0867               	movf	sprintf@c,w
  1390  0116  00DC               	movwf	??_sprintf
  1391  0117  01DD               	clrf	??_sprintf+1
  1392  0118  085C               	movf	??_sprintf,w
  1393  0119  02E5               	subwf	sprintf@width,f
  1394  011A  085D               	movf	??_sprintf+1,w
  1395  011B  1C03               	skipc
  1396  011C  03E6               	decf	sprintf@width+1,f
  1397  011D  02E6               	subwf	sprintf@width+1,f
  1398  011E  2923               	goto	l1783
  1399  011F                     l1781:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1402  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0121  01E5               	clrf	sprintf@width
  1405  0122  01E6               	clrf	sprintf@width+1
  1406  0123                     l1783:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1409  0123  0865               	movf	sprintf@width,w
  1410  0124  0466               	iorwf	sprintf@width+1,w
  1411  0125  1903               	btfsc	3,2
  1412  0126  2928               	goto	u1441
  1413  0127  2929               	goto	u1440
  1414  0128                     u1441:
  1415  0128  2940               	goto	l1791
  1416  0129                     u1440:
  1417  0129                     l1785:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1420  0129  3020               	movlw	32
  1421  012A  00DC               	movwf	??_sprintf
  1422  012B  0864               	movf	sprintf@sp,w
  1423  012C  0084               	movwf	4
  1424  012D  085C               	movf	??_sprintf,w
  1425  012E  1383               	bcf	3,7	;select IRP bank0
  1426  012F  0080               	movwf	0
  1427  0130                     l1787:
  1428  0130  3001               	movlw	1
  1429  0131  00DC               	movwf	??_sprintf
  1430  0132  085C               	movf	??_sprintf,w
  1431  0133  07E4               	addwf	sprintf@sp,f
  1432  0134                     l1789:
  1433  0134  30FF               	movlw	255
  1434  0135  07E5               	addwf	sprintf@width,f
  1435  0136  1803               	skipnc
  1436  0137  0AE6               	incf	sprintf@width+1,f
  1437  0138  30FF               	movlw	255
  1438  0139  07E6               	addwf	sprintf@width+1,f
  1439  013A  0865               	movf	sprintf@width,w
  1440  013B  0466               	iorwf	sprintf@width+1,w
  1441  013C  1D03               	btfss	3,2
  1442  013D  293F               	goto	u1451
  1443  013E  2940               	goto	u1450
  1444  013F                     u1451:
  1445  013F  2929               	goto	l1785
  1446  0140                     u1450:
  1447  0140                     l1791:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1450  0140  0861               	movf	sprintf@flag,w
  1451  0141  3903               	andlw	3
  1452  0142  1903               	btfsc	3,2
  1453  0143  2945               	goto	u1461
  1454  0144  2946               	goto	u1460
  1455  0145                     u1461:
  1456  0145  2951               	goto	l1797
  1457  0146                     u1460:
  1458  0146                     l1793:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1461  0146  302D               	movlw	45
  1462  0147  00DC               	movwf	??_sprintf
  1463  0148  0864               	movf	sprintf@sp,w
  1464  0149  0084               	movwf	4
  1465  014A  085C               	movf	??_sprintf,w
  1466  014B  1383               	bcf	3,7	;select IRP bank0
  1467  014C  0080               	movwf	0
  1468  014D                     l1795:
  1469  014D  3001               	movlw	1
  1470  014E  00DC               	movwf	??_sprintf
  1471  014F  085C               	movf	??_sprintf,w
  1472  0150  07E4               	addwf	sprintf@sp,f
  1473  0151                     l1797:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1476  0151  0867               	movf	sprintf@c,w
  1477  0152  00DC               	movwf	??_sprintf
  1478  0153  085C               	movf	??_sprintf,w
  1479  0154  00E0               	movwf	sprintf@prec
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1482  0155  2991               	goto	l1805
  1483  0156                     l1799:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1486  0156  300A               	movlw	10
  1487  0157  00CD               	movwf	___lwmod@divisor
  1488  0158  3000               	movlw	0
  1489  0159  00CE               	movwf	___lwmod@divisor+1
  1490  015A  0860               	movf	sprintf@prec,w
  1491  015B  00DC               	movwf	??_sprintf
  1492  015C  075C               	addwf	??_sprintf,w
  1493  015D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1494  015E  0084               	movwf	4
  1495  015F  120A  118A  2454  120A  118A  	fcall	stringdir
  1496  0164  00F3               	movwf	___lwdiv@divisor
  1497  0165  120A  118A  2454  120A  118A  	fcall	stringdir
  1498  016A  00F4               	movwf	___lwdiv@divisor+1
  1499  016B  0863               	movf	sprintf@val+1,w
  1500  016C  00F6               	movwf	___lwdiv@dividend+1
  1501  016D  0862               	movf	sprintf@val,w
  1502  016E  00F5               	movwf	___lwdiv@dividend
  1503  016F  120A  118A  2397  120A  118A  	fcall	___lwdiv
  1504  0174  0874               	movf	?___lwdiv+1,w
  1505  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0177  00D0               	movwf	___lwmod@dividend+1
  1508  0178  0873               	movf	?___lwdiv,w
  1509  0179  00CF               	movwf	___lwmod@dividend
  1510  017A  120A  118A  23DD  120A  118A  	fcall	___lwmod
  1511  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0181  084D               	movf	?___lwmod,w
  1514  0182  3E30               	addlw	48
  1515  0183  00DD               	movwf	??_sprintf+1
  1516  0184  085D               	movf	??_sprintf+1,w
  1517  0185  00E7               	movwf	sprintf@c
  1518  0186                     l1801:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1521  0186  0867               	movf	sprintf@c,w
  1522  0187  00DC               	movwf	??_sprintf
  1523  0188  0864               	movf	sprintf@sp,w
  1524  0189  0084               	movwf	4
  1525  018A  085C               	movf	??_sprintf,w
  1526  018B  1383               	bcf	3,7	;select IRP bank0
  1527  018C  0080               	movwf	0
  1528  018D                     l1803:
  1529  018D  3001               	movlw	1
  1530  018E  00DC               	movwf	??_sprintf
  1531  018F  085C               	movf	??_sprintf,w
  1532  0190  07E4               	addwf	sprintf@sp,f
  1533  0191                     l1805:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1536  0191  30FF               	movlw	255
  1537  0192  00DC               	movwf	??_sprintf
  1538  0193  085C               	movf	??_sprintf,w
  1539  0194  07E0               	addwf	sprintf@prec,f
  1540  0195  0A60               	incf	sprintf@prec,w
  1541  0196  1D03               	btfss	3,2
  1542  0197  2999               	goto	u1471
  1543  0198  299A               	goto	u1470
  1544  0199                     u1471:
  1545  0199  2956               	goto	l1799
  1546  019A                     u1470:
  1547  019A                     l1807:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1550  019A  3001               	movlw	1
  1551  019B  07D1               	addwf	sprintf@f,f
  1552  019C  30FF               	movlw	-1
  1553  019D  0751               	addwf	sprintf@f,w
  1554  019E  0084               	movwf	4
  1555  019F  120A  118A  2454  120A  118A  	fcall	stringdir
  1556  01A4  00DC               	movwf	??_sprintf
  1557  01A5  085C               	movf	??_sprintf,w
  1558  01A6  00E7               	movwf	sprintf@c
  1559  01A7  0867               	movf	sprintf@c,w
  1560  01A8  1D03               	btfss	3,2
  1561  01A9  29AB               	goto	u1481
  1562  01AA  29AC               	goto	u1480
  1563  01AB                     u1481:
  1564  01AB  2831               	goto	l1727
  1565  01AC                     u1480:
  1566  01AC                     l1809:
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1569  01AC  0864               	movf	sprintf@sp,w
  1570  01AD  0084               	movwf	4
  1571  01AE  1383               	bcf	3,7	;select IRP bank0
  1572  01AF  0180               	clrf	0
  1573  01B0                     l272:
  1574  01B0  0008               	return
  1575  01B1                     __end_of_sprintf:
  1576                           
  1577                           	psect	text2
  1578  05A5                     __ptext2:	
  1579 ;; *************** function _isdigit *****************
  1580 ;; Defined at:
  1581 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  c               1    wreg     unsigned char 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  c               1    4[COMMON] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;		None               void
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         2       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0
  1598 ;;      Totals:         2       0       0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 2
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_sprintf
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609  05A5                     _isdigit:	
  1610                           ;psect for function _isdigit
  1611                           
  1612                           
  1613                           ;incstack = 0
  1614                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1615                           ;isdigit@c stored from wreg
  1616  05A5  00F4               	movwf	isdigit@c
  1617  05A6                     l1333:
  1618  05A6  01F3               	clrf	_isdigit$838
  1619  05A7                     l1335:
  1620  05A7  303A               	movlw	58
  1621  05A8  0274               	subwf	isdigit@c,w
  1622  05A9  1803               	skipnc
  1623  05AA  2DAC               	goto	u721
  1624  05AB  2DAD               	goto	u720
  1625  05AC                     u721:
  1626  05AC  2DB5               	goto	l1341
  1627  05AD                     u720:
  1628  05AD                     l1337:
  1629  05AD  3030               	movlw	48
  1630  05AE  0274               	subwf	isdigit@c,w
  1631  05AF  1C03               	skipc
  1632  05B0  2DB2               	goto	u731
  1633  05B1  2DB3               	goto	u730
  1634  05B2                     u731:
  1635  05B2  2DB5               	goto	l1341
  1636  05B3                     u730:
  1637  05B3                     l1339:
  1638  05B3  01F3               	clrf	_isdigit$838
  1639  05B4  0AF3               	incf	_isdigit$838,f
  1640  05B5                     l1341:
  1641  05B5  0C73               	rrf	_isdigit$838,w
  1642  05B6                     l729:
  1643  05B6  0008               	return
  1644  05B7                     __end_of_isdigit:
  1645                           
  1646                           	psect	text3
  1647  04C4                     __ptext3:	
  1648 ;; *************** function ___wmul *****************
  1649 ;; Defined at:
  1650 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  multiplier      2    3[COMMON] unsigned int 
  1653 ;;  multiplicand    2    5[COMMON] unsigned int 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  product         2    7[COMMON] unsigned int 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2    3[COMMON] unsigned int 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         4       0       0       0       0
  1666 ;;      Locals:         2       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0
  1668 ;;      Totals:         6       0       0       0       0
  1669 ;;Total ram usage:        6 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 2
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_sprintf
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679  04C4                     ___wmul:	
  1680                           ;psect for function ___wmul
  1681                           
  1682  04C4                     l1345:	
  1683                           ;incstack = 0
  1684                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1685                           
  1686  04C4  01F7               	clrf	___wmul@product
  1687  04C5  01F8               	clrf	___wmul@product+1
  1688  04C6                     l1347:
  1689  04C6  1C73               	btfss	___wmul@multiplier,0
  1690  04C7  2CC9               	goto	u741
  1691  04C8  2CCA               	goto	u740
  1692  04C9                     u741:
  1693  04C9  2CD0               	goto	l276
  1694  04CA                     u740:
  1695  04CA                     l1349:
  1696  04CA  0875               	movf	___wmul@multiplicand,w
  1697  04CB  07F7               	addwf	___wmul@product,f
  1698  04CC  1803               	skipnc
  1699  04CD  0AF8               	incf	___wmul@product+1,f
  1700  04CE  0876               	movf	___wmul@multiplicand+1,w
  1701  04CF  07F8               	addwf	___wmul@product+1,f
  1702  04D0                     l276:
  1703  04D0  3001               	movlw	1
  1704  04D1                     u755:
  1705  04D1  1003               	clrc
  1706  04D2  0DF5               	rlf	___wmul@multiplicand,f
  1707  04D3  0DF6               	rlf	___wmul@multiplicand+1,f
  1708  04D4  3EFF               	addlw	-1
  1709  04D5  1D03               	skipz
  1710  04D6  2CD1               	goto	u755
  1711  04D7                     l1351:
  1712  04D7  3001               	movlw	1
  1713  04D8                     u765:
  1714  04D8  1003               	clrc
  1715  04D9  0CF4               	rrf	___wmul@multiplier+1,f
  1716  04DA  0CF3               	rrf	___wmul@multiplier,f
  1717  04DB  3EFF               	addlw	-1
  1718  04DC  1D03               	skipz
  1719  04DD  2CD8               	goto	u765
  1720  04DE                     l1353:
  1721  04DE  0873               	movf	___wmul@multiplier,w
  1722  04DF  0474               	iorwf	___wmul@multiplier+1,w
  1723  04E0  1D03               	btfss	3,2
  1724  04E1  2CE3               	goto	u771
  1725  04E2  2CE4               	goto	u770
  1726  04E3                     u771:
  1727  04E3  2CC6               	goto	l1347
  1728  04E4                     u770:
  1729  04E4                     l1355:
  1730  04E4  0878               	movf	___wmul@product+1,w
  1731  04E5  00F4               	movwf	?___wmul+1
  1732  04E6  0877               	movf	___wmul@product,w
  1733  04E7  00F3               	movwf	?___wmul
  1734  04E8                     l278:
  1735  04E8  0008               	return
  1736  04E9                     __end_of___wmul:
  1737                           
  1738                           	psect	text4
  1739  03DD                     __ptext4:	
  1740 ;; *************** function ___lwmod *****************
  1741 ;; Defined at:
  1742 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  divisor         2    3[BANK0 ] unsigned int 
  1745 ;;  dividend        2    5[BANK0 ] unsigned int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  counter         1    9[COMMON] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2    3[BANK0 ] unsigned int 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       4       0       0       0
  1758 ;;      Locals:         1       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0
  1760 ;;      Totals:         2       4       0       0       0
  1761 ;;Total ram usage:        6 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 2
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_sprintf
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771  03DD                     ___lwmod:	
  1772                           ;psect for function ___lwmod
  1773                           
  1774  03DD                     l1683:	
  1775                           ;incstack = 0
  1776                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1777                           
  1778  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1779  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1780  03DF  084D               	movf	___lwmod@divisor,w
  1781  03E0  044E               	iorwf	___lwmod@divisor+1,w
  1782  03E1  1903               	btfsc	3,2
  1783  03E2  2BE4               	goto	u1291
  1784  03E3  2BE5               	goto	u1290
  1785  03E4                     u1291:
  1786  03E4  2C14               	goto	l1701
  1787  03E5                     u1290:
  1788  03E5                     l1685:
  1789  03E5  01F9               	clrf	___lwmod@counter
  1790  03E6  0AF9               	incf	___lwmod@counter,f
  1791  03E7  2BF3               	goto	l1691
  1792  03E8                     l1687:
  1793  03E8  3001               	movlw	1
  1794  03E9                     u1305:
  1795  03E9  1003               	clrc
  1796  03EA  0DCD               	rlf	___lwmod@divisor,f
  1797  03EB  0DCE               	rlf	___lwmod@divisor+1,f
  1798  03EC  3EFF               	addlw	-1
  1799  03ED  1D03               	skipz
  1800  03EE  2BE9               	goto	u1305
  1801  03EF                     l1689:
  1802  03EF  3001               	movlw	1
  1803  03F0  00F8               	movwf	??___lwmod
  1804  03F1  0878               	movf	??___lwmod,w
  1805  03F2  07F9               	addwf	___lwmod@counter,f
  1806  03F3                     l1691:
  1807  03F3  1FCE               	btfss	___lwmod@divisor+1,7
  1808  03F4  2BF6               	goto	u1311
  1809  03F5  2BF7               	goto	u1310
  1810  03F6                     u1311:
  1811  03F6  2BE8               	goto	l1687
  1812  03F7                     u1310:
  1813  03F7                     l1693:
  1814  03F7  084E               	movf	___lwmod@divisor+1,w
  1815  03F8  0250               	subwf	___lwmod@dividend+1,w
  1816  03F9  1D03               	skipz
  1817  03FA  2BFD               	goto	u1325
  1818  03FB  084D               	movf	___lwmod@divisor,w
  1819  03FC  024F               	subwf	___lwmod@dividend,w
  1820  03FD                     u1325:
  1821  03FD  1C03               	skipc
  1822  03FE  2C00               	goto	u1321
  1823  03FF  2C01               	goto	u1320
  1824  0400                     u1321:
  1825  0400  2C07               	goto	l1697
  1826  0401                     u1320:
  1827  0401                     l1695:
  1828  0401  084D               	movf	___lwmod@divisor,w
  1829  0402  02CF               	subwf	___lwmod@dividend,f
  1830  0403  084E               	movf	___lwmod@divisor+1,w
  1831  0404  1C03               	skipc
  1832  0405  03D0               	decf	___lwmod@dividend+1,f
  1833  0406  02D0               	subwf	___lwmod@dividend+1,f
  1834  0407                     l1697:
  1835  0407  3001               	movlw	1
  1836  0408                     u1335:
  1837  0408  1003               	clrc
  1838  0409  0CCE               	rrf	___lwmod@divisor+1,f
  1839  040A  0CCD               	rrf	___lwmod@divisor,f
  1840  040B  3EFF               	addlw	-1
  1841  040C  1D03               	skipz
  1842  040D  2C08               	goto	u1335
  1843  040E                     l1699:
  1844  040E  3001               	movlw	1
  1845  040F  02F9               	subwf	___lwmod@counter,f
  1846  0410  1D03               	btfss	3,2
  1847  0411  2C13               	goto	u1341
  1848  0412  2C14               	goto	u1340
  1849  0413                     u1341:
  1850  0413  2BF7               	goto	l1693
  1851  0414                     u1340:
  1852  0414                     l1701:
  1853  0414  0850               	movf	___lwmod@dividend+1,w
  1854  0415  00CE               	movwf	?___lwmod+1
  1855  0416  084F               	movf	___lwmod@dividend,w
  1856  0417  00CD               	movwf	?___lwmod
  1857  0418                     l558:
  1858  0418  0008               	return
  1859  0419                     __end_of___lwmod:
  1860                           
  1861                           	psect	text5
  1862  0397                     __ptext5:	
  1863 ;; *************** function ___lwdiv *****************
  1864 ;; Defined at:
  1865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  divisor         2    3[COMMON] unsigned int 
  1868 ;;  dividend        2    5[COMMON] unsigned int 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  quotient        2    1[BANK0 ] unsigned int 
  1871 ;;  counter         1    0[BANK0 ] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  2    3[COMMON] unsigned int 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         4       0       0       0       0
  1882 ;;      Locals:         0       3       0       0       0
  1883 ;;      Temps:          1       0       0       0       0
  1884 ;;      Totals:         5       3       0       0       0
  1885 ;;Total ram usage:        8 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 2
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_sprintf
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895  0397                     ___lwdiv:	
  1896                           ;psect for function ___lwdiv
  1897                           
  1898  0397                     l1657:	
  1899                           ;incstack = 0
  1900                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1901                           
  1902  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0399  01CB               	clrf	___lwdiv@quotient
  1905  039A  01CC               	clrf	___lwdiv@quotient+1
  1906  039B                     l1659:
  1907  039B  0873               	movf	___lwdiv@divisor,w
  1908  039C  0474               	iorwf	___lwdiv@divisor+1,w
  1909  039D  1903               	btfsc	3,2
  1910  039E  2BA0               	goto	u1221
  1911  039F  2BA1               	goto	u1220
  1912  03A0                     u1221:
  1913  03A0  2BD8               	goto	l1679
  1914  03A1                     u1220:
  1915  03A1                     l1661:
  1916  03A1  01CA               	clrf	___lwdiv@counter
  1917  03A2  0ACA               	incf	___lwdiv@counter,f
  1918  03A3  2BAF               	goto	l1667
  1919  03A4                     l1663:
  1920  03A4  3001               	movlw	1
  1921  03A5                     u1235:
  1922  03A5  1003               	clrc
  1923  03A6  0DF3               	rlf	___lwdiv@divisor,f
  1924  03A7  0DF4               	rlf	___lwdiv@divisor+1,f
  1925  03A8  3EFF               	addlw	-1
  1926  03A9  1D03               	skipz
  1927  03AA  2BA5               	goto	u1235
  1928  03AB                     l1665:
  1929  03AB  3001               	movlw	1
  1930  03AC  00F7               	movwf	??___lwdiv
  1931  03AD  0877               	movf	??___lwdiv,w
  1932  03AE  07CA               	addwf	___lwdiv@counter,f
  1933  03AF                     l1667:
  1934  03AF  1FF4               	btfss	___lwdiv@divisor+1,7
  1935  03B0  2BB2               	goto	u1241
  1936  03B1  2BB3               	goto	u1240
  1937  03B2                     u1241:
  1938  03B2  2BA4               	goto	l1663
  1939  03B3                     u1240:
  1940  03B3                     l1669:
  1941  03B3  3001               	movlw	1
  1942  03B4                     u1255:
  1943  03B4  1003               	clrc
  1944  03B5  0DCB               	rlf	___lwdiv@quotient,f
  1945  03B6  0DCC               	rlf	___lwdiv@quotient+1,f
  1946  03B7  3EFF               	addlw	-1
  1947  03B8  1D03               	skipz
  1948  03B9  2BB4               	goto	u1255
  1949  03BA  0874               	movf	___lwdiv@divisor+1,w
  1950  03BB  0276               	subwf	___lwdiv@dividend+1,w
  1951  03BC  1D03               	skipz
  1952  03BD  2BC0               	goto	u1265
  1953  03BE  0873               	movf	___lwdiv@divisor,w
  1954  03BF  0275               	subwf	___lwdiv@dividend,w
  1955  03C0                     u1265:
  1956  03C0  1C03               	skipc
  1957  03C1  2BC3               	goto	u1261
  1958  03C2  2BC4               	goto	u1260
  1959  03C3                     u1261:
  1960  03C3  2BCB               	goto	l1675
  1961  03C4                     u1260:
  1962  03C4                     l1671:
  1963  03C4  0873               	movf	___lwdiv@divisor,w
  1964  03C5  02F5               	subwf	___lwdiv@dividend,f
  1965  03C6  0874               	movf	___lwdiv@divisor+1,w
  1966  03C7  1C03               	skipc
  1967  03C8  03F6               	decf	___lwdiv@dividend+1,f
  1968  03C9  02F6               	subwf	___lwdiv@dividend+1,f
  1969  03CA                     l1673:
  1970  03CA  144B               	bsf	___lwdiv@quotient,0
  1971  03CB                     l1675:
  1972  03CB  3001               	movlw	1
  1973  03CC                     u1275:
  1974  03CC  1003               	clrc
  1975  03CD  0CF4               	rrf	___lwdiv@divisor+1,f
  1976  03CE  0CF3               	rrf	___lwdiv@divisor,f
  1977  03CF  3EFF               	addlw	-1
  1978  03D0  1D03               	skipz
  1979  03D1  2BCC               	goto	u1275
  1980  03D2                     l1677:
  1981  03D2  3001               	movlw	1
  1982  03D3  02CA               	subwf	___lwdiv@counter,f
  1983  03D4  1D03               	btfss	3,2
  1984  03D5  2BD7               	goto	u1281
  1985  03D6  2BD8               	goto	u1280
  1986  03D7                     u1281:
  1987  03D7  2BB3               	goto	l1669
  1988  03D8                     u1280:
  1989  03D8                     l1679:
  1990  03D8  084C               	movf	___lwdiv@quotient+1,w
  1991  03D9  00F4               	movwf	?___lwdiv+1
  1992  03DA  084B               	movf	___lwdiv@quotient,w
  1993  03DB  00F3               	movwf	?___lwdiv
  1994  03DC                     l548:
  1995  03DC  0008               	return
  1996  03DD                     __end_of___lwdiv:
  1997                           
  1998                           	psect	text6
  1999  04E9                     __ptext6:	
  2000 ;; *************** function _setup *****************
  2001 ;; Defined at:
  2002 ;;		line 113 in file "main_master_p1.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 5
  2023 ;; This function calls:
  2024 ;;		_Lcd_Init
  2025 ;;		_USART_set
  2026 ;;		_int_osc_MHz
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032  04E9                     _setup:	
  2033                           ;psect for function _setup
  2034                           
  2035  04E9                     l1705:	
  2036                           ;incstack = 0
  2037                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2038                           
  2039                           
  2040                           ;main_master_p1.c: 114:     int_osc_MHz(1);
  2041  04E9  3001               	movlw	1
  2042  04EA  120A  118A  2419  120A  118A  	fcall	_int_osc_MHz
  2043  04EF                     l1707:
  2044                           
  2045                           ;main_master_p1.c: 117:     ANSEL = 0;
  2046  04EF  1683               	bsf	3,5	;RP0=1, select bank3
  2047  04F0  1703               	bsf	3,6	;RP1=1, select bank3
  2048  04F1  0188               	clrf	8	;volatile
  2049  04F2                     l1709:
  2050                           
  2051                           ;main_master_p1.c: 118:     ANSELH = 0;
  2052  04F2  0189               	clrf	9	;volatile
  2053  04F3                     l1711:
  2054                           
  2055                           ;main_master_p1.c: 120:     TRISA = 0;
  2056  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  2057  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  2058  04F5  0185               	clrf	5	;volatile
  2059  04F6                     l1713:
  2060                           
  2061                           ;main_master_p1.c: 121:     TRISB = 0;
  2062  04F6  0186               	clrf	6	;volatile
  2063  04F7                     l1715:
  2064                           
  2065                           ;main_master_p1.c: 123:     Lcd_Init();
  2066  04F7  120A  118A  2344  120A  118A  	fcall	_Lcd_Init
  2067  04FC                     l1717:
  2068                           
  2069                           ;main_master_p1.c: 124:     USART_set(9600);
  2070  04FC  3000               	movlw	0
  2071  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2072  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2073  04FF  00D5               	movwf	USART_set@baudrate+3
  2074  0500  3000               	movlw	0
  2075  0501  00D4               	movwf	USART_set@baudrate+2
  2076  0502  3025               	movlw	37
  2077  0503  00D3               	movwf	USART_set@baudrate+1
  2078  0504  3080               	movlw	128
  2079  0505  00D2               	movwf	USART_set@baudrate
  2080  0506  120A  118A  21B1  120A  118A  	fcall	_USART_set
  2081  050B                     l1719:
  2082                           
  2083                           ;main_master_p1.c: 127:     INTCONbits.GIE = 1;
  2084  050B  178B               	bsf	11,7	;volatile
  2085  050C                     l1721:
  2086                           
  2087                           ;main_master_p1.c: 128:     INTCONbits.PEIE = 1;
  2088  050C  170B               	bsf	11,6	;volatile
  2089  050D                     l64:
  2090  050D  0008               	return
  2091  050E                     __end_of_setup:
  2092                           
  2093                           	psect	text7
  2094  0419                     __ptext7:	
  2095 ;; *************** function _int_osc_MHz *****************
  2096 ;; Defined at:
  2097 ;;		line 13 in file "osc.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  freq            1    wreg     unsigned char 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  freq            1    5[COMMON] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         1       0       0       0       0
  2113 ;;      Temps:          2       0       0       0       0
  2114 ;;      Totals:         3       0       0       0       0
  2115 ;;Total ram usage:        3 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 2
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_setup
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125  0419                     _int_osc_MHz:	
  2126                           ;psect for function _int_osc_MHz
  2127                           
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  2131                           ;int_osc_MHz@freq stored from wreg
  2132  0419  00F5               	movwf	int_osc_MHz@freq
  2133  041A                     l1251:
  2134                           
  2135                           ;osc.c: 14:     switch(freq){
  2136  041A  2C3C               	goto	l1265
  2137  041B                     l1253:
  2138                           
  2139                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  2140  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2141  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2142  041D  080F               	movf	15,w	;volatile
  2143  041E  398F               	andlw	-113
  2144  041F  3840               	iorlw	64
  2145  0420  008F               	movwf	15	;volatile
  2146                           
  2147                           ;osc.c: 17:             break;
  2148  0421  2C52               	goto	l126
  2149  0422                     l1255:
  2150                           
  2151                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  2152  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2153  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2154  0424  080F               	movf	15,w	;volatile
  2155  0425  398F               	andlw	-113
  2156  0426  3850               	iorlw	80
  2157  0427  008F               	movwf	15	;volatile
  2158                           
  2159                           ;osc.c: 20:             break;
  2160  0428  2C52               	goto	l126
  2161  0429                     l1257:
  2162                           
  2163                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  2164  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2165  042A  1303               	bcf	3,6	;RP1=0, select bank1
  2166  042B  080F               	movf	15,w	;volatile
  2167  042C  398F               	andlw	-113
  2168  042D  3860               	iorlw	96
  2169  042E  008F               	movwf	15	;volatile
  2170                           
  2171                           ;osc.c: 23:             break;
  2172  042F  2C52               	goto	l126
  2173  0430                     l1259:
  2174                           
  2175                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  2176  0430  3070               	movlw	112
  2177  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0433  048F               	iorwf	15,f	;volatile
  2180                           
  2181                           ;osc.c: 26:             break;
  2182  0434  2C52               	goto	l126
  2183  0435                     l1261:
  2184                           
  2185                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  2186  0435  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0436  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0437  080F               	movf	15,w	;volatile
  2189  0438  398F               	andlw	-113
  2190  0439  3860               	iorlw	96
  2191  043A  008F               	movwf	15	;volatile
  2192                           
  2193                           ;osc.c: 29:             break;
  2194  043B  2C52               	goto	l126
  2195  043C                     l1265:
  2196  043C  0875               	movf	int_osc_MHz@freq,w
  2197  043D  00F3               	movwf	??_int_osc_MHz
  2198  043E  01F4               	clrf	??_int_osc_MHz+1
  2199                           
  2200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2201                           ; Switch size 1, requested type "simple"
  2202                           ; Number of cases is 1, Range of values is 0 to 0
  2203                           ; switch strategies available:
  2204                           ; Name         Instructions Cycles
  2205                           ; simple_byte            4     3 (average)
  2206                           ; direct_byte           11     8 (fixed)
  2207                           ; jumptable            260     6 (fixed)
  2208                           ;	Chosen strategy is simple_byte
  2209  043F  0874               	movf	??_int_osc_MHz+1,w
  2210  0440  3A00               	xorlw	0	; case 0
  2211  0441  1903               	skipnz
  2212  0442  2C44               	goto	l1875
  2213  0443  2C35               	goto	l1261
  2214  0444                     l1875:
  2215                           
  2216                           ; Switch size 1, requested type "simple"
  2217                           ; Number of cases is 4, Range of values is 1 to 8
  2218                           ; switch strategies available:
  2219                           ; Name         Instructions Cycles
  2220                           ; simple_byte           13     7 (average)
  2221                           ; direct_byte           35    11 (fixed)
  2222                           ; jumptable            263     9 (fixed)
  2223                           ;	Chosen strategy is simple_byte
  2224  0444  0873               	movf	??_int_osc_MHz,w
  2225  0445  3A01               	xorlw	1	; case 1
  2226  0446  1903               	skipnz
  2227  0447  2C1B               	goto	l1253
  2228  0448  3A03               	xorlw	3	; case 2
  2229  0449  1903               	skipnz
  2230  044A  2C22               	goto	l1255
  2231  044B  3A06               	xorlw	6	; case 4
  2232  044C  1903               	skipnz
  2233  044D  2C29               	goto	l1257
  2234  044E  3A0C               	xorlw	12	; case 8
  2235  044F  1903               	skipnz
  2236  0450  2C30               	goto	l1259
  2237  0451  2C35               	goto	l1261
  2238  0452                     l126:
  2239                           
  2240                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  2241  0452  140F               	bsf	15,0	;volatile
  2242  0453                     l131:
  2243  0453  0008               	return
  2244  0454                     __end_of_int_osc_MHz:
  2245                           
  2246                           	psect	text8
  2247  01B1                     __ptext8:	
  2248 ;; *************** function _USART_set *****************
  2249 ;; Defined at:
  2250 ;;		line 12 in file "USART.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  baudrate        4    8[BANK0 ] const unsigned long 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       4       0       0       0
  2265 ;;      Locals:         0       0       0       0       0
  2266 ;;      Temps:          0      12       0       0       0
  2267 ;;      Totals:         0      16       0       0       0
  2268 ;;Total ram usage:       16 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 3
  2271 ;; This function calls:
  2272 ;;		___lldiv
  2273 ;; This function is called by:
  2274 ;;		_setup
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278  01B1                     _USART_set:	
  2279                           ;psect for function _USART_set
  2280                           
  2281  01B1                     l1641:	
  2282                           ;incstack = 0
  2283                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  2284                           
  2285                           
  2286                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          5:     TXSTAbits.BRGH = 1;
  2287  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2288  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2289  01B3  1518               	bsf	24,2	;volatile
  2290                           
  2291                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  2292  01B4  1683               	bsf	3,5	;RP0=1, select bank3
  2293  01B5  1703               	bsf	3,6	;RP1=1, select bank3
  2294  01B6  1587               	bsf	7,3	;volatile
  2295  01B7                     l1643:
  2296                           
  2297                           ;USART.c: 17:     SPBRGH = 0;
  2298  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2299  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2300  01B9  019A               	clrf	26	;volatile
  2301  01BA                     l1645:
  2302                           
  2303                           ;USART.c: 18:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  2304  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2305  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2306  01BC  0852               	movf	USART_set@baudrate,w
  2307  01BD  00D6               	movwf	??_USART_set
  2308  01BE  0853               	movf	USART_set@baudrate+1,w
  2309  01BF  00D7               	movwf	??_USART_set+1
  2310  01C0  0854               	movf	USART_set@baudrate+2,w
  2311  01C1  00D8               	movwf	??_USART_set+2
  2312  01C2  0855               	movf	USART_set@baudrate+3,w
  2313  01C3  00D9               	movwf	??_USART_set+3
  2314  01C4  3002               	movlw	2
  2315  01C5                     u1195:
  2316  01C5  1003               	clrc
  2317  01C6  0DD6               	rlf	??_USART_set,f
  2318  01C7  0DD7               	rlf	??_USART_set+1,f
  2319  01C8  0DD8               	rlf	??_USART_set+2,f
  2320  01C9  0DD9               	rlf	??_USART_set+3,f
  2321  01CA                     u1190:
  2322  01CA  3EFF               	addlw	-1
  2323  01CB  1D03               	skipz
  2324  01CC  29C5               	goto	u1195
  2325  01CD  0859               	movf	??_USART_set+3,w
  2326  01CE  00CD               	movwf	___lldiv@divisor+3
  2327  01CF  0858               	movf	??_USART_set+2,w
  2328  01D0  00CC               	movwf	___lldiv@divisor+2
  2329  01D1  0857               	movf	??_USART_set+1,w
  2330  01D2  00CB               	movwf	___lldiv@divisor+1
  2331  01D3  0856               	movf	??_USART_set,w
  2332  01D4  00CA               	movwf	___lldiv@divisor
  2333  01D5  0852               	movf	USART_set@baudrate,w
  2334  01D6  00DA               	movwf	??_USART_set+4
  2335  01D7  0853               	movf	USART_set@baudrate+1,w
  2336  01D8  00DB               	movwf	??_USART_set+5
  2337  01D9  0854               	movf	USART_set@baudrate+2,w
  2338  01DA  00DC               	movwf	??_USART_set+6
  2339  01DB  0855               	movf	USART_set@baudrate+3,w
  2340  01DC  00DD               	movwf	??_USART_set+7
  2341  01DD  3002               	movlw	2
  2342  01DE                     u1205:
  2343  01DE  1003               	clrc
  2344  01DF  0DDA               	rlf	??_USART_set+4,f
  2345  01E0  0DDB               	rlf	??_USART_set+5,f
  2346  01E1  0DDC               	rlf	??_USART_set+6,f
  2347  01E2  0DDD               	rlf	??_USART_set+7,f
  2348  01E3                     u1200:
  2349  01E3  3EFF               	addlw	-1
  2350  01E4  1D03               	skipz
  2351  01E5  29DE               	goto	u1205
  2352  01E6  3040               	movlw	64
  2353  01E7  00DE               	movwf	??_USART_set+8
  2354  01E8  3042               	movlw	66
  2355  01E9  00DF               	movwf	??_USART_set+9
  2356  01EA  300F               	movlw	15
  2357  01EB  00E0               	movwf	??_USART_set+10
  2358  01EC  3000               	movlw	0
  2359  01ED  00E1               	movwf	??_USART_set+11
  2360  01EE  085A               	movf	??_USART_set+4,w
  2361  01EF  02DE               	subwf	??_USART_set+8,f
  2362  01F0  085B               	movf	??_USART_set+5,w
  2363  01F1  1C03               	skipc
  2364  01F2  0F5B               	incfsz	??_USART_set+5,w
  2365  01F3  29F5               	goto	u1211
  2366  01F4  29F6               	goto	u1212
  2367  01F5                     u1211:
  2368  01F5  02DF               	subwf	??_USART_set+9,f
  2369  01F6                     u1212:
  2370  01F6  085C               	movf	??_USART_set+6,w
  2371  01F7  1C03               	skipc
  2372  01F8  0F5C               	incfsz	??_USART_set+6,w
  2373  01F9  29FB               	goto	u1213
  2374  01FA  29FC               	goto	u1214
  2375  01FB                     u1213:
  2376  01FB  02E0               	subwf	??_USART_set+10,f
  2377  01FC                     u1214:
  2378  01FC  085D               	movf	??_USART_set+7,w
  2379  01FD  1C03               	skipc
  2380  01FE  0F5D               	incfsz	??_USART_set+7,w
  2381  01FF  2A01               	goto	u1215
  2382  0200  2A02               	goto	u1216
  2383  0201                     u1215:
  2384  0201  02E1               	subwf	??_USART_set+11,f
  2385  0202                     u1216:
  2386  0202  0861               	movf	??_USART_set+11,w
  2387  0203  00D1               	movwf	___lldiv@dividend+3
  2388  0204  0860               	movf	??_USART_set+10,w
  2389  0205  00D0               	movwf	___lldiv@dividend+2
  2390  0206  085F               	movf	??_USART_set+9,w
  2391  0207  00CF               	movwf	___lldiv@dividend+1
  2392  0208  085E               	movf	??_USART_set+8,w
  2393  0209  00CE               	movwf	___lldiv@dividend
  2394  020A  120A  118A  2221  120A  118A  	fcall	___lldiv
  2395  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2396  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0211  084A               	movf	?___lldiv,w
  2398  0212  1683               	bsf	3,5	;RP0=1, select bank1
  2399  0213  1303               	bcf	3,6	;RP1=0, select bank1
  2400  0214  0099               	movwf	25	;volatile
  2401  0215                     l1647:
  2402                           
  2403                           ;USART.c: 19:     TXSTAbits.SYNC = 0;
  2404  0215  1218               	bcf	24,4	;volatile
  2405  0216                     l1649:
  2406                           
  2407                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  2408  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0218  1798               	bsf	24,7	;volatile
  2411  0219                     l1651:
  2412                           
  2413                           ;USART.c: 22:     PIE1bits.RCIE = 1;
  2414  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2415  021A  1303               	bcf	3,6	;RP1=0, select bank1
  2416  021B  168C               	bsf	12,5	;volatile
  2417  021C                     l1653:
  2418                           
  2419                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  2420  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2421  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2422  021E  1318               	bcf	24,6	;volatile
  2423  021F                     l1655:
  2424                           
  2425                           ;USART.c: 27:     RCSTAbits.CREN = 1;
  2426  021F  1618               	bsf	24,4	;volatile
  2427  0220                     l148:
  2428  0220  0008               	return
  2429  0221                     __end_of_USART_set:
  2430                           
  2431                           	psect	text9
  2432  0221                     __ptext9:	
  2433 ;; *************** function ___lldiv *****************
  2434 ;; Defined at:
  2435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  divisor         4    0[BANK0 ] unsigned long 
  2438 ;;  dividend        4    4[BANK0 ] unsigned long 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  quotient        4    4[COMMON] unsigned long 
  2441 ;;  counter         1    8[COMMON] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  4    0[BANK0 ] unsigned long 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       8       0       0       0
  2452 ;;      Locals:         5       0       0       0       0
  2453 ;;      Temps:          1       0       0       0       0
  2454 ;;      Totals:         6       8       0       0       0
  2455 ;;Total ram usage:       14 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_USART_set
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465  0221                     ___lldiv:	
  2466                           ;psect for function ___lldiv
  2467                           
  2468  0221                     l1617:	
  2469                           ;incstack = 0
  2470                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2471                           
  2472  0221  3000               	movlw	0
  2473  0222  00F7               	movwf	___lldiv@quotient+3
  2474  0223  3000               	movlw	0
  2475  0224  00F6               	movwf	___lldiv@quotient+2
  2476  0225  3000               	movlw	0
  2477  0226  00F5               	movwf	___lldiv@quotient+1
  2478  0227  3000               	movlw	0
  2479  0228  00F4               	movwf	___lldiv@quotient
  2480  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2481  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2482  022B  084D               	movf	___lldiv@divisor+3,w
  2483  022C  044C               	iorwf	___lldiv@divisor+2,w
  2484  022D  044B               	iorwf	___lldiv@divisor+1,w
  2485  022E  044A               	iorwf	___lldiv@divisor,w
  2486  022F  1903               	skipnz
  2487  0230  2A32               	goto	u1121
  2488  0231  2A33               	goto	u1120
  2489  0232                     u1121:
  2490  0232  2A80               	goto	l1637
  2491  0233                     u1120:
  2492  0233                     l1619:
  2493  0233  01F8               	clrf	___lldiv@counter
  2494  0234  0AF8               	incf	___lldiv@counter,f
  2495  0235  2A43               	goto	l1623
  2496  0236                     l1621:
  2497  0236  3001               	movlw	1
  2498  0237  00F3               	movwf	??___lldiv
  2499  0238                     u1135:
  2500  0238  1003               	clrc
  2501  0239  0DCA               	rlf	___lldiv@divisor,f
  2502  023A  0DCB               	rlf	___lldiv@divisor+1,f
  2503  023B  0DCC               	rlf	___lldiv@divisor+2,f
  2504  023C  0DCD               	rlf	___lldiv@divisor+3,f
  2505  023D  0BF3               	decfsz	??___lldiv,f
  2506  023E  2A38               	goto	u1135
  2507  023F  3001               	movlw	1
  2508  0240  00F3               	movwf	??___lldiv
  2509  0241  0873               	movf	??___lldiv,w
  2510  0242  07F8               	addwf	___lldiv@counter,f
  2511  0243                     l1623:
  2512  0243  1FCD               	btfss	___lldiv@divisor+3,7
  2513  0244  2A46               	goto	u1141
  2514  0245  2A47               	goto	u1140
  2515  0246                     u1141:
  2516  0246  2A36               	goto	l1621
  2517  0247                     u1140:
  2518  0247                     l1625:
  2519  0247  3001               	movlw	1
  2520  0248  00F3               	movwf	??___lldiv
  2521  0249                     u1155:
  2522  0249  1003               	clrc
  2523  024A  0DF4               	rlf	___lldiv@quotient,f
  2524  024B  0DF5               	rlf	___lldiv@quotient+1,f
  2525  024C  0DF6               	rlf	___lldiv@quotient+2,f
  2526  024D  0DF7               	rlf	___lldiv@quotient+3,f
  2527  024E  0BF3               	decfsz	??___lldiv,f
  2528  024F  2A49               	goto	u1155
  2529  0250                     l1627:
  2530  0250  084D               	movf	___lldiv@divisor+3,w
  2531  0251  0251               	subwf	___lldiv@dividend+3,w
  2532  0252  1D03               	skipz
  2533  0253  2A5E               	goto	u1165
  2534  0254  084C               	movf	___lldiv@divisor+2,w
  2535  0255  0250               	subwf	___lldiv@dividend+2,w
  2536  0256  1D03               	skipz
  2537  0257  2A5E               	goto	u1165
  2538  0258  084B               	movf	___lldiv@divisor+1,w
  2539  0259  024F               	subwf	___lldiv@dividend+1,w
  2540  025A  1D03               	skipz
  2541  025B  2A5E               	goto	u1165
  2542  025C  084A               	movf	___lldiv@divisor,w
  2543  025D  024E               	subwf	___lldiv@dividend,w
  2544  025E                     u1165:
  2545  025E  1C03               	skipc
  2546  025F  2A61               	goto	u1161
  2547  0260  2A62               	goto	u1160
  2548  0261                     u1161:
  2549  0261  2A71               	goto	l1633
  2550  0262                     u1160:
  2551  0262                     l1629:
  2552  0262  084A               	movf	___lldiv@divisor,w
  2553  0263  02CE               	subwf	___lldiv@dividend,f
  2554  0264  084B               	movf	___lldiv@divisor+1,w
  2555  0265  1C03               	skipc
  2556  0266  0F4B               	incfsz	___lldiv@divisor+1,w
  2557  0267  02CF               	subwf	___lldiv@dividend+1,f
  2558  0268  084C               	movf	___lldiv@divisor+2,w
  2559  0269  1C03               	skipc
  2560  026A  0F4C               	incfsz	___lldiv@divisor+2,w
  2561  026B  02D0               	subwf	___lldiv@dividend+2,f
  2562  026C  084D               	movf	___lldiv@divisor+3,w
  2563  026D  1C03               	skipc
  2564  026E  0F4D               	incfsz	___lldiv@divisor+3,w
  2565  026F  02D1               	subwf	___lldiv@dividend+3,f
  2566  0270                     l1631:
  2567  0270  1474               	bsf	___lldiv@quotient,0
  2568  0271                     l1633:
  2569  0271  3001               	movlw	1
  2570  0272                     u1175:
  2571  0272  1003               	clrc
  2572  0273  0CCD               	rrf	___lldiv@divisor+3,f
  2573  0274  0CCC               	rrf	___lldiv@divisor+2,f
  2574  0275  0CCB               	rrf	___lldiv@divisor+1,f
  2575  0276  0CCA               	rrf	___lldiv@divisor,f
  2576  0277  3EFF               	addlw	-1
  2577  0278  1D03               	skipz
  2578  0279  2A72               	goto	u1175
  2579  027A                     l1635:
  2580  027A  3001               	movlw	1
  2581  027B  02F8               	subwf	___lldiv@counter,f
  2582  027C  1D03               	btfss	3,2
  2583  027D  2A7F               	goto	u1181
  2584  027E  2A80               	goto	u1180
  2585  027F                     u1181:
  2586  027F  2A47               	goto	l1625
  2587  0280                     u1180:
  2588  0280                     l1637:
  2589  0280  0877               	movf	___lldiv@quotient+3,w
  2590  0281  00CD               	movwf	?___lldiv+3
  2591  0282  0876               	movf	___lldiv@quotient+2,w
  2592  0283  00CC               	movwf	?___lldiv+2
  2593  0284  0875               	movf	___lldiv@quotient+1,w
  2594  0285  00CB               	movwf	?___lldiv+1
  2595  0286  0874               	movf	___lldiv@quotient,w
  2596  0287  00CA               	movwf	?___lldiv
  2597  0288                     l312:
  2598  0288  0008               	return
  2599  0289                     __end_of___lldiv:
  2600                           
  2601                           	psect	text10
  2602  0344                     __ptext10:	
  2603 ;; *************** function _Lcd_Init *****************
  2604 ;; Defined at:
  2605 ;;		line 68 in file "LCD.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, pclath, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0
  2621 ;;      Temps:          2       0       0       0       0
  2622 ;;      Totals:         2       0       0       0       0
  2623 ;;Total ram usage:        2 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 4
  2626 ;; This function calls:
  2627 ;;		_Lcd_Cmd
  2628 ;;		_Lcd_Port
  2629 ;; This function is called by:
  2630 ;;		_setup
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634  0344                     _Lcd_Init:	
  2635                           ;psect for function _Lcd_Init
  2636                           
  2637  0344                     l1271:	
  2638                           ;incstack = 0
  2639                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2640                           
  2641                           
  2642                           ;LCD.c: 69:     Lcd_Port(0x00);
  2643  0344  3000               	movlw	0
  2644  0345  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  2645  034A                     l1273:
  2646                           
  2647                           ;LCD.c: 70:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2648  034A  3007               	movlw	7
  2649  034B  00F7               	movwf	??_Lcd_Init+1
  2650  034C  307D               	movlw	125
  2651  034D  00F6               	movwf	??_Lcd_Init
  2652  034E                     u1497:
  2653  034E  0BF6               	decfsz	??_Lcd_Init,f
  2654  034F  2B4E               	goto	u1497
  2655  0350  0BF7               	decfsz	??_Lcd_Init+1,f
  2656  0351  2B4E               	goto	u1497
  2657  0352                     l1275:
  2658                           
  2659                           ;LCD.c: 71:     Lcd_Cmd(0x03);
  2660  0352  3003               	movlw	3
  2661  0353  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2662                           
  2663                           ;LCD.c: 72:     _delay((unsigned long)((5)*(1000000/4000.0)));
  2664  0358  30F9               	movlw	249
  2665  0359  00F6               	movwf	??_Lcd_Init
  2666  035A                     u1507:
  2667  035A  2B5B               	nop2
  2668  035B  0BF6               	decfsz	??_Lcd_Init,f
  2669  035C  2B5A               	goto	u1507
  2670  035D  2B5E               	nop2
  2671  035E  2B5F               	nop2
  2672  035F                     l1277:
  2673                           
  2674                           ;LCD.c: 73:     Lcd_Cmd(0x03);
  2675  035F  3003               	movlw	3
  2676  0360  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2677  0365                     l1279:
  2678                           
  2679                           ;LCD.c: 74:     _delay((unsigned long)((11)*(1000000/4000000.0)));
  2680  0365  2B66               	nop2	;2 cycle nop
  2681  0366                     l1281:
  2682                           
  2683                           ;LCD.c: 75:     Lcd_Cmd(0x03);
  2684  0366  3003               	movlw	3
  2685  0367  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2686  036C                     l1283:
  2687                           
  2688                           ;LCD.c: 77:     Lcd_Cmd(0x02);
  2689  036C  3002               	movlw	2
  2690  036D  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2691  0372                     l1285:
  2692                           
  2693                           ;LCD.c: 78:     Lcd_Cmd(0x02);
  2694  0372  3002               	movlw	2
  2695  0373  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2696  0378                     l1287:
  2697                           
  2698                           ;LCD.c: 79:     Lcd_Cmd(0x08);
  2699  0378  3008               	movlw	8
  2700  0379  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2701  037E                     l1289:
  2702                           
  2703                           ;LCD.c: 80:     Lcd_Cmd(0x00);
  2704  037E  3000               	movlw	0
  2705  037F  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2706  0384                     l1291:
  2707                           
  2708                           ;LCD.c: 81:     Lcd_Cmd(0x0C);
  2709  0384  300C               	movlw	12
  2710  0385  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2711  038A                     l1293:
  2712                           
  2713                           ;LCD.c: 82:     Lcd_Cmd(0x00);
  2714  038A  3000               	movlw	0
  2715  038B  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2716  0390                     l1295:
  2717                           
  2718                           ;LCD.c: 83:     Lcd_Cmd(0x06);
  2719  0390  3006               	movlw	6
  2720  0391  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  2721  0396                     l104:
  2722  0396  0008               	return
  2723  0397                     __end_of_Lcd_Init:
  2724                           
  2725                           	psect	text11
  2726  0533                     __ptext11:	
  2727 ;; *************** function _read_red *****************
  2728 ;; Defined at:
  2729 ;;		line 100 in file "main_master_p1.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0
  2745 ;;      Temps:          2       0       0       0       0
  2746 ;;      Totals:         2       0       0       0       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 2
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757  0533                     _read_red:	
  2758                           ;psect for function _read_red
  2759                           
  2760  0533                     l1429:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _read_red: [wreg+status,2+status,0]
  2763                           
  2764                           
  2765                           ;main_master_p1.c: 101:     if ((val>>1)== 'M'){
  2766  0533  087A               	movf	_val,w
  2767  0534  00F3               	movwf	??_read_red
  2768  0535  3001               	movlw	1
  2769  0536                     u915:
  2770  0536  1003               	clrc
  2771  0537  0CF3               	rrf	??_read_red,f
  2772  0538  3EFF               	addlw	-1
  2773  0539  1D03               	skipz
  2774  053A  2D36               	goto	u915
  2775  053B  304D               	movlw	77
  2776  053C  0673               	xorwf	??_read_red,w
  2777  053D  1D03               	btfss	3,2
  2778  053E  2D40               	goto	u921
  2779  053F  2D41               	goto	u920
  2780  0540                     u921:
  2781  0540  2D4C               	goto	l1433
  2782  0541                     u920:
  2783  0541                     l1431:
  2784                           
  2785                           ;main_master_p1.c: 102:         mov = val & 0x01;
  2786  0541  087A               	movf	_val,w
  2787  0542  3901               	andlw	1
  2788  0543  00F3               	movwf	??_read_red
  2789  0544  01F4               	clrf	??_read_red+1
  2790  0545  0873               	movf	??_read_red,w
  2791  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2792  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0548  00A0               	movwf	_mov
  2794  0549  0874               	movf	??_read_red+1,w
  2795  054A  00A1               	movwf	_mov+1
  2796                           
  2797                           ;main_master_p1.c: 103:     }
  2798  054B  2D55               	goto	l61
  2799  054C                     l1433:
  2800                           
  2801                           ;main_master_p1.c: 105:         temp = val;
  2802  054C  087A               	movf	_val,w
  2803  054D  00F3               	movwf	??_read_red
  2804  054E  01F4               	clrf	??_read_red+1
  2805  054F  0873               	movf	??_read_red,w
  2806  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0552  00E9               	movwf	_temp
  2809  0553  0874               	movf	??_read_red+1,w
  2810  0554  00EA               	movwf	_temp+1
  2811  0555                     l61:
  2812  0555  0008               	return
  2813  0556                     __end_of_read_red:
  2814                           
  2815                           	psect	text12
  2816  050E                     __ptext12:	
  2817 ;; *************** function _Lcd_Write_String *****************
  2818 ;; Defined at:
  2819 ;;		line 101 in file "LCD.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  a               1    wreg     PTR unsigned char 
  2822 ;;		 -> srow(20), frow(20), 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2825 ;;		 -> srow(20), frow(20), 
  2826 ;;  i               2    0[BANK0 ] int 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       0       0       0
  2837 ;;      Locals:         0       3       0       0       0
  2838 ;;      Temps:          1       0       0       0       0
  2839 ;;      Totals:         1       3       0       0       0
  2840 ;;Total ram usage:        4 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 4
  2843 ;; This function calls:
  2844 ;;		_Lcd_Write_Char
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850  050E                     _Lcd_Write_String:	
  2851                           ;psect for function _Lcd_Write_String
  2852                           
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2856                           ;Lcd_Write_String@a stored from wreg
  2857  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2858  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0510  00CC               	movwf	Lcd_Write_String@a
  2860  0511                     l1549:
  2861                           
  2862                           ;LCD.c: 102:     int i;;LCD.c: 103:     for (i = 0; a[i] != '\0'; i++)
  2863  0511  01CA               	clrf	Lcd_Write_String@i
  2864  0512  01CB               	clrf	Lcd_Write_String@i+1
  2865  0513  2D27               	goto	l1555
  2866  0514                     l1551:
  2867                           
  2868                           ;LCD.c: 104:         Lcd_Write_Char(a[i]);
  2869  0514  084A               	movf	Lcd_Write_String@i,w
  2870  0515  074C               	addwf	Lcd_Write_String@a,w
  2871  0516  00F8               	movwf	??_Lcd_Write_String
  2872  0517  0878               	movf	??_Lcd_Write_String,w
  2873  0518  0084               	movwf	4
  2874  0519  0800               	movf	0,w
  2875  051A  120A  118A  248D  120A  118A  	fcall	_Lcd_Write_Char
  2876  051F                     l1553:
  2877  051F  3001               	movlw	1
  2878  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0521  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0522  07CA               	addwf	Lcd_Write_String@i,f
  2881  0523  1803               	skipnc
  2882  0524  0ACB               	incf	Lcd_Write_String@i+1,f
  2883  0525  3000               	movlw	0
  2884  0526  07CB               	addwf	Lcd_Write_String@i+1,f
  2885  0527                     l1555:
  2886  0527  084A               	movf	Lcd_Write_String@i,w
  2887  0528  074C               	addwf	Lcd_Write_String@a,w
  2888  0529  00F8               	movwf	??_Lcd_Write_String
  2889  052A  0878               	movf	??_Lcd_Write_String,w
  2890  052B  0084               	movwf	4
  2891  052C  1383               	bcf	3,7	;select IRP bank0
  2892  052D  0800               	movf	0,w
  2893  052E  1D03               	btfss	3,2
  2894  052F  2D31               	goto	u1111
  2895  0530  2D32               	goto	u1110
  2896  0531                     u1111:
  2897  0531  2D14               	goto	l1551
  2898  0532                     u1110:
  2899  0532                     l113:
  2900  0532  0008               	return
  2901  0533                     __end_of_Lcd_Write_String:
  2902                           
  2903                           	psect	text13
  2904  048D                     __ptext13:	
  2905 ;; *************** function _Lcd_Write_Char *****************
  2906 ;; Defined at:
  2907 ;;		line 86 in file "LCD.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  a               1    wreg     unsigned char 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  a               1    7[COMMON] unsigned char 
  2912 ;;  y               1    6[COMMON] unsigned char 
  2913 ;;  temp            1    5[COMMON] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         3       0       0       0       0
  2925 ;;      Temps:          1       0       0       0       0
  2926 ;;      Totals:         4       0       0       0       0
  2927 ;;Total ram usage:        4 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 3
  2930 ;; This function calls:
  2931 ;;		_Lcd_Port
  2932 ;; This function is called by:
  2933 ;;		_Lcd_Write_String
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937  048D                     _Lcd_Write_Char:	
  2938                           ;psect for function _Lcd_Write_Char
  2939                           
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2943                           ;Lcd_Write_Char@a stored from wreg
  2944  048D  00F7               	movwf	Lcd_Write_Char@a
  2945  048E                     l1313:
  2946                           
  2947                           ;LCD.c: 87:     char temp, y;;LCD.c: 88:     temp = a & 0x0F;
  2948  048E  0877               	movf	Lcd_Write_Char@a,w
  2949  048F  390F               	andlw	15
  2950  0490  00F4               	movwf	??_Lcd_Write_Char
  2951  0491  0874               	movf	??_Lcd_Write_Char,w
  2952  0492  00F5               	movwf	Lcd_Write_Char@temp
  2953                           
  2954                           ;LCD.c: 89:     y = a & 0xF0;
  2955  0493  0877               	movf	Lcd_Write_Char@a,w
  2956  0494  39F0               	andlw	240
  2957  0495  00F4               	movwf	??_Lcd_Write_Char
  2958  0496  0874               	movf	??_Lcd_Write_Char,w
  2959  0497  00F6               	movwf	Lcd_Write_Char@y
  2960  0498                     l1315:
  2961                           
  2962                           ;LCD.c: 90:     RA0 = 1;
  2963  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2965  049A  1405               	bsf	5,0	;volatile
  2966  049B                     l1317:
  2967                           
  2968                           ;LCD.c: 91:     Lcd_Port(y >> 4);
  2969  049B  0876               	movf	Lcd_Write_Char@y,w
  2970  049C  00F4               	movwf	??_Lcd_Write_Char
  2971  049D  3004               	movlw	4
  2972  049E                     u715:
  2973  049E  1003               	clrc
  2974  049F  0CF4               	rrf	??_Lcd_Write_Char,f
  2975  04A0  3EFF               	addlw	-1
  2976  04A1  1D03               	skipz
  2977  04A2  2C9E               	goto	u715
  2978  04A3  0874               	movf	??_Lcd_Write_Char,w
  2979  04A4  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  2980  04A9                     l1319:
  2981                           
  2982                           ;LCD.c: 92:     RA1 = 1;
  2983  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2984  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2985  04AB  1485               	bsf	5,1	;volatile
  2986  04AC                     l1321:
  2987                           
  2988                           ;LCD.c: 93:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2989  04AC  3003               	movlw	3
  2990  04AD  00F4               	movwf	??_Lcd_Write_Char
  2991  04AE                     u1517:
  2992  04AE  0BF4               	decfsz	??_Lcd_Write_Char,f
  2993  04AF  2CAE               	goto	u1517
  2994  04B0                     l1323:
  2995                           
  2996                           ;LCD.c: 94:     RA1 = 0;
  2997  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2998  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2999  04B2  1085               	bcf	5,1	;volatile
  3000  04B3                     l1325:
  3001                           
  3002                           ;LCD.c: 95:     Lcd_Port(temp);
  3003  04B3  0875               	movf	Lcd_Write_Char@temp,w
  3004  04B4  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  3005  04B9                     l1327:
  3006                           
  3007                           ;LCD.c: 96:     RA1 = 1;
  3008  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3009  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3010  04BB  1485               	bsf	5,1	;volatile
  3011  04BC                     l1329:
  3012                           
  3013                           ;LCD.c: 97:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  3014  04BC  3003               	movlw	3
  3015  04BD  00F4               	movwf	??_Lcd_Write_Char
  3016  04BE                     u1527:
  3017  04BE  0BF4               	decfsz	??_Lcd_Write_Char,f
  3018  04BF  2CBE               	goto	u1527
  3019  04C0                     l1331:
  3020                           
  3021                           ;LCD.c: 98:     RA1 = 0;
  3022  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3023  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3024  04C2  1085               	bcf	5,1	;volatile
  3025  04C3                     l107:
  3026  04C3  0008               	return
  3027  04C4                     __end_of_Lcd_Write_Char:
  3028                           
  3029                           	psect	text14
  3030  02EC                     __ptext14:	
  3031 ;; *************** function _Lcd_Set_Cursor *****************
  3032 ;; Defined at:
  3033 ;;		line 50 in file "LCD.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  a               1    wreg     unsigned char 
  3036 ;;  b               1    6[COMMON] unsigned char 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  a               1    0[BANK0 ] unsigned char 
  3039 ;;  temp            1    3[BANK0 ] unsigned char 
  3040 ;;  y               1    2[BANK0 ] unsigned char 
  3041 ;;  z               1    1[BANK0 ] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, pclath, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3051 ;;      Params:         1       0       0       0       0
  3052 ;;      Locals:         0       4       0       0       0
  3053 ;;      Temps:          2       0       0       0       0
  3054 ;;      Totals:         3       4       0       0       0
  3055 ;;Total ram usage:        7 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 4
  3058 ;; This function calls:
  3059 ;;		_Lcd_Cmd
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065  02EC                     _Lcd_Set_Cursor:	
  3066                           ;psect for function _Lcd_Set_Cursor
  3067                           
  3068                           
  3069                           ;incstack = 0
  3070                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3071                           ;Lcd_Set_Cursor@a stored from wreg
  3072  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3073  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3074  02EE  00CA               	movwf	Lcd_Set_Cursor@a
  3075  02EF                     l1529:
  3076                           
  3077                           ;LCD.c: 50: void Lcd_Set_Cursor(char a, char b);LCD.c: 51: {;LCD.c: 52:     char temp, z
      +                          , y;;LCD.c: 53:     if (a == 1) {
  3078  02EF  034A               	decf	Lcd_Set_Cursor@a,w
  3079  02F0  1D03               	btfss	3,2
  3080  02F1  2AF3               	goto	u1071
  3081  02F2  2AF4               	goto	u1070
  3082  02F3                     u1071:
  3083  02F3  2B19               	goto	l1539
  3084  02F4                     u1070:
  3085  02F4                     l1531:
  3086                           
  3087                           ;LCD.c: 54:         temp = 0x80 + b - 1;
  3088  02F4  0876               	movf	Lcd_Set_Cursor@b,w
  3089  02F5  3E7F               	addlw	127
  3090  02F6  00F7               	movwf	??_Lcd_Set_Cursor
  3091  02F7  0877               	movf	??_Lcd_Set_Cursor,w
  3092  02F8  00CD               	movwf	Lcd_Set_Cursor@temp
  3093                           
  3094                           ;LCD.c: 55:         z = temp >> 4;
  3095  02F9  084D               	movf	Lcd_Set_Cursor@temp,w
  3096  02FA  00F7               	movwf	??_Lcd_Set_Cursor
  3097  02FB  3004               	movlw	4
  3098  02FC                     u1085:
  3099  02FC  1003               	clrc
  3100  02FD  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3101  02FE  3EFF               	addlw	-1
  3102  02FF  1D03               	skipz
  3103  0300  2AFC               	goto	u1085
  3104  0301  0877               	movf	??_Lcd_Set_Cursor,w
  3105  0302  00F8               	movwf	??_Lcd_Set_Cursor+1
  3106  0303  0878               	movf	??_Lcd_Set_Cursor+1,w
  3107  0304  00CB               	movwf	Lcd_Set_Cursor@z
  3108  0305                     l1533:
  3109                           
  3110                           ;LCD.c: 56:         y = temp & 0x0F;
  3111  0305  084D               	movf	Lcd_Set_Cursor@temp,w
  3112  0306  390F               	andlw	15
  3113  0307  00F7               	movwf	??_Lcd_Set_Cursor
  3114  0308  0877               	movf	??_Lcd_Set_Cursor,w
  3115  0309  00CC               	movwf	Lcd_Set_Cursor@y
  3116  030A                     l1535:
  3117                           
  3118                           ;LCD.c: 57:         Lcd_Cmd(z);
  3119  030A  084B               	movf	Lcd_Set_Cursor@z,w
  3120  030B  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  3121  0310                     l1537:
  3122                           
  3123                           ;LCD.c: 58:         Lcd_Cmd(y);
  3124  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0312  084C               	movf	Lcd_Set_Cursor@y,w
  3127  0313  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  3128                           
  3129                           ;LCD.c: 59:     } else if (a == 2) {
  3130  0318  2B43               	goto	l101
  3131  0319                     l1539:
  3132  0319  3002               	movlw	2
  3133  031A  064A               	xorwf	Lcd_Set_Cursor@a,w
  3134  031B  1D03               	btfss	3,2
  3135  031C  2B1E               	goto	u1091
  3136  031D  2B1F               	goto	u1090
  3137  031E                     u1091:
  3138  031E  2B43               	goto	l101
  3139  031F                     u1090:
  3140  031F                     l1541:
  3141                           
  3142                           ;LCD.c: 60:         temp = 0xC0 + b - 1;
  3143  031F  0876               	movf	Lcd_Set_Cursor@b,w
  3144  0320  3EBF               	addlw	191
  3145  0321  00F7               	movwf	??_Lcd_Set_Cursor
  3146  0322  0877               	movf	??_Lcd_Set_Cursor,w
  3147  0323  00CD               	movwf	Lcd_Set_Cursor@temp
  3148                           
  3149                           ;LCD.c: 61:         z = temp >> 4;
  3150  0324  084D               	movf	Lcd_Set_Cursor@temp,w
  3151  0325  00F7               	movwf	??_Lcd_Set_Cursor
  3152  0326  3004               	movlw	4
  3153  0327                     u1105:
  3154  0327  1003               	clrc
  3155  0328  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3156  0329  3EFF               	addlw	-1
  3157  032A  1D03               	skipz
  3158  032B  2B27               	goto	u1105
  3159  032C  0877               	movf	??_Lcd_Set_Cursor,w
  3160  032D  00F8               	movwf	??_Lcd_Set_Cursor+1
  3161  032E  0878               	movf	??_Lcd_Set_Cursor+1,w
  3162  032F  00CB               	movwf	Lcd_Set_Cursor@z
  3163  0330                     l1543:
  3164                           
  3165                           ;LCD.c: 62:         y = temp & 0x0F;
  3166  0330  084D               	movf	Lcd_Set_Cursor@temp,w
  3167  0331  390F               	andlw	15
  3168  0332  00F7               	movwf	??_Lcd_Set_Cursor
  3169  0333  0877               	movf	??_Lcd_Set_Cursor,w
  3170  0334  00CC               	movwf	Lcd_Set_Cursor@y
  3171  0335                     l1545:
  3172                           
  3173                           ;LCD.c: 63:         Lcd_Cmd(z);
  3174  0335  084B               	movf	Lcd_Set_Cursor@z,w
  3175  0336  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  3176  033B                     l1547:
  3177                           
  3178                           ;LCD.c: 64:         Lcd_Cmd(y);
  3179  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3180  033C  1303               	bcf	3,6	;RP1=0, select bank0
  3181  033D  084C               	movf	Lcd_Set_Cursor@y,w
  3182  033E  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  3183  0343                     l101:
  3184  0343  0008               	return
  3185  0344                     __end_of_Lcd_Set_Cursor:
  3186                           
  3187                           	psect	text15
  3188  05B7                     __ptext15:	
  3189 ;; *************** function _Lcd_Clear *****************
  3190 ;; Defined at:
  3191 ;;		line 45 in file "LCD.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 4
  3212 ;; This function calls:
  3213 ;;		_Lcd_Cmd
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219  05B7                     _Lcd_Clear:	
  3220                           ;psect for function _Lcd_Clear
  3221                           
  3222  05B7                     l1427:	
  3223                           ;incstack = 0
  3224                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3225                           
  3226                           
  3227                           ;LCD.c: 46:     Lcd_Cmd(0);
  3228  05B7  3000               	movlw	0
  3229  05B8  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  3230                           
  3231                           ;LCD.c: 47:     Lcd_Cmd(1);
  3232  05BD  3001               	movlw	1
  3233  05BE  120A  118A  2578  120A  118A  	fcall	_Lcd_Cmd
  3234  05C3                     l95:
  3235  05C3  0008               	return
  3236  05C4                     __end_of_Lcd_Clear:
  3237                           
  3238                           	psect	text16
  3239  0578                     __ptext16:	
  3240 ;; *************** function _Lcd_Cmd *****************
  3241 ;; Defined at:
  3242 ;;		line 36 in file "LCD.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  a               1    wreg     unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  a               1    5[COMMON] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       0       0       0       0
  3257 ;;      Locals:         1       0       0       0       0
  3258 ;;      Temps:          1       0       0       0       0
  3259 ;;      Totals:         2       0       0       0       0
  3260 ;;Total ram usage:        2 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 3
  3263 ;; This function calls:
  3264 ;;		_Lcd_Port
  3265 ;; This function is called by:
  3266 ;;		_Lcd_Clear
  3267 ;;		_Lcd_Set_Cursor
  3268 ;;		_Lcd_Init
  3269 ;;		_Lcd_Shift_Right
  3270 ;;		_Lcd_Shift_Left
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274  0578                     _Lcd_Cmd:	
  3275                           ;psect for function _Lcd_Cmd
  3276                           
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3280                           ;Lcd_Cmd@a stored from wreg
  3281  0578  00F5               	movwf	Lcd_Cmd@a
  3282  0579                     l1217:
  3283                           
  3284                           ;LCD.c: 36: void Lcd_Cmd(char a);LCD.c: 37: {;LCD.c: 38:     RA0 = 0;
  3285  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3286  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3287  057B  1005               	bcf	5,0	;volatile
  3288  057C                     l1219:
  3289                           
  3290                           ;LCD.c: 39:     Lcd_Port(a);
  3291  057C  0875               	movf	Lcd_Cmd@a,w
  3292  057D  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  3293  0582                     l1221:
  3294                           
  3295                           ;LCD.c: 40:     RA1 = 1;
  3296  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0584  1485               	bsf	5,1	;volatile
  3299  0585                     l1223:
  3300                           
  3301                           ;LCD.c: 41:     _delay((unsigned long)((4)*(1000000/4000.0)));
  3302  0585  30C7               	movlw	199
  3303  0586  00F4               	movwf	??_Lcd_Cmd
  3304  0587                     u1537:
  3305  0587  2D88               	nop2
  3306  0588  0BF4               	decfsz	??_Lcd_Cmd,f
  3307  0589  2D87               	goto	u1537
  3308  058A  2D8B               	nop2
  3309  058B  2D8C               	nop2
  3310  058C                     l1225:
  3311                           
  3312                           ;LCD.c: 42:     RA1 = 0;
  3313  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3314  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3315  058E  1085               	bcf	5,1	;volatile
  3316  058F                     l92:
  3317  058F  0008               	return
  3318  0590                     __end_of_Lcd_Cmd:
  3319                           
  3320                           	psect	text17
  3321  0556                     __ptext17:	
  3322 ;; *************** function _Lcd_Port *****************
  3323 ;; Defined at:
  3324 ;;		line 13 in file "LCD.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  a               1    wreg     unsigned char 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  a               1    3[COMMON] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       0       0       0
  3339 ;;      Locals:         1       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0
  3341 ;;      Totals:         1       0       0       0       0
  3342 ;;Total ram usage:        1 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 2
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_Lcd_Cmd
  3349 ;;		_Lcd_Init
  3350 ;;		_Lcd_Write_Char
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354  0556                     _Lcd_Port:	
  3355                           ;psect for function _Lcd_Port
  3356                           
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _Lcd_Port: [wreg]
  3360                           ;Lcd_Port@a stored from wreg
  3361  0556  00F3               	movwf	Lcd_Port@a
  3362  0557                     l1207:
  3363                           
  3364                           ;LCD.c: 13: void Lcd_Port(char a);LCD.c: 14: {;LCD.c: 15:     if (a & 1)
  3365  0557  1C73               	btfss	Lcd_Port@a,0
  3366  0558  2D5A               	goto	u571
  3367  0559  2D5B               	goto	u570
  3368  055A                     u571:
  3369  055A  2D5F               	goto	l81
  3370  055B                     u570:
  3371  055B                     l1209:
  3372                           
  3373                           ;LCD.c: 16:         RA2 = 1;
  3374  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3375  055C  1303               	bcf	3,6	;RP1=0, select bank0
  3376  055D  1505               	bsf	5,2	;volatile
  3377  055E  2D62               	goto	l82
  3378  055F                     l81:	
  3379                           ;LCD.c: 17:     else
  3380                           
  3381                           
  3382                           ;LCD.c: 18:         RA2 = 0;
  3383  055F  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0560  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0561  1105               	bcf	5,2	;volatile
  3386  0562                     l82:
  3387                           
  3388                           ;LCD.c: 20:     if (a & 2)
  3389  0562  1CF3               	btfss	Lcd_Port@a,1
  3390  0563  2D65               	goto	u581
  3391  0564  2D66               	goto	u580
  3392  0565                     u581:
  3393  0565  2D68               	goto	l83
  3394  0566                     u580:
  3395  0566                     l1211:
  3396                           
  3397                           ;LCD.c: 21:         RA3 = 1;
  3398  0566  1585               	bsf	5,3	;volatile
  3399  0567  2D69               	goto	l84
  3400  0568                     l83:	
  3401                           ;LCD.c: 22:     else
  3402                           
  3403                           
  3404                           ;LCD.c: 23:         RA3 = 0;
  3405  0568  1185               	bcf	5,3	;volatile
  3406  0569                     l84:
  3407                           
  3408                           ;LCD.c: 25:     if (a & 4)
  3409  0569  1D73               	btfss	Lcd_Port@a,2
  3410  056A  2D6C               	goto	u591
  3411  056B  2D6D               	goto	u590
  3412  056C                     u591:
  3413  056C  2D6F               	goto	l85
  3414  056D                     u590:
  3415  056D                     l1213:
  3416                           
  3417                           ;LCD.c: 26:         RA4 = 1;
  3418  056D  1605               	bsf	5,4	;volatile
  3419  056E  2D70               	goto	l86
  3420  056F                     l85:	
  3421                           ;LCD.c: 27:     else
  3422                           
  3423                           
  3424                           ;LCD.c: 28:         RA4 = 0;
  3425  056F  1205               	bcf	5,4	;volatile
  3426  0570                     l86:
  3427                           
  3428                           ;LCD.c: 30:     if (a & 8)
  3429  0570  1DF3               	btfss	Lcd_Port@a,3
  3430  0571  2D73               	goto	u601
  3431  0572  2D74               	goto	u600
  3432  0573                     u601:
  3433  0573  2D76               	goto	l87
  3434  0574                     u600:
  3435  0574                     l1215:
  3436                           
  3437                           ;LCD.c: 31:         RA5 = 1;
  3438  0574  1685               	bsf	5,5	;volatile
  3439  0575  2D77               	goto	l89
  3440  0576                     l87:	
  3441                           ;LCD.c: 32:     else
  3442                           
  3443                           
  3444                           ;LCD.c: 33:         RA5 = 0;
  3445  0576  1285               	bcf	5,5	;volatile
  3446  0577                     l89:
  3447  0577  0008               	return
  3448  0578                     __end_of_Lcd_Port:
  3449                           
  3450                           	psect	text18
  3451  0590                     __ptext18:	
  3452 ;; *************** function _master *****************
  3453 ;; Defined at:
  3454 ;;		line 71 in file "main_master_p1.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3468 ;;      Params:         0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0
  3470 ;;      Temps:          3       0       0       0       0
  3471 ;;      Totals:         3       0       0       0       0
  3472 ;;Total ram usage:        3 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; Hardware stack levels required when called: 1
  3475 ;; This function calls:
  3476 ;;		_USART_read
  3477 ;; This function is called by:
  3478 ;;		Interrupt level 1
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482  0590                     _master:	
  3483                           ;psect for function _master
  3484                           
  3485  0590                     i1l1141:
  3486                           
  3487                           ;main_master_p1.c: 73:     if(PIR1bits.RCIF){
  3488  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0591  1303               	bcf	3,6	;RP1=0, select bank0
  3490  0592  1E8C               	btfss	12,5	;volatile
  3491  0593  2D95               	goto	u56_21
  3492  0594  2D96               	goto	u56_20
  3493  0595                     u56_21:
  3494  0595  2D9E               	goto	i1l48
  3495  0596                     u56_20:
  3496  0596                     i1l1143:
  3497                           
  3498                           ;main_master_p1.c: 74:         val = USART_read();
  3499  0596  120A  118A  25CC  120A  118A  	fcall	_USART_read
  3500  059B  00F0               	movwf	??_master
  3501  059C  0870               	movf	??_master,w
  3502  059D  00FA               	movwf	_val
  3503  059E                     i1l48:
  3504  059E  0872               	movf	??_master+2,w
  3505  059F  008A               	movwf	10
  3506  05A0  0E71               	swapf	??_master+1,w
  3507  05A1  0083               	movwf	3
  3508  05A2  0EFE               	swapf	btemp,f
  3509  05A3  0E7E               	swapf	btemp,w
  3510  05A4  0009               	retfie
  3511  05A5                     __end_of_master:
  3512                           
  3513                           	psect	intentry
  3514  0004                     __pintentry:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _master: [wreg+pclath+cstack]
  3517                           
  3518  0004                     interrupt_function:
  3519  007E                     saved_w	set	btemp
  3520  0004  00FE               	movwf	btemp
  3521  0005  0E03               	swapf	3,w
  3522  0006  00F1               	movwf	??_master+1
  3523  0007  080A               	movf	10,w
  3524  0008  00F2               	movwf	??_master+2
  3525  0009  120A  118A  2D90   	ljmp	_master
  3526                           
  3527                           	psect	text19
  3528  05CC                     __ptext19:	
  3529 ;; *************** function _USART_read *****************
  3530 ;; Defined at:
  3531 ;;		line 30 in file "USART.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      unsigned char 
  3538 ;; Registers used:
  3539 ;;		wreg
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_master
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558  05CC                     _USART_read:	
  3559                           ;psect for function _USART_read
  3560                           
  3561  05CC                     i1l987:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _USART_read: [wreg]
  3564                           
  3565                           
  3566                           ;USART.c: 32:     return RCREG;
  3567  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  3568  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  3569  05CE  081A               	movf	26,w	;volatile
  3570  05CF                     i1l151:
  3571  05CF  0008               	return
  3572  05D0                     __end_of_USART_read:
  3573  007E                     btemp	set	126	;btemp
  3574  007E                     wtemp0	set	126
  3575                           
  3576                           	psect	idloc
  3577                           
  3578                           ;Config register IDLOC0 @ 0x2000
  3579                           ;	unspecified, using default values
  3580  2000                     	org	8192
  3581  2000  3FFF               	dw	16383
  3582                           
  3583                           ;Config register IDLOC1 @ 0x2001
  3584                           ;	unspecified, using default values
  3585  2001                     	org	8193
  3586  2001  3FFF               	dw	16383
  3587                           
  3588                           ;Config register IDLOC2 @ 0x2002
  3589                           ;	unspecified, using default values
  3590  2002                     	org	8194
  3591  2002  3FFF               	dw	16383
  3592                           
  3593                           ;Config register IDLOC3 @ 0x2003
  3594                           ;	unspecified, using default values
  3595  2003                     	org	8195
  3596  2003  3FFF               	dw	16383
  3597                           
  3598                           	psect	config
  3599                           
  3600                           ;Config register CONFIG1 @ 0x2007
  3601                           ;	Oscillator Selection bits
  3602                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3603                           ;	Watchdog Timer Enable bit
  3604                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3605                           ;	Power-up Timer Enable bit
  3606                           ;	PWRTE = OFF, PWRT disabled
  3607                           ;	RE3/MCLR pin function select bit
  3608                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3609                           ;	Code Protection bit
  3610                           ;	CP = OFF, Program memory code protection is disabled
  3611                           ;	Data Code Protection bit
  3612                           ;	CPD = OFF, Data memory code protection is disabled
  3613                           ;	Brown Out Reset Selection bits
  3614                           ;	BOREN = OFF, BOR disabled
  3615                           ;	Internal External Switchover bit
  3616                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3617                           ;	Fail-Safe Clock Monitor Enabled bit
  3618                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3619                           ;	Low Voltage Programming Enable bit
  3620                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3621                           ;	In-Circuit Debugger Mode bit
  3622                           ;	DEBUG = 0x1, unprogrammed default
  3623  2007                     	org	8199
  3624  2007  20D4               	dw	8404
  3625                           
  3626                           ;Config register CONFIG2 @ 0x2008
  3627                           ;	Brown-out Reset Selection bit
  3628                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3629                           ;	Flash Program Memory Self Write Enable bits
  3630                           ;	WRT = OFF, Write protection off
  3631  2008                     	org	8200
  3632  2008  3EFF               	dw	16127

Data Sizes:
    Strings     41
    Constant    10
    Data        2
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     31      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_2(CODE[19]), STR_1(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> srow(BANK0[20]), frow(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_set->___lldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _master in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_USART_set
    _USART_set->___lldiv

Critical Paths under _master in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _master in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _master in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _master in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4261
                                             30 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _read_red
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    20     11    2492
                                              7 BANK0     23    12     11
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     793
                           _Lcd_Init
                          _USART_set
                        _int_osc_MHz
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     573
                                              8 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _read_red                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _master                                               3     3      0       0
                                              0 COMMON     3     3      0
                         _USART_read
 ---------------------------------------------------------------------------------
 (6) _USART_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _read_red
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _USART_set
       ___lldiv
     _int_osc_MHz
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _master (ROOT)
   _USART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      56      12        0.0%
ABS                  0      0      56       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Sep 15 08:24:22 2022

                       pc 0002                        l61 0555                        l64 050D  
                      l81 055F                        l82 0562                        l83 0568  
                      l84 0569                        l92 058F                        l85 056F  
                      l86 0570                        l87 0576                        l95 05C3  
                      l89 0577                        fsr 0004       ___wmul@multiplicand 0075  
                     l101 0343                       l104 0396                       l113 0532  
                     l107 04C3                       l131 0453                       l126 0452  
                     l312 0288                       l148 0220                       l261 0108  
                     l272 01B0                       l276 04D0                       l278 04E8  
                     l548 03DC                       l558 0418                       l729 05B6  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RA3 002B                       _RA4 002C                       _RA5 002D  
                     u600 0574                       u601 0573                       u720 05AD  
                     u721 05AC                       u570 055B                       u730 05B3  
                     u571 055A                       u715 049E                       u731 05B2  
                     u580 0566                       u740 04CA                       u581 0565  
                     u741 04C9                       u590 056D                       u591 056C  
                     u920 0541                       u921 0540                       u770 04E4  
                     u915 0536                       u771 04E3                       u755 04D1  
                     u765 04D8                       _val 007A                       _mov 0020  
                     fsr0 0004                       indf 0000                      l1211 0566  
                    l1213 056D                      l1221 0582                      l1215 0574  
                    l1207 0557                      l1223 0585                      l1209 055B  
                    l1225 058C                      l1217 0579                      l1321 04AC  
                    l1313 048E                      l1219 057C                      l1331 04C0  
                    l1323 04B0                      l1315 0498                      l1251 041A  
                    l1325 04B3                      l1317 049B                      l1261 0435  
                    l1253 041B                      l1341 05B5                      l1333 05A6  
                    l1327 04B9                      l1319 04A9                      l1431 0541  
                    l1271 0344                      l1255 0422                      l1351 04D7  
                    l1335 05A7                      l1329 04BC                      l1433 054C  
                    l1281 0366                      l1273 034A                      l1257 0429  
                    l1265 043C                      l1353 04DE                      l1345 04C4  
                    l1337 05AD                      l1427 05B7                      l1531 02F4  
                    l1291 0384                      l1283 036C                      l1275 0352  
                    l1259 0430                      l1355 04E4                      l1347 04C6  
                    l1339 05B3                      l1541 031F                      l1533 0305  
                    l1429 0533                      l1293 038A                      l1285 0372  
                    l1277 035F                      l1621 0236                      l1701 0414  
                    l1349 04CA                      l1543 0330                      l1535 030A  
                    l1551 0514                      l1295 0390                      l1287 0378  
                    l1279 0365                      l1631 0270                      l1623 0243  
                    l1711 04F3                      l1545 0335                      l1537 0310  
                    l1529 02EF                      l1553 051F                      l1289 037E  
                    l1633 0271                      l1625 0247                      l1617 0221  
                    l1641 01B1                      l1721 050C                      l1713 04F6  
                    l1705 04E9                      l1801 0186                      l1547 033B  
                    l1539 0319                      l1555 0527                      l1635 027A  
                    l1627 0250                      l1619 0233                      l1651 0219  
                    l1643 01B7                      l1715 04F7                      l1707 04EF  
                    l1803 018D                      l1731 003E                      l1549 0511  
                    l1629 0262                      l1637 0280                      l1653 021C  
                    l1645 01BA                      l1717 04FC                      l1709 04F2  
                    l1661 03A1                      l1805 0191                      l1741 006F  
                    l1733 0043                      l1725 002C                      l1821 0293  
                    l1655 021F                      l1647 0215                      l1719 050B  
                    l1671 03C4                      l1663 03A4                      l1751 00B5  
                    l1743 0082                      l1735 0046                      l1727 0031  
                    l1807 019A                      l1831 02E2                      l1823 0298  
                    l1649 0216                      l1673 03CA                      l1665 03AB  
                    l1657 0397                      l1761 00CE                      l1753 00BD  
                    l1809 01AC                      l1745 0086                      l1737 0056  
                    l1729 0037                      l1825 02B8                      l1817 0289  
                    l1675 03CB                      l1667 03AF                      l1659 039B  
                    l1691 03F3                      l1683 03DD                      l1771 00EC  
                    l1755 00C1                      l1739 005A                      l1827 02CC  
                    l1819 028E                      l1677 03D2                      l1669 03B3  
                    l1693 03F7                      l1685 03E5                      l1781 011F  
                    l1773 00F6                      l1757 00C5                      l1749 0096  
                    l1829 02D4                      l1679 03D8                      l1695 0401  
                    l1687 03E8                      l1791 0140                      l1783 0123  
                    l1775 00FC                      l1767 00D0                      l1759 00C9  
                    l1697 0407                      l1689 03EF                      l1793 0146  
                    l1785 0129                      l1777 0102                      l1873 00AA  
                    l1875 0444                      l1699 040E                      l1795 014D  
                    l1787 0130                      l1779 0113                      l1797 0151  
                    l1789 0134                      l1799 0156                      STR_1 0464  
                    STR_2 047A                      u1110 0532                      u1111 0531  
                    u1120 0233                      u1200 01E3                      u1105 0327  
                    u1121 0232                      u1211 01F5                      u1140 0247  
                    u1212 01F6                      u1220 03A1                      u1141 0246  
                    u1213 01FB                      u1205 01DE                      u1221 03A0  
                    u1070 02F4                      u1214 01FC                      u1310 03F7  
                    u1071 02F3                      u1135 0238                      u1215 0201  
                    u1311 03F6                      u1160 0262                      u1216 0202  
                    u1240 03B3                      u1320 0401                      u1400 00F6  
                    u1161 0261                      u1241 03B2                      u1321 0400  
                    u1305 03E9                      u1401 00F5                      u1090 031F  
                    u1410 00FC                      u1091 031E                      u1155 0249  
                    u1235 03A5                      u1411 00FB                      u1180 0280  
                    u1260 03C4                      u1340 0414                      u1420 0102  
                    u1085 02FC                      u1181 027F                      u1165 025E  
                    u1261 03C3                      u1341 0413                      u1325 03FD  
                    u1421 0101                      u1190 01CA                      u1430 0113  
                    u1350 0037                      u1175 0272                      u1255 03B4  
                    u1335 0408                      u1431 0112                      u1351 0036  
                    u1280 03D8                      u1440 0129                      u1360 0056  
                    u1281 03D7                      u1265 03C0                      u1441 0128  
                    u1361 0055                      u1290 03E5                      u1450 0140  
                    u1370 0096                      u1507 035A                      u1195 01C5  
                    u1275 03CC                      u1291 03E4                      u1451 013F  
                    u1435 010F                      u1371 0095                      u1460 0146  
                    u1380 00C5                      u1517 04AE                      u1461 0145  
                    u1381 00C4                      u1470 019A                      u1390 00EB  
                    u1527 04BE                      u1471 0199                      u1391 00EA  
                    u1480 01AC                      u1537 0587                      u1481 01AB  
                    u1395 00E7                      u1497 034E                      i1l48 059E  
       ?_Lcd_Write_String 0070                      _main 0289                      _frow 0036  
                    _temp 0069                      btemp 007E                      _srow 0022  
                    start 000C        ??_Lcd_Write_String 0078           __end_of_Lcd_Cmd 0590  
                   ?_main 0070                     _ANSEL 0188           __end_of___lldiv 0289  
         __end_of___lwdiv 03DD                     i1l151 05CF           __end_of___lwmod 0419  
                   i1l987 05CC                     _RCREG 001A                     _SPBRG 0099  
                   u56_20 0596                     u56_21 0595                     _TRISA 0085  
                   _TRISB 0086           int_osc_MHz@freq 0075           __end_of_dpowers 0464  
         __end_of_isdigit 05B7                     _setup 04E9              ?_int_osc_MHz 0070  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 01B1          __end_of_Lcd_Init 0397          __end_of_Lcd_Port 0578  
             ?_USART_read 0070           __initialization 000F              __end_of_main 02EC  
                  ??_main 0068                    ?_setup 0070                    _ANSELH 0189  
                  i1l1141 0590                    i1l1143 0596                 ??_Lcd_Cmd 0074  
                  _SPBRGH 009A                    ___wmul 04C4                 ??___lldiv 0073  
               ??___lwdiv 0077                 ??___lwmod 0078                    _master 0590  
        __end_of_read_red 0556         __end_of_USART_set 0221                 ??_isdigit 0073  
                  saved_w 007E                 ??_sprintf 005C           Lcd_Set_Cursor@a 004A  
         Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 004C           Lcd_Set_Cursor@z 004B  
 __end_of__initialization 0025         __end_of_Lcd_Clear 05C4            __pcstackCOMMON 0070  
            __pidataBANK0 05D0             __end_of_setup 050E            _Lcd_Set_Cursor 02EC  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 0065  
                 ??_setup 0079                __pbssBANK0 0020                __pmaintext 0289  
                 ?___wmul 0073                __pintentry 0004                   ?_master 0070  
  __end_of_Lcd_Set_Cursor 0344                ??_Lcd_Init 0076                ??_Lcd_Port 0073  
              __stringtab 0454            _Lcd_Write_Char 048D                   _Lcd_Cmd 0578  
               ?_read_red 0070              ??_USART_read 0070                   ___lldiv 0221  
                 ___lwdiv 0397                   ___lwmod 03DD           ?_Lcd_Set_Cursor 0076  
                 __ptext1 0029                   __ptext2 05A5                   __ptext3 04C4  
                 __ptext4 03DD                   __ptext5 0397                   __ptext6 04E9  
                 __ptext7 0419                   __ptext8 01B1                   __ptext9 0221  
                 _dpowers 045A                   _isdigit 05A5                   _sprintf 0029  
                 clrloop0 05C5        __end_of_USART_read 05D0    __end_of_Lcd_Write_Char 04C4  
    end_of_initialization 0025                ??_read_red 0073           ___lldiv@divisor 004A  
         ___lldiv@counter 0078                 _RCSTAbits 0018                 Lcd_Port@a 0073  
               _USART_set 01B1           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 004C  
       Lcd_Write_String@i 004A                 _TXSTAbits 0098                 _Lcd_Clear 05B7  
          __end_of___wmul 04E9          _Lcd_Write_String 050E               _BAUDCTLbits 0187  
          __end_of_master 05A5       start_initialization 000F                ?_USART_set 0052  
       USART_set@baudrate 0052                ?_Lcd_Clear 0070                  ??___wmul 0077  
             __pdataBANK0 0069           Lcd_Write_Char@a 0077                  ??_master 0070  
         Lcd_Write_Char@y 0076               __pbssCOMMON 007A                 ___latbits 0002  
           __pcstackBANK0 004A             ??_int_osc_MHz 0073                  ?_Lcd_Cmd 0070  
             sprintf@flag 0061               sprintf@prec 0060          ___lwdiv@dividend 0075  
        ??_Lcd_Set_Cursor 0077                  ?___lldiv 004A                  ?___lwdiv 0073  
                ?___lwmod 004D                 __pstrings 0454                  ?_isdigit 0070  
             ??_USART_set 0056          ___lwdiv@quotient 004B                  ?_sprintf 0051  
       interrupt_function 0004            ___wmul@product 0077                 clear_ram0 05C4  
                _PIE1bits 008C       __end_of_int_osc_MHz 0454                  Lcd_Cmd@a 0075  
                _PIR1bits 000C               ??_Lcd_Clear 0076               __stringbase 0459  
       ___wmul@multiplier 0073          ??_Lcd_Write_Char 0074                  _Lcd_Init 0344  
                _Lcd_Port 0556  __end_of_Lcd_Write_String 0533        __end_of__stringtab 045A  
             _isdigit$838 0073                sprintf@val 0062           ___lwdiv@divisor 0073  
         ___lwdiv@counter 004A                  __ptext10 0344                  __ptext11 0533  
                __ptext12 050E                  __ptext13 048D                  __ptext14 02EC  
                __ptext15 05B7                  __ptext16 0578                  __ptext17 0556  
                __ptext18 0590                  __ptext19 05CC               _int_osc_MHz 0419  
                _read_red 0533                _INTCONbits 000B                  isdigit@c 0074  
      Lcd_Write_Char@temp 0075                  intlevel1 0000                 sprintf@ap 005F  
               sprintf@sp 0064          ___lwmod@dividend 004F          ___lldiv@dividend 004E  
               stringcode 0454                _OSCCONbits 008F        Lcd_Set_Cursor@temp 004D  
                sprintf@c 0067                  sprintf@f 0051          ___lldiv@quotient 0074  
         ___lwmod@divisor 004D           ___lwmod@counter 0079                  stringdir 0454  
                stringtab 0454                _USART_read 05CC  
